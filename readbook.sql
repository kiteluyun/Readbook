/*
Navicat MySQL Data Transfer

Source Server         : flask
Source Server Version : 50718
Source Host           : localhost:3306
Source Database       : readbook

Target Server Type    : MYSQL
Target Server Version : 50718
File Encoding         : 65001

Date: 2024-06-16 20:03:47
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `article`
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `articleid` int(11) NOT NULL AUTO_INCREMENT,
  `userid` int(11) DEFAULT NULL,
  `type` varchar(255) NOT NULL,
  `title` varchar(255) NOT NULL,
  `content` text NOT NULL,
  `thumbnail` varchar(255) NOT NULL,
  `readcount` int(11) NOT NULL,
  `replycount` int(11) NOT NULL,
  `recommended` int(11) NOT NULL,
  `hidden` int(11) NOT NULL,
  `drafted` int(11) NOT NULL,
  `checked` int(11) NOT NULL,
  `createtime` datetime NOT NULL,
  `updatetime` datetime NOT NULL,
  PRIMARY KEY (`articleid`),
  KEY `userid` (`userid`),
  CONSTRAINT `article_ibfk_1` FOREIGN KEY (`userid`) REFERENCES `users` (`userid`)
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('1', '2', '1', 'PHP简介（非常详细）', 'PHP（Hypertext Preprocessor，超文本预处理器）是一种通用开源脚本语言，其语法吸收了C语言、Java 和 Perl 的特点，利于学习，使用广泛，主要适用于 Web 开发领域。PHP 独特的语法混合了 C、Java、Perl 以及 PHP 自创的语法，它可以比 CGI 或者 Perl 更快速地执行动态网页。与其他的编程语言相比，PHP 是将程序嵌入到 HTML（标准通用标记语言下的一个应用）文档中去执行，执行效率比完全生成 HTML 标记的 CGI 要高许多。PHP 还可以执行编译后代码，编译可以达到加密和优化代码运行，使代码运行更快。2015 年 6 月，官方发布了 PHP 7Alpha 1 版本，同年 12 月 3 日发布 GA 版本，PHP 7 的发布对于 PHP 来说是具有里程碑意义的。在性能上，PHP 7 的执行效率是原来 PHP 5 的两倍左右，和 HHVM 相当。相对于 PHP 5.6.x，PHP 7 多了以下几个主要的新特性：·        提升性能：PHP 7 速度是 PHP 5.6 的两倍·        支持 64 位·        许多重大错误可以进行异常处理·        移除了旧的和不支持的 SAPIs 和扩展·        null 合并操作符（? ?）·        结合比较运算符（）·        标量类型声明·        匿名类 当然，PHP 7 相对于以前的版本还有很多不同之处，但是大部分是兼容以前版本的，所以大多情况下无须修改代码就可以迁移到 PHP 7。我们首先介绍 PHP 语言的优势、运行机制和原理，以及 PHP 7 的新特性，帮助读者对 PHP 有一个初步的认识。', '1.png', '2', '0', '0', '0', '0', '1', '2024-05-20 18:58:45', '2024-05-20 18:58:45');
INSERT INTO `article` VALUES ('2', '2', '1', 'PHP 语言的优势', 'PHP 语言主要有以下几点优势：1) PHP 学习入门快、开发成本低，语法相对简单，并且提供了丰富的类库，如用于图像处理的 GD 库、各种加密扩展（如 OpenSSL 和 Mcrypt 等），可以很方便地直接使用。很多库默认在安装 PHP 环境的时候都是自带的。2) PHP 结合 Linux、Nginx 或 Apache、MySQL 可以方便快捷地搭建一套系统，PHP 还支持直接调用系统命令，这样便可以用代码完成许多操作 Linux 的工作，如打包压缩、复制粘贴、重命名、执行 Linux 中 grep 查询筛选等。Nginx 是一个非常优秀的 Web 服务器软件，Nginx 可接收客户端请求，将 PHP 文件发送给 PHP 程序执行，Nginx 中的 PHP 采用 fastCGI 的形式运行脚本。3) PHP 支持使用 MySQL、MSSQL、SQLite 等多种数据库，其中与 MySQL 的结合使用最为流行。PHP 提供了3种连接 MySQL 的扩展，包括 MySQL 扩展、MySQLi 扩展和 PDO 扩展，其中：·        MySQL 扩展在 PHP 5.5 及以后的版本中不再支持；·        MySQLi 是 PHP 推出的专门用于链接 MySQL 的更加安全高效的扩展，并且提供了更高级的一些操作，完全支持面向对象；·        PDO 扩展是 PHP 推出的链接 MySQL 和其他类型的数据库的一种统一解决方案，可移植性很高，使用它可以灵活方便地切换不同类型的数据库，而不需变动更多的代码。 4) PHP 是解释执行的脚本语言，写完程序以后可以立即执行，不像 C、Java、C++ 等其他语言需要编译再执行，这使得 PHP 的开发效率更高。5) PHP 中使用到的配置文件相对简单，与 PHP 运行有关的配置文件常用的有 php-fpm.conf 和 php.ini 两个，并且配置参数也简单易懂。更改了 PHP 的配置文件不需要重新启动即可继续运行，因为 PHP 每次运行程序前都会主动加在配置文件中，这比 Java 等其他语言方便多了。6) PHP 作为最流行、使用最为广泛的 Web 开发语言，有着丰富的生态圈，有许多著名的开源框架可供使用，例如：·        官方的 Zend Framework、CakePHP、Yaf、Symfony 等；·        开源论坛有 Discuz！、PHPwind 等；·        开源博客 WordPress；·        开源网店系统如 Ecshop、ShopEx 等；·        开源的 SNS 系统如 UCHome、ThinkSNS 等。 基于这些优秀的开源系统，你可以方便快速地搭建一套 Web 站点。另外，活跃的社区氛围也能帮助你快速解决开发中遇到的问题。7) 结合 LVS 负载均衡、消息队列、数据库主从等技术，PHP 能够支持一般大型网站的应用，满足绝大多数场景下的应用开发。8) PHP 本身是由C语言开发的，在一些对性能有严苛要求的情况下，还可以使用C语言编写 PHP 的扩展来提升程序的执行速度，使用 PHP 完成主要业务的代码编写，使用C完成性能提升的需求，这使得可以保证软件开发效率的同时兼顾执行效率。在这种对软件开发速度和程序执行性能有极致追求的情况下，如果是其他语言，可能会让你束手无策，或者推倒重来。9) 国内的许多大公司，如百度、淘宝、360 等公司都广泛地使用 PHP 作为开发语言，在具体实践中已经取得了很大成功，有许多成功的经验可供借鉴。', '1.png', '0', '0', '1', '0', '0', '1', '2024-05-20 18:59:33', '2024-05-20 18:59:33');
INSERT INTO `article` VALUES ('3', '2', '1', 'PHP 的运行机制和原理', 'PHP 由内核 Zend 引擎和扩展层组成，其中：·        PHP 内核负责处理请求、完成文件流错误处理等操作，Zend 引擎可以将 PHP 程序文件转换成可在虚拟机上运行的机器语言；·        扩展层提供一些应用层操作需要的函数类库等，比如数组和 MySQL 数据库的操作等。 Zend 引擎是用C语言实现的，将 PHP 代码通过词法语法解析成可执行的 opcode 并实现相应的处理方法、基本的数据结构内存分配和管理等，对外提供相应的可供调用的 API 方法。Zend 引擎是 PHP 的核心，所有的外围功能都是围绕它实现的。扩展层通过组件的方式提供各种基础服务、内置函数，标准库都是通过它实现的。用户也可以编写自己的扩展来实现特定的需求。服务端应用编程接口（Server Application Programming Interface，SAPI），通过一系列钩子函数使得 PHP 可以和外围交互数据。我们平时编写的 PHP 程序就是通过不同的 SAPI 方式得到不同的应用模式，如通过 WebServer 实现的 Web 应用和在命令行下运行的脚本等。一段 PHP 程序被执行的时候会先被解析成 opcode 指令，然后在虚拟机中按顺序执行，由于 PHP 本身是用C语言开发的，所以其在执行的时候调用的都是C的函数。opcode 是 PHP 程序执行的最基本单位。HashTable 是 Zend 的核心数据结构，实现了 PHP 里几乎所有的功能，支持 key->value 查询，添加删除的复杂度是 O(1)，支持线性遍历和混合类型。在 HashTable 中既有 key->value 形式的散列结构，也有双向链表模式，使得它能够非常方便地支持快速查找和线性遍历。Zend 的散列结构是典型的 hash 表模型，通过链表的方式来解决冲突。Zend 的 HashTable 是一个自增长的数据结构，当 hash 表数目满了之后，其本身会动态地以2倍的方式扩容并重新布置元素位置，初始大小均为 8。另外，在进行 key->value 快速查找的时候，Zend 本身还做了一些优化，通过空间换时间的方式加快速度。比如在每个元素中都会用一个变量 nKeyLength 标识 key 的长度以做快速判定。Zend HashTable通过一个链表结构实现了元素的线性遍历。理论上，做遍历使用单向链表就够了，使用双向链表的主要目的是为了快速删除链表元素，避免遍历。PHP 是一门弱类型语言，本身不严格区分变量的类型。PHP 在声明变量的时候不需要指定类型。PHP在程序运行期间可能进行变量类型的隐式转换。和其他强类型语言一样，程序中也可以进行显式的类型转换。Zval 是 Zend 中另一个非常重要的数据结构，用来标识并实现 PHP 变量。Zval 主要由以下3部分组成：·        Type：指定了变量所述的类型（整数、字符串、数组等）；·        refcount&is_ref：用来实现引用计数；·        value：核心部分，存储了变量的实际数据。 Zval 用来保存一个变量的实际数据。因为要存储多种类型，所以 zval 是一个 union，也由此实现了弱类型。引用计数在内存回收、字符串操作等地方使用得非常广泛。PHP 中的变量就是引用计数的典型应用。Zval 的引用计数通过成员变量 is_ref 和 ref_count 实现。通过引用计数，多个变量可以共享同一份数据，避免频繁复制带来的大量消耗。在进行赋值操作时，Zend 将变量指向相同的 Zval，同时 ref_count++，在 unset 操作时，对应的 ref_count-1。只有 ref_count 为 0 时才会真正执行销毁操作。如果是引用赋值，Zend 就会修改 is_ref 为 1。PHP 变量通过引用计数实现变量共享数据，当试图写入一个变量时，Zend 若发现该变量指向的 Zval 被多个变量共享，则为其复制一份 ref_count 为 1 的 Zval，并递减原 Zval 的 refcount，这个过程称为“Zval分离”。可见，只有在有写操作发生时，Zend 才进行复制操作，因此也叫 copy-on-write（写时复制）。对于引用型变量，其要求和非引用型相反，引用赋值的变量间必须是捆绑的，修改一个变量就修改了所有捆绑变量。', '1.png', '1', '0', '1', '0', '0', '1', '2024-05-20 19:00:07', '2024-05-20 19:00:07');
INSERT INTO `article` VALUES ('4', '2', '1', 'PHP 7 的新特性', '相较于以前的版本，PHP 7 在语言语法层面和底层架构层面都有一些改进。在语法层面的改进主要是增加了一些新特性、移除了一些扩展、改变了错误异常处理等。在底层结构方面，改变了存储各种变量的 Zval 和 Zend_String 结构体、优化了 Zend Array 的 HashTable、改进了函数的调用机制等。这些底层结构的改进大幅提升了 PHP 的执行效率，使得其执行速度比 PHP 5 高出一倍左右。PHP 是一个弱类型的语言，不过在 PHP 7 中支持变量类型的定义，引入了一个开关指令 declare(strict_type=1)；。这个指令一旦开启，就会强制当前文件下的程序遵循严格的函数传参类型和返回类型。·        不开启 strict_type，PHP 将会尝试转换成要求的类型；·        开启之后，PHP 不再做类型转换，类型不匹配就会抛出错误。 要使用严格模式，一个 declare 声明指令必须放在文件的顶部。这意味着严格声明标量是基于文件可配的。这个指令不仅影响参数的类型声明，还影响函数的返回值声明。PHP 7 中的新特性主要有以下几点：.    标量类型声明。.    函数返回值类型声明。.    新增 null 合并运算符。.    新增组合比较符。.    支持通过 define() 定义常量数组。.    新增支持匿名类。.    支持 Unicode codepoint 转译语法。.    更好的闭包支持。.    为 unserialize() 提供过滤。.    新增加 IntlChar 类。.    支持 use 语句从同一 namespace 导入类、函数和常量。.    新增整除函数 intdiv()。.    session_start() 支持接收数组参数。', '1.png', '1', '0', '0', '0', '0', '1', '2024-05-20 19:00:42', '2024-05-20 19:00:42');
INSERT INTO `article` VALUES ('5', '2', '1', '了解更多PHP', '0另外，在 PHP 7 中，很多致命错误以及可恢复的致命错误都被转换为异常来处理了。这些异常继承自 Error 类，此类实现了 Throwable 接口（所有异常都实现了这个基础接口）。这也意味着，当发生错误的时候，以前代码中的一些错误处理的代码将无法被触发。因为在 PHP 7 版本中，已经使用抛出异常的错误处理机制了（如果代码中没有捕获 Error 异常，就会引发致命错误）。在 2013 年的时候，惠新宸和 Dmitry（PHP语言内核开发者之一）就曾经在 PHP 5.5 的版本上做过一个 JIT（Just In Time，即时编译，一种软件优化技术）的尝试。PHP 5.5 原来的执行流程是将 PHP 代码通过词法和语法分析编译成 opcode 字节码，然后 Zend 引擎读取这些 opcode 指令，逐条解析执行。他们在 opcode 环节后又引入了类型推断（TypeInf），然后通过 JIT 生成 ByteCodes 再执行。采用这种技术优化，PHP 的效率在实际项目中并没有取得明显的提升，于是他们重新设计了 PHP 的底层语言结构。Zval 是存储 PHP 中变量的载体，是一个C语言实现的结构体（struct），PHP 5 的 Zval 在内存中占据 24 个字节，而在 PHP 7 中优化后的 Zval 只占 16 个字节，这样变量的存储变得非常简单和高效。PHP 7 优化了数组的 HashTable 实现，PHP 5 的数组存储形式是一个支持双向链表的 HashTable，不仅支持通过数组的 key 来做 hash 映射访问元素，也能通过 foreach 以访问双向链表的方式遍历数组元素。当我们通过 key 值访问一个元素内容的时候，有时需要3次的指针跳跃才能找对需要的内容。最重要的一点是，这些数组元素的存储是分散在各个不同的内存区域的，在 CPU 读取的时候，因为它们很可能不在同一级缓存中，导致 CPU 不得不到下级缓存甚至内存区域查找，从而引起 CPU 缓存命中下降，进而增加更多的耗时。优化后的 Zend Array 最大的特点是整块的数组元素和hash映射表全部连接在一起，被分配在同一块内存中。如果是遍历一个整型的简单类型数组，效率会非常快，因为数组元素（Bucket）本身是连续分配在同一块内存里的，并且数组元素的 Zval 会把整型元素存储在内部，也不再有指针外链，全部数据都存储在当前内存区域内。当然，最重要的是它能够避免 CPU 缓存命中率下降。另外，PHP 7 还改进了函数的调用机制，通过优化参数传递的环节减少了一些指令，提高执行效率。', '1.png', '1', '0', '0', '0', '0', '1', '2024-05-20 19:01:24', '2024-05-20 19:01:24');
INSERT INTO `article` VALUES ('6', '2', '1', 'PHP的优点', 'PHP（Hypertext Preprocessor）是一种广泛使用的开源服务器端脚本语言，它在动态网页开发中扮演着重要的角色。但是，除了它的普及性，PHP还有许多其他的优点。本文将详细介绍PHP的优点以及如何通过实例来展示这些优点。 第一步：了解PHP的优点PHP有许多优点，包括： 易于学习：PHP的语法简单直观，对于初学者来说很容易上手。开源和免费：PHP是开源的，这意味着你可以自由地使用和修改它。同时，PHP也是免费的，这降低了开发成本。广泛的社区支持：由于PHP的流行，有一个庞大的开发者社区可以提供帮助和支持。丰富的文档和资源：PHP有大量的在线文档和教程，这使得学习和解决问题变得更容易。跨平台：PHP可以在多种操作系统上运行，包括Windows、Linux、Mac OS等。高性能：PHP是一种解释型语言，它的执行速度非常快。第二步：编写PHP代码下面是一个简单的PHP代码示例，用于计算两个数的和： 在这个例子中，$num1和$num2是变量，$sum是这两个变量的和，echo语句用于输出结果。 第三步：运行PHP代码要运行PHP代码，你需要一个支持PHP的服务器。如果你的电脑上没有安装PHP环境，你可以使用一些集成开发环境（IDE）或者在线的PHP运行环境。这些工具通常会提供一个内置的服务器，可以让你直接在本地机器上运行PHP代码。 第四步：查看结果当你运行上述代码后，你应该能在网页上看到“The sum is: 30”。这就是PHP代码执行的结果。 以上就是PHP的一些基本优点和一个简单的实例。虽然这个例子很简单，但是PHP的功能远不止于此。你可以通过学习更多的PHP知识，来实现更复杂的功能，如处理表单数据、与数据库交互、实现用户认证等。 总的来说，PHP是一种强大的服务器端脚本语言，它的优点是明显的。无论你是想成为一名Web开发者，还是只是想学习一种新的编程语言，PHP都是一个不错的选择。希望这篇文章能帮助你开始你的PHP学习之旅！', '1.png', '0', '0', '1', '0', '0', '1', '2024-05-20 19:02:03', '2024-05-20 19:02:03');
INSERT INTO `article` VALUES ('7', '2', '1', '搭建PHP本地开发环境', '什么是PHP本地开发环境PHP本地开发环境是指在个人计算机上模拟的服务器环境，这使得开发者能够在没有网络连接的情况下也能开发、测试和调试PHP应用程序。就像在你的电脑里装个小“服务器”，即使没网也能搞定PHP程序的开发和修修补补。这就是PHP本地开发环境的存在意义。 这种环境一般会包括PHP程序的运行基础、一个网页服务器（比如Apache或Nginx）、一个数据库服务器（比如MySQL或MariaDB），还有可能用到的其他工具和服务（像phpMyAdmin、Redis等）。搭这样一个环境的作用就是让你能在自己的电脑上模拟真实的网站运行情况，这样在你把网站真正放上网之前，可以先在电脑上好好检查一番，确保万无一失。  使用PHP本地开发环境可以给开发者带来很多便利，比如： 快速迭代：在本地环境中，开发者可以快速修改和测试代码，无需频繁地上传文件到远程服务器。 离线开发：开发者可以在没有互联网连接的情况下工作，这在旅行或处于无网络环境时特别有用。 环境控制：开发者可以自由配置本地环境，以匹配线上服务器的配置，确保应用的兼容性和稳定性。 安全性：在本地开发过程中，敏感数据（如数据库内容）不会被暴露在外部网络中，增加了项目的安全性。 如何创建PHP本地开发环境？创建PHP本地开发环境有两种方式： 一个是手动完成（比较复杂而且浪费时间所以不是很推荐） 一个是是通过安装集成开发环境（IDE）软件包来简化过程（比较常用） 下面我们就介绍几款方便易安装易用的集成开发环境给大家参考： XAMPP XAMPP是一个广泛使用的PHP开发环境，它是跨平台的，适用于Windows、Linux和Mac OS X。 XAMPP打包了Apache服务器、MySQL数据库、PHP和Perl，是一个一体化的软件包，非常适合初学者快速搭建开发环境。   优点: 适用于多种操作系统。 缺点: 对于大型或复杂的项目，可能不如专业服务器环境高效。 默认配置可能不够安全，需要手动调整以适用于生产环境。 只支持运行一个网站，不合适多项目环境。 没有免费SSL证书。 版本更新较慢。 安装使用 ServBay ServBay是专为macOS设计的本地Web开发环境，集成了最流行的Caddy服务器，MariaDB和PostgreSQL数据库，Redis、Memcached等NoSQL数据库，还有phpMyAdmin、adminer等数据库管理工具。它能通过本地DNS服务简化网络请求的路由和管理。此外，ServBay还包括一个独立的开发包，允许开发者重新编译和集成独特或自定义构建的软件，极大地增强了Web和PHP开发的流畅性和效率。 优点: 允许同时运行多个主机，提高开发效率。 提升本地开发的安全性。 支持自定义域名和本地DNS服务，以及重新编译和集成独特软件的能力。 占用系统资源少。 支持SSL证书和HTTPS访问。 缺点: 系统限制：仅适用于macOS用户。 安装使用 WampServer WampServer 是专为Windows操作系统设计的Web开发环境，集成了Apache服务器、MySQL数据库、PHP和phpMyAdmin。它的功能与XAMPP类似,提供了一个直观的用户界面，方便用户管理服务器配置和数据库。它支持快速切换PHP版本，使开发者能够轻松测试不同的PHP环境。 优点: 一站式安装，简化了开发环境的搭建过程。 可以轻松管理服务器设置，启停服务，无需深入了解后台配置。 缺点: 仅支持Windows操作系统。 更新滞后，可能需要用户手动更新以获取新功能和安全补丁。 安装使用 Laravel Homestead Laravel Homestead是一个官方推荐的Vagrant box，专为Laravel应用开发而设计，但也可以用于一般的PHP项目。它提供了一个完整的、统一的虚拟开发环境，无需在本地机器上安装PHP、Web服务器或任何其他服务器软件。 优点: 提供统一的开发环境，无需在本地安装额外的服务器软件。 特别为Laravel应用开发优化，但也适用于其他PHP项目。 基于Vagrant，支持多种主机操作系统。 缺点: 对于不熟悉Vagrant或虚拟机的用户，初始设置可能较为复杂。 资源占用：虚拟机可能占用较多系统资源。 架构较为复杂，维护复杂。 安装使用 Docker 虽然Docker不是专门为PHP开发设计的，但它提供了一种容器化的方式来创建、部署和运行应用程序。通过使用Docker，开发者可以很容易地在容器中安装PHP、Web服务器和数据库等，实现快速、一致的开发环境搭建。 优点: 提供一致的开发环境，易于部署和扩展。 支持Windows、Linux和Mac，容器在任何系统上表现一致。 相比虚拟机，Docker容器使用更少的资源。 缺点: 学习曲线长，需要理解容器化概念和Docker的操作。 对于初学者，容器的配置和网络设置可能较为复杂。 安装使用 PHP Built-in Web Server 从PHP 5.4.0开始，PHP内置了一个简单的Web服务器。通过运行一个简单的命令，开发者可以快速启动一个用于开发的Web服务器。这个内置的Web服务器非常适合小型项目或者在开发过程中进行快速测试。 优点: 无需额外安装，通过简单的命令即可启动。 适合小型项目或快速测试，占用资源少。 缺点: 不适合复杂的开发和测试需求。 性能不如专业的Web服务器。 安装使用 结语每款开发环境都有其独特的优势和适用场景。 选择哪一款取决于个人的开发习惯、项目需求以及操作系统平台，希望本文能帮助你找到最优最适合你的那个PHP本地开发环境。', '1.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:03:08', '2024-05-20 19:03:08');
INSERT INTO `article` VALUES ('8', '2', '1', '值得关注的十大高效PHP开发工具', '众所周知，在构建网站和Web应用方面，PHP是速度最快的服务器端脚本语言。它不但备受Python和Ruby开发人员的推崇，而且拥有详细的文档、丰富的脚本库、良好的框架支持、以及庞大的社区。目前，业界有许多能够增强PHP易用性、并提高编程效率的PHP工具。它们通过提供完美的IDE(集成开发环境)，让PHP开发人员能够高效地构建出酷炫且功能丰富的PHP项目。下面，我们来一起浏览其中最受开发社区关注的十大优秀PHP开发工具。1. PHPStorm轻巧、快速、流畅，是PHPStorm的基本特点。这款PHP IDE所支持的PHP框架包括：Zend Framework、Symfony、Yii、Laravel、CakePHP，以及诸如：Drupal、Magento和WordPress之类的内容管理系统(CMS)。除了能够实现代码重构、单元测试和调试之外，该IDE还能够为各种主流前端技术(如：CSS、HTML5和JavaScript)提供实时的编辑支持。同时，它还能够让开发人员轻松地与数据库、版本控制系统、远程部署、编写器、命令行工具和REST客户端相集成。PHPStorm特点：具有全面的代码完成度。实现了代码重排。提供零配置调试(Zero Configuration Debugging)。具有原生ZenCoding支持。支持使用VimEditor等大量带插件的扩展包。PHPStorm专长：支持的语言：PHP，JavaScript，Visual Basic，C，C ++和C#。支持的平台：Microsoft Windows，Linux和Mac OS X。2. Zend StudioZend Studio能够给Web开发人员带来极速体验。有了Zend Studio，开发人员不再需要为编写和调试代码，而花费更多的精力与时间。在支持PHP 7的基础上，它能够通过集成X-ray、Xdebug和Zend Debugger来调试PHP脚本。作为一款全面的PHP IDE，它可以被用于在服务器上部署包括云服务器在内的各种应用。此外，开发人员也可以通过Eclipse插件，来扩展Zend Studio。Zend Studio特点：支持索引和搜索PHP代码。具有更快的验证性能。支持Zend Framework和Zend_Tool的集成。支持Docker。支持Eclipse插件。Zend Studio专长：支持的语言：PHP，JavaScript，Visual Basic，C，C ++和C#。支持的平台：Microsoft Windows，Linux和MacOS。3. NuSphere PhpEDPhpED是由NuSphere专门提供的集成式PHP开发工具。该PHP IDE包含了高级的PHP编辑器、Profiler、PHP调试器、数据库客户端、以及代码洞见工具，这些实用程序能够方便开发人员对Web开发的全程进行调整。借助商业版PHP加速器--PhpExpress，PhpEd在加速应用开发的同时，成为了复杂网站和Web应用开发的理想选择。它支持JavaScript、HTML和CSS3，并能够为PHP 7.1提供大量的支持。它的重构功能可以协助开发人员改进手头上的各种代码。另外，PhpED还允许开发人员使用诸如Laravel、Zend和Yii之类的流行PHP框架。PhpED功能：采用PhpExpress来加速PHP应用。支持各种复合型文件扩展。能够提供并行调试。能够与phpUnit全面集成。可以重构PHP代码。PhpED专长：支持的语言：PHP，HTML，XML，CSS，Perl，Python和JavaScript。支持的平台：Windows，Web，Mac，Linux和iPad。4. NetbeansNetbeans不但能够支持多种语言，而且具有丰富的功能。曾被用于Java开发的NetBeans，如今已是一款轻量级的产品。它不但具有更快的速度，而且能够支持PHP的开发和其他编程语言(如C、C ++和HTML5)的扩展。在对大型Web应用的开发中，它能够很好地支持日语、俄语、英语、巴西语、葡萄牙语、以及简体中文。另外，作为一款开源的PHP开发工具，它能够与包括Zend、Symfony 2、CakePHP、FuelPHP、Smarty和WordPress在内的几乎所有流行的PHP框架一同使用。同时，NetBeans PHP IDE也提供了各种使用最新版本PHP来开发特定Web应用的功能。NetBeans功能：支持代码格式化和折叠。提供智能代码完成。带有Getter与Setter方法。能够测试与捕获代码的完成性。语法高亮显示。NetBeans专长：支持的语言：PHP，JavaScript，C，C ++和HTML5。支持的平台：Windows，MacOS，Linux和Solaris。5.Cloud9Cloud9是一个开源的云端IDE，它能够为数百种编程语言(包括PHP、C、C ++、JavaScript、以及Python等)提供开发环境。开发人员可以使用其预设的环境，迅速开展编程工作。通过浏览器的兼容性测试，以及实时预览等功能，用户可以构建各种Web应用程序。同时，他们可以使用Cloud9的协作编码功能，来与同事展开协作。通过在团队之间共享发环境，它能够协助配对程序，并实时跟踪各种输入。此外，Cloud 9为创建无服务器应用提供了完美的使用体验，用户能够在浏览器中进行编码，在远程定义各种资源，进而执行并调试无服务器应用程序。Cloud9功能：提供实时的语言分析。具有选项卡式的文件管理。带有集成调试器。内置图像编辑器。提供代码重新格式化。Cloud9专长：支持的语言：PHP，JavaScript，C，C ++和HTML5。支持的平台：Windows，Mac OS，Linux和Solaris。6. Aptana StudioAptana Studio也是一款开源的PHP开发工具，可被用于与各种服务器端及客户端的Web技术相集成。它能够支持PHP、Python、CSS3、Ruby on Rails、Ruby和HTML5。通过提供调试器和命令行界面，它能够让PHP应用的开发更为方便。PHP程序员可以利用SFTP、FTP和自定义IDE等方式，在同一个环境中构建和测试Web应用。通过利用Eclipse的灵活性，Aptana Studio的Web开发引擎包含了各个主流Web浏览器的多种元素范围与信息。作为一款高性能的PHP IDE，Aptana Studio利用其丰富的功能，提高了使用者的工作效率。Aptana Studio特色：可设置断点，控制执行，检查变量。支持最新的HTML5规范。通过合并实现了对端协同，以及推拉等操作。具有IDE的自定义功能。提供Git集成和内置终端。Aptana Studio专长：支持的语言：PHP，JavaScript，Ajax，HTML和Ruby on Rails。支持的平台：Windows，Linux，Mac OS X和Eclipse插件。7. CodeLobsterCodelobster软件公司的CodeLobster IDE是开发社区内受用户欢迎的PHP开发工具之一。它能够支持大多数PHP框架，包括：Symfony、Laravel、CodeIgniter、CakePHP、Magento、Joomla和Drupal。CodeLobster IDE简化了各种流程，用户无需记忆繁复的参数、函数、属性和标记名称，就能够实现包括HTML、JavaScript、PHP和CSS等自动完成的功能。用户可以通过使用其内部PHP调试器，在本地验证自己的代码。此外，该PHP工具还能够自动检测当前服务器的设置、并配置相关的文件。同时，它也能够支持诸如Drupal、WordPress、Magento和Joomla之类主流的CMS。CodeLobster功能带有语法高亮显示。提供SQL管理器。提供代码验证器。能够自动填充各种关键字、DOM元素及其属性。具有各种功能参数的显示。CodeLobster专长：支持的语言：PHP，JavaScript，HTML和CSS。支持的平台：Windows，Fedora，Linux，Ubuntu，Debian，Mac OS和Mint。8. Sublime TextSublime Text是PHP开发领域的一款优秀的测试编辑器。虽然它并不是一个IDE，但是通过安装某些插件和软件包，用户同样可以将其作为编辑器，来开发PHP应用。这款跨平台的源代码编辑器不但可以支持多种编程与标记语言，而且能够自定义各种UI工具包。Sublime Text功能提供可拆分式的编辑。能够即时地切换项目。提供更好的命令板界面。提供免打扰模式(Distraction free mode)。具有插件式API。Sublime Text特长：支持的语言：所有流行语言。支持的平台：Windows，Mac OS和Linux。9. PHPDebugbarPHPDebugbar也是一款PHP调试器，它可以与任何项目一起运行，并能够显示来自各种Web应用的数据。该PHP开发工具包括两个部分：可用于收集和提取对象与数据的mainDebugBar;预置了各种内置收集器的StandardDebugBar。通过与PHP协同使用，用户不但可以捕获JavaScript和HTML元素，还能够检查CSS元素并监视网络。作为一个开源的解决方案，PHPDebugbar可以从任何Web应用中分析数据，用户也能够籍此创建自己的集合。PHPDebugbar功能能够监控网络流量。能够处理AJAX请求。直接记录并用Debugbar进行调试。提供快速且易用的界面。具有预览配置和应用配置的功能。PHPDebugbar专长：支持的语言：PHP，Ruby，.Net和Java。支持PHP版本：PHP 5.5及更高版本。10. EclipseEclipse是一款排名靠前的PHP完备开发工具。用户可以自行选择各种插件，来轻松地开发和简化PHP代码。同时，它可以让用户自定义并扩展IDE，以满足不同项目的需要。作为一款跨平台的PHP编辑器，它既支持GUI、也支持非GUI的应用程序，因此它是各种大型PHP项目的首选。Eclipse功能具有语法高亮显示。具有内容辅助功能。提供各种代码模板。能够格式化代码。提供代码导航。Eclipse专长：支持的语言：ABAP，Ada，C，C ++，Haskell，COBOL，D，JavaScript，Fortran，Java，Julia，Perl，Lua，NATURAL，PHP，Prolog，Ruby，Python，R，Lasso，Rust，Scala，Groovy，Scheme ，Clojure和Erlang。支持的平台：Windows，Mac OS，Linux和Solaris。可见，你可以通过上面所列举的、具有不同功能与特性的工具，来快速轻松地创建自己的PHP网站。当然，这些工具只是PHP开发领域的一小部分，只要你愿意搜索，你还会发现更多付费、以及免费的PHP工具。', '1.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:03:51', '2024-05-20 19:03:51');
INSERT INTO `article` VALUES ('9', '2', '1', '再谈 PHP 未来之路', '<p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">前段时间我写过一篇博文</span><span style=\"text-decoration:underline;\"><span style=\"font-family:宋体;color:black;background:white\"><a href=\"https://www.cnblogs.com/linvanda/p/12807047.html\" target=\"https://www.cnblogs.com/linvanda/p/_blank\"><span style=\"color:black\"><span>《phper</span></span><span style=\"color:black\"><span>：敢问路在何方》</span></span></a></span></span><span style=\"font-family:宋体;color:#333333;background:white\">，分析了<span> PHPer </span>的困境以及<span> PHP </span>程序员的学习、进阶突破之路。同时我在知乎上也发过类似的提问。从大家的评论和回答看，大体分为以下几种情况：</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">认为<span> PHPer </span>的困境跟<span> PHP </span>语言无关，而取决于程序员自身的水平、能力；</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">认为<span> PHP </span>语言本身就不行，只适合初创企业、外包公司使用，程序员不应该从事<span> PHP </span>开发，应当选择更有前途的如<span> java</span>、<span>go </span>等语言；</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">认为<span> PHP </span>生态不行；</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">我在前面那篇文章中重点讨论了程序员（<span>PHPer</span>）面临的困境以及进阶之路，就<span> PHP </span>这门语言本身并没有做过多分析。文末，我得出的结论是“<span>PHPer </span>的唯一出路是不要把自己定位成<span> PHPer</span>”，这句话从狭义来理解，确实对<span> PHP </span>本身抱有悲观态度，但从广义理解，任何一个程序员，无论他使用的主编程语言是什么（哪怕是<span> java</span>、<span>c++</span>），要达到一定的高度，就不能把自己定位成那门语言的专职猎手。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">写完那篇文章后，看到一些留言，以及知乎的一些回答，我便陷入了对<span> PHP </span>语言本身的思索：这门语言现在到底处于生命周期的哪个阶段？其定位到底是怎样的？诸如<span> PHP7</span>、<span>Swoole </span>的出现到底能给<span> PHP </span>带来怎样的变化？</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">这些问题又让我失眠了一整夜，现在，我就自己的思考写下此文。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">当我们谈论语言的时候，我们到底是在谈论什么？</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">当我们拿<span> PHP </span>和<span> java </span>进行比较的时候，我们往往就两门语言本身进行比较，如一个是弱类型一个是强类型，一个是数组打天下一个是各种数据结构，甚至连花括号是不是换行写都会被讨论一番。但它们真正的区别并非这些。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">当我们谈论一门语言的时候，我们是在谈它的<strong>生态</strong>。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">“生态”一词在百度百科上的解释是：“生态一词，现在通常是指生物的生活状态。指生物在一定的自然环境下生存和发展的状态，也指生物的生理特性和生活习性。生态（<span>Eco-</span>）一词源于古希腊字，意思是指家（<span>house</span>）或者我们的环境”。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">生态具有如下特点：</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">生态是系统，由多个部分组成的完整体；</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">生态是开放系统；</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">生态具有动态平衡性；</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">维持其动态平衡的是源动力，源动力一旦消失，生态即消亡。例如地球生态系统的源动力是太阳能；一旦太阳消失，地球生态则不复存在（想想《流浪地球》）；</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">一种生物的生存状态不取决于生物自身，而取决于环境，就如恐龙的灭绝并非恐龙自身退化了，而是环境改变了（或者说恐龙的进化赶不上环境的变化）。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">一门语言的兴衰不取决于它自身，而取决于环境，具体来说是环境中源动力的强弱。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">PHP </span><span style=\"font-family:宋体;color:#333333;background:white\">应<span> Web </span>而生，考查其兴衰得考查互联网的发展。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">一般认为互联网大致经历了三个阶段：</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">阶段一：<span>Web1.0 </span>时代，传统的内容网站，如企业官网、行业门户网站等，网站自身产生内容，用户仅查看内容；</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">阶段二：<span>Web2.0 </span>时代，用户参与内容的创建，如论坛、博客。阶段一和阶段二都是内容为主，服务为辅（虽然内容的产生方式有所不同）；</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">阶段三：移动互联网时代，信息流、内容与服务并存；</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">以上三个阶段的演化中，用户参与度越来越高，交互方式越来越丰富，网站流量越来越大。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">阶段一和阶段二是<span> PHP </span>的黄金时代，从阶段二开始悄悄发生变化，而到了阶段三，<span>PHP </span>的黄金时代基本结束。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">PHP </span><span style=\"font-family:宋体;color:#333333;background:white\">这门语言的特点是“简单、实用”，入行门槛极低，一个编程小白，一周入门，两天出个网站。一个典型的例子，在数据结构上，不像其他语言有<span> Array</span>、<span>List</span>、<span>Map</span>、<span>Set</span>，<span>PHP </span>一个<span> Array </span>搞定所有的情况。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">PHP </span><span style=\"font-family:宋体;color:#333333;background:white\">的这种“简单”是通过牺牲性能为代价的。由于需要简单，不能有各种类型限制，<span>PHP </span>必须是动态语言；由于需要简单，能封装则封装，一个<span> file_x_contents </span>搞定文件（甚至是网络）读写（该函数是一次性将文件全部加载到内存中，很多人开发不考虑其局限性而用在所有场景，导致内存溢出）；由于<span> Array </span>承包了所有集合型数据结构，其底层需要做各种处理不说，业务层也无法自主选择更合适的数据结构做针对性的优化（虽然后来<span> SPL </span>提供了一些基本数据结构）。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">PHP </span><span style=\"font-family:宋体;color:#333333;background:white\">的这种“简单”还牺牲了另一样东西：程序员的专业素质。<span>PHP </span>程序员根本不需要去了解真正的<span> Array </span>和<span> List </span>有什么区别，也不需要去管数据流、缓冲区。从长期来看，这一点是致命的，它使得<span> PHP </span>生态中的重要一环很脆弱，很可能是导致<span> PHP </span>最终衰落的真正因素。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">在<span> Web1.0 </span>时代，一方面内容产生者是网站自身，另一方面人们只能通过桌面浏览器上网，这些因素使得这个阶段绝大部分公司根本不会遇到高并发等性能问题，而且业务的简单性使得单体应用足以应付一切，因而这个阶段<span> PHP </span>的缺陷根本不足为患。于是，<span>PHP </span>的优势（简单上手、快速开发）让这门语言大行其道，什么<span> JSP</span>、<span>ASP</span>，根本不是对手。那个时期，人们谈论<span> java</span>、<span>C# </span>时，基本是在谈<span> ERP</span>，只有<span> PHP </span>才是<span> Web</span>。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">到了<span> 2.0 </span>时代，论坛、博客、<span>SNS </span>的出现，使得用户创建内容成为可能。由于用户的积极参与，网站服务器流量相对于<span> 1.0 </span>时代有了突增，特别是<span> SNS </span>的信息流特性，使得服务器面临相当的挑战。不过由于人们仍然是通过<span> PC </span>浏览器上网，在一定程度上限制了使用频率。这个时期，一些大公司针对<span> PHP </span>的性能缺陷做了自己的改造，如新浪的各种<span> c </span>扩展（<span>yaf</span>、<span>yar </span>等），<span>facebook </span>的<span> HVVM</span>。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">在这两个黄金时代，<span>PHP </span>世界涌现了大量的经典开源项目：<span>WordPress</span>、<span>ecshop</span>、<span>Magento</span>、<span>Discuz</span>、<span>Thinkphp</span>、<span>Yii </span>等。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">彻底结束掉<span> PHP </span>黄金时代的是移动互联网的到来。<span>iphone </span>改变了世界，也改变了<span> PHP </span>的命运。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">移动互联网时代，人们随时随地都能上网，而且几乎每人一部手机，这带来的直接效果就是<span> Web </span>使用需求出现了数量级的增长。另外，移动互联网时代的另一个特点是内容<span>+</span>服务的一体化，网站不再只是提供内容，还提供服务（如各种<span> O2O</span>），因而在使用频率、交互体验上的需求都大大增强。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">举个例子，在<span> 1.0 </span>时代，浏览器和服务器根本不需要建立长连接，<span>2.0 </span>时代，由于信息流的出现，要求有轮询机制，但由于当时无论是浏览器还是<span> PHP </span>都不支持长连接，人们想了各种奇淫技巧来实现轮询。移动互联网时代，浏览器端有了<span> WebSocket</span>，悲剧的是<span> PHP </span>本身却不支持<span> WebSocket</span>（由于<span> PHP </span>的运行机制是一次请求后进程就结束了，在语言核心层面无法提供<span> WebSocket </span>机制。要想在核心层面支持<span> WebSocket</span>，必须改造<span> PHP </span>的整个运行机制，这几乎是不可能的）。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">至此，一方面<span> PHP </span>的性能问题成了致命问题，另一方面<span> PHP </span>各种“方便”的机制（如由<span> php-fpm </span>代替<span> PHP </span>脚本自身的常驻进程）满足不了新的场景需求，反倒成了桎梏。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">在移动互联、万物成网的大背景下，微服务应运而生。一般认为微服务本身并非新的概念，早期的<span> SOA </span>就有其身影。不过我们谈论一个概念本身到底新不新没有意义（就好比有人认为中国的勾三股四弦五的发现比希腊的毕达哥拉斯定理要早，于是认为该定理是中国人发现的；有人认为中国的阴阳学说含有二进制思想，便认为二进制是中国人发明的），重要的是一个概念何时形成了一套完整的体系，以及是如何来解决实际问题的。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">微服务架构是相对单体架构来说的。我们先说说微服务的缺点：服务间调用关系复杂、难治理、问题排查复杂、分布式事务问题等。既然有这么多缺点，为啥微服务架构当今能大行其道？原因在于单体架构解决不了当今面临的问题：巨大而复杂的业务群、高并发、高可用的系统需求。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">微服务给<span> PHP </span>带来什么呢？</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">当我们将单体架构拆解成一个个小的服务的时候，我们来考查一下编程语言的选择，看看<span> PHP </span>还是不是最佳选择：</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">首先微服务要轻量化。</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">其次服务要被多个业务端调用，其运行要足够快。</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">另外当服务间通信非常频繁时，通信协议要保持高效，此时<span> HTTP </span>协议并非最佳，很多公司倾向于<span> RPC </span>协议。</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">后端服务相对于前面的业务层来说，变动频率相对要低一些，因而可以适当地牺牲一些开发效率。</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">要有较成熟的生态和框架支持（成熟的服务治理生态）。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">从上面几点来看，<span>PHP </span>并非最佳选择：</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">传统的<span> PHP </span>架构是<span> nginx + php-fpm + PHP script</span>，显然不够轻量，成百上千个服务都驮着这么厚厚的一层壳，显然存在资源浪费问题。</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">PHP </span><span style=\"font-family:宋体;color:#333333;background:white\">作为脚本语言，由于存在脚本解析消耗，运行速度上赶不上<span> java</span>、<span>C++ </span>等静态语言（不过在<span> PHP </span>引入<span> opcode cache </span>后情况得到了很大改善，而且对于<span> Web </span>来说大部分时候都是<span> I/O </span>密集型操作，语言本身的性能影响对于绝大部分的公司来说并非主要问题————不过一方面心理学研究表明人类的认知并非完全理性的，人们认为<span> PHP </span>比<span> java </span>性能差那就是差，不管实际差多少（这就好比我们认为大品牌的东西一定比小品牌的好一样，编程语言的世界也有品牌效应））。</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">PHP </span><span style=\"font-family:宋体;color:#333333;background:white\">核心没有提供现成的<span> RPC </span>方案，但可以通过扩展解决，这不是问题。问题是传统的<span> PHP </span>架构（<span>nginx + fpm + script</span>，一次请求完成后工作进程即结束）并不能很好地应用<span> RPC </span>通信的优势。</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">在生态和框架上，<span>Swoole </span>貌似是个不错的选择，不过<span> Swoole </span>的微服务生态目前尚不成熟。</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">大部分的<span> PHP </span>程序员对服务化比较陌生（以及对性能、可靠性等非功能性需求的普遍漠视），上手较慢。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">综合考虑，大部分公司进行服务化的时候，会选用主流静态语言（<span>java</span>、<span>C++ </span>以及后起之秀<span> golang </span>等）做服务，<span>PHP </span>更多是来开发中间的业务聚合系统来调用这些服务。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">至此，<span>PHP </span>走下“神坛”，官方那句“<span>PHP </span>是有史以来最好的语言”永成过去式。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">不少人认为，<span>PHP7 </span>和<span> Swoole </span>给<span> PHP </span>在服务化时代带来新希望，因为理论上，上面提到的问题<span> PHP7 </span>和<span> Swoole </span>都能较好的解决。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">首先<span> PHP7 </span>带来了极大的性能提升，而且引入强类型、严格模式等新特性，使得<span> PHP </span>越来越像强类型语言。其次<span> Swoole </span>的出现使得<span> PHP </span>很容易像<span> java</span>、<span>go </span>那样实现常驻进程服务而不需要依赖<span> nginx + php-fpm</span>，那么 由“<span>nginx + php-fpm + script</span>” 的<span> CGI </span>模式在服务化时遇到的问题也都得到了很好的解决。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">那么，<span>PHP7</span>（以及即将到来的<span> PHP8 </span>的<span> JIT </span>特性）和<span> Swoole </span>能给<span> PHP </span>带来第二个黄金时代吗？</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">个人认为不能。还是那句话，当我们谈论语言时，实际上是在谈论生态。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">编程语言的生态系统中有个很重要的角色：开发者群体。<span>PHP </span>自出生时的目标就是“简单、强大、实用”，实现了高度的封装，让开发人员专心面对业务。这对工程是好事，对开发人员的成长（以及开发人员生态）来说却不是。绝大部分的<span> PHPer </span>都是业务工程师，几乎所有工作都是各种业务的<span> CRUD</span>，很少涉及稍底层的东西，也鲜有关乎设计、架构的。在我周围的，以及面试遇到的，大部分人根本不了解设计模式、数据结构、算法、计算机原理，写出来的代码也仅仅是实现了业务的功能性需求，很少考虑非功能性需求。另外，在传统<span> PHP </span>的<span> CGI </span>模式下，<span>PHP </span>脚本并不需要考虑自我恢复、自我保护能力如限流、重试、异步等这些在微服务架构下必须考虑的东西。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">另外，由于大部分<span> PHP </span>程序员平时都是使用<span> MVC </span>框架提供的功能实现<span> CRUD</span>，较少进行对象建模（<span>PHP </span>并非生来就是面向对象语言，<span>OO </span>特性是后面加进去的），导致大部分有相当工作经验的<span> PHPer </span>的建模能力都很弱，而微服务的一个重要工作就是对单体项目按业务领域进行拆分、建模，这对<span> PHPer </span>来说是个相当大的挑战。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">一个结果是，<span>PHP </span>程序员普遍专业素质都很弱，根本胜任不了复杂的系统架构————这里的复杂性有两个层面：技术层面和业务层面。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">PHP7 </span><span style=\"font-family:宋体;color:#333333;background:white\">和<span> Swoole </span>虽然弥补了语言自身的短板，却弥补不了生态中非语言部分的缺陷。有人认为这些缺陷是历史造成的，不能代表未来。万物的生命都是连续的、演化的，历史往往决定了未来，虽然身处现在的我们察觉不出。既然<span> PHP </span>生态在解决复杂系统问题时不具备优势，那么公司就会自然而然地选择其它更具优势的生态系统，自此便形成恶心循环（现实中我们遇到的情况是，很多使用<span> PHP </span>作为主要语言的中小公司业务规模上来后，不得不从外面聘请架构师，这些架构师大部分都是<span> java </span>出身，到公司第一件事就是强行<span> PHP </span>转<span> java</span>）。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">有人可能觉得我是<span> PHP </span>黑，毕竟我也没有做过严格的调查来得出上面的结论。但我们可以通过一些现象管中窥豹：</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">我们可以很容易找到用<span> java</span>、<span>C++ </span>写的设计模式、数据结构与算法方面的畅销书，却几乎找不到<span> PHP </span>的。</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">我们在博客园、<span>CSDN </span>等技术博客上能看到大量<span> java</span>、<span>C++</span>、<span>C# </span>程序员的博客，却很少看到<span> PHP </span>的。</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">我们看到技术博客上大量<span> java </span>程序员在谈论各种设计、服务、“三高”架构，却很少见到<span> PHP </span>的。</span></p><p style=\"margin-left:32px;line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">我们能看到<span> java</span>、<span>C++ </span>程序员到处参加各种技术峰会，却很少见到<span> PHPer</span>（除了<span> PHP </span>自己的专项会议）。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">你会觉得仅凭<span> PHP7 </span>与<span> Swoole </span>能让几乎不谈设计模式、不研究数据结构与算法、很少写博客、很少参加峰会的<span> PHPer </span>们开拓出一片服务化的新天地吗？</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">PHP </span><span style=\"font-family:宋体;color:#333333;background:white\">曾经辉煌过，在移动互联网之前，在单体为王的时代，就像<span> Delphi </span>在<span> Windows </span>桌面应用为王的时代取得的辉煌一样。现实的需求是语言生态系统的源动力，当需求发生不可逆转的改变时，午日终将西傍。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">那么，接下来的问题是：<span>PHP </span>会很快没落吗？</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">这个问题实际是在问：如今<span> PHP </span>是否还在某些场景下具有优势（即是否还存在现实需求这一源动力）？</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">PHP </span><span style=\"font-family:宋体;color:#333333;background:white\">的优势是简单、门槛低、实现功能快捷，很适合如下场景：</span></p><p style=\"margin-left:32px;line-height: 150%\"><span style=\"font-size:13px;line-height:150%;font-family: Symbol\"><span>·<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体;color:#333333;background:white\">业务、系统相对简单，无需服务化；</span></p><p style=\"margin-left:32px;line-height: 150%\"><span style=\"font-size:13px;line-height:150%;font-family: Symbol\"><span>·<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体;color:#333333;background:white\">对性能不是很敏感；</span></p><p style=\"margin-left:32px;line-height: 150%\"><span style=\"font-size:13px;line-height:150%;font-family: Symbol\"><span>·<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体;color:#333333;background:white\">需要快速实现、快速迭代；</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">在上面这些场景下，微服务（以及<span> java</span>、<span>C++ </span>等静态语言）的优点并不能弥补其缺点，因而推荐使用单体架构或者简单的服务化（仅仅进行主要服务拆分，并不引入复杂的服务治理体系），这种情形下<span> PHP </span>的优势就显现出来了。一般中小公司正是满足上面的场景，因而我们发现即使是在移动互联网时代<span> PHP </span>辉煌不再，但仍有大量中小公司采用<span> PHP </span>作为核心开发语言。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">另外一个事实是，由于所有的大公司都是由小公司成长来的，在公司规模尚小的时候，他们大多也是采用<span> PHP </span>作为核心语言的，规模成长后，虽然<span> PHP </span>的各种短板阻碍了系统的发展，但由于已经有大量的<span> PHP </span>项目，完全重新用其他语言开发一遍不太现实，因而他们会采用各种优化手段，比如编写<span> PHP </span>扩展或者将<span> PHP </span>编译成某种静态语言（如<span> C++</span>），或者将单体项目中的某些核心功能拆解成服务，单体项目调用后端服务接口————这种情况下，<span>PHP </span>项目成了粘合层。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">将<span> PHP </span>作为粘合语言的不光是因为历史遗留问题，还有不少公司新项目也会采用这种架构，这样既充分利用了<span> PHP </span>的开发效率（因为粘合层往往比较靠前端，需求变动较频繁，开发效率是必须要考虑的重要因素），也保证了核心服务的性能。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">那么，接下来的问题是，作为<strong>快速原型语言</strong>和<strong>粘合层语言</strong>，有没有其他语言比<span> PHP </span>更具优势？</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">至少国内不用谈<span> Python </span>和<span> RoR</span>（在国外这两者在<span> Web </span>开发上的占有率也不及<span> PHP</span>），<span>Python </span>程序员的重心已转大数据、人工智能了，<span> RoR </span>至少在国内一直不温不火，在程序员的招聘上比<span> PHP </span>要难很多。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">nodejs </span><span style=\"font-family:宋体;color:#333333;background:white\">曾经被认为是<span> PHP </span>的最大对手，一个很大的原因是人们认为如果一个公司使用<span> nodejs </span>作为后端语言，那么他只需要一样技术栈（前后端都是<span> js </span>程序员，而<span> js </span>程序员和<span> PHP </span>一样一抓一大把），体现了莫大的成本优势。但事实是<span> nodejs </span>并没有对<span> PHP </span>造成根本威胁，未来也不太可能会，原因是持上面观点的人认为统一技术栈就一定能节约成本，但这是个伪命题。一门语言具有解决某个问题的能力不代表人们就一定会拿它去解决问题，就好比<span> PHP </span>也能进行<span> socket </span>编程，但很少公司在生产环境大规模使用<span> PHP </span>编写服务器。<span>js </span>天生就是<span> Web </span>前端语言，因而绝大部分<span> js </span>程序员都是一直做前端开发的，而前端开发和后端开发模式上有很大不同。前端在很长一段时间都是面向<span> DOM </span>编程，即使是有了模块化、<span>React </span>这些新玩法后，前端开发的重心仍然是事件驱动的交互式编程。后端开发的重心在于建模（即使不对业务进行对象建模，也至少需要面向数据库进行数据建模）以及业务逻辑的实现，做后端开发，数据库、<span>Linux </span>服务器是绕不开的，而这两者恰恰是大部分前端程序员所缺乏的（换句话说，要招一个既很熟悉前端开发又很熟悉后端开发的<span> js </span>程序员是非常难的）。结果就是，招一个<span> js </span>程序员用<span> nodejs </span>开发后端系统，其成本远大于招一个<span> PHPer</span>。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">因而，<span>PHP </span>在未来可预见的很长时期内不会没落，它会作为中小公司的快速原型语言和大公司的粘合层语言长期存在。</span></p><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">另一个结论是：<span>Python</span>、<span>Ruby On Rails</span>、<span>nodejs </span>这些语言虽然不会对<span> PHP </span>造成根本威胁，但会跟<span> PHP </span>一同在<span> Web </span>开发领域长期存在————因为它们的源动力是相同的，而<span> PHP </span>相对于它们的优势又不足以完全抹杀掉它们的存在。</span></p><h3 style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;color:#333333;background:white\">总结：</span></h3><p style=\"line-height:150%\"><span style=\"font-family:宋体;color:#333333;background:white\">最后，我将上面的分析总结成四个论断：</span></p><p style=\"margin-left:32px;line-height: 150%\"><span style=\"font-size:13px;line-height:150%;font-family: Symbol\"><span>·<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体;color:#333333;background:white\">论断一：<span>PHP </span>在移动互联网到来之前出现过黄金时期，如今辉煌不再；</span></p><p style=\"margin-left:32px;line-height: 150%\"><span style=\"font-size:13px;line-height:150%;font-family: Symbol\"><span>·<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体;color:#333333;background:white\">论断二：<span>PHP </span>在未来可预见的很长时期内不会没落；</span></p><p style=\"margin-left:32px;line-height: 150%\"><span style=\"font-size:13px;line-height:150%;font-family: Symbol\"><span>·<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体;color:#333333;background:white\">论断三：后黄金时代<span> PHP </span>的定位：中小公司的快速原型语言以及大公司的中间粘合层语言；</span></p><p style=\"margin-left:32px;line-height: 150%\"><span style=\"font-size:13px;line-height:150%;font-family: Symbol\"><span>·<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体;color:#333333;background:white\">论断四：<span>PHP7 </span>和<span> Swoole </span>让<span> PHP </span>在和其他同层级语言（如<span> Python</span>、<span>RoR</span>、<span>nodejs</span>）的竞争中保持优势，但无法给<span> PHP </span>带来根本的变化（无法改变<span> PHP </span>的定位）；</span></p><p><br/></p>', '1.png', '0', '0', '0', '0', '1', '0', '2024-05-20 19:04:36', '2024-05-20 19:04:36');
INSERT INTO `article` VALUES ('10', '2', '1', 'PHP入门到高级 -- 基于MVC的Web应用', 'MVC模式的概念MVC是一种常见的Web应用程序设计模式，它将应用程序分为三个部分：模型（Model）、视图（View）和控制器（Controller）。MVC模式可以帮助我们更好地组织和管理Web应用程序的代码，提高代码的可重用性和可维护性。在本文中，我们将深入探讨MVC模式的概念和应用，以及如何在PHP中实现MVC模式。一、MVC模式的概念MVC模式是一种软件设计模式，用于将应用程序分为三个主要部分：.    模型（Model）：模型是应用程序中处理数据和业务逻辑的部分。它通常包含数据访问和数据处理的代码，以及与数据库交互的代码。.    视图（View）：视图是应用程序中处理用户界面的部分。它通常包含HTML、CSS和JavaScript代码，以及与用户交互的代码。.    控制器（Controller）：控制器是应用程序中处理用户请求的部分。它通常包含路由和请求处理的代码，以及与模型和视图交互的代码。MVC模式的核心思想是将应用程序分为三个独立的部分，每个部分都有自己的职责。这样可以使代码更加模块化、可重用和可维护。二、PHP中的MVC模式在PHP中，我们可以使用MVC模式来构建Web应用程序。下面是一个简单的MVC应用程序的示例：.    模型（Model）：在这个示例中，我们创建了一个名为\"User\"的模型，用于处理用户信息： ```php class User { private $name; private $email; public function __construct($name, $email) { $this->name = $name; $this->email = $email; } public function getName() { return $this->name; } public function getEmail() { return $this->email; } } ```.    视图（View）：在这个示例中，我们创建了一个名为\"index.php\"的视图，用于展示用户信息： ```html   User Info   User Info Name: getName(); ?> Email: getEmail(); ?>   ```.    控制器（Controller）：在这个示例中，我们创建了一个名为\"index.php\"的控制器，用于处理用户请求和调用模型和视图：```php$user = new User(\"John Doe\", \"john.doe@example.com\");include(\'index.php\');```在这个示例中，我们将模型、视图和控制器分别放在不同的文件中，并在控制器中调用模型和视图，以显示用户信息。三、MVC模式的优点使用MVC模式可以带来许多优点，包括：.    代码重用：每个部分都可以独立于其他部分使用，从而使代码更加模块化和可重用。.    可维护性：由于每个部分都有自己的职责，因此可以更容易地维护和修改应用程序。.    可扩展性：由于每个部分都可以独立于其他部分使用，因此可以更容易地扩展应用程序。.    更好的组织：将应用程序分为不同的部分可以使代码更加有组织和易于管理。四、总结MVC模式是一种常见的Web应用程序设计模式，它将应用程序分为三个部分：模型、视图和控制器。使用MVC模式可以带来许多优点，包括代码重用、可维护性、可扩展性和更好的组织。在PHP中，我们可以使用MVC模式来构建Web应用程序，以提高代码的可重用性和可维护性。实现一个简单的MVC框架MVC（Model-View-Controller）是一种常见的设计模式，用于开发Web应用程序。它将应用程序分解成三个主要组件：模型（Model）、视图（View）和控制器（Controller），从而使代码更加模块化和易于维护。在本文中，我将介绍如何使用PHP实现一个简单的MVC框架。.    框架结构 我们的MVC框架将包含以下目录和文件： - app：这是应用程序的主目录，包含控制器、模型和视图。 - core：这是框架的核心目录，包含路由、请求和响应处理。 - public：这是应用程序的公共目录，包含CSS、JavaScript和图片等资源文件。 - index.php：这是应用程序的入口文件。 下面是一个目录结构示例： ``` mvc/ ├── app/ │ ├── controllers/ │ ├── models/ │ └── views/ ├── core/ │ ├── Router.php │ ├── Request.php │ └── Response.php ├── public/ │ ├── css/ │ ├── js/ │ └── images/ └── index.php ```.    实现控制器 控制器是MVC框架的核心组件之一，用于处理用户请求并返回响应。在我们的框架中，控制器将存储在`app/controllers`目录中。每个控制器将由一个类表示，其中包含处理请求的方法。 下面是一个示例控制器： ```php    Home Page   Welcome to the Home Page!   ``` 在这个示例中，我们创建了一个名为`home`的视图文件，其中包含HTML代码来呈现欢迎消息。.    实现路由 路由是MVC框架的核心组件之一，用于将请求路由到相应的控制器和方法。在我们的框架中，路由将存储在`core/Router.php`文件中。该文件将包含一个`Router`类，该类将包含一个`route`方法，该方法将根据请求的URL确定要调用的控制器和方法。 下面是一个示例路由： ```php $method_name(); } } ``` 在这个示例中，我们创建了一个名为`Router`的类，并为其定义了一个名为`route`的静态方法。该方法将接受一个URL作为参数，并根据URL确定要调用的控制器和方法。我们使用`ucfirst`函数将控制器名称的第一个字母大写，并将其与`Controller`字符串连接起来，以获取控制器类的名称。我们还使用`array_shift`函数从URL部分数组中获取控制器和方法名称，并使用字符串插值创建控制器类的实例。最后，我们调用控制器类的方法，并将其返回。.    实现请求和响应处理 请求和响应处理是MVC框架的另一个重要组件，用于处理HTTP请求并返回HTTP响应。在我们的框架中，请求和响应处理将存储在`core/Request.php`和`core/Response.php`文件中。 下面是一个示例请求处理： ```php save();header(\'Location: /login\');} else {$this->render(\'signup\');}}// 登录public function login(){if(isset($_POST[\'username\']) && isset($_POST[\'password\'])) {$username = $_POST[\'username\'];$password = $_POST[\'password\'];$user = User::findByUsername($username);if($user && password_verify($password, $user->password)) {$_SESSION[\'user_id\'] = $user->id;header(\'Location: /\');} else {$this->render(\'login\', [\'error\' => \'用户名或密码错误\']);}} else {$this->render(\'login\');}}```3.2 博客文章的创建、读取、更新和删除我们将创建一个Blog控制器来处理博客文章的创建、读取、更新和删除。在这个控制器中，我们将实现以下操作：.    显示博客文章列表.    显示单个博客文章.    创建博客文章.    编辑博客文章.    删除博客文章```// 显示博客文章列表public function index(){$blogs = Blog::findAll();$this->render(\'index\', [\'blogs\' => $blogs]);}// 显示单个博客文章public function view(){$id = $_GET[\'id\'];$blog = Blog::findById($id);$comments = Comment::findAllByBlogId($id);$this->render(\'view\', [\'blog\' => $blog, \'comments\' => $comments]);}// 创建博客文章public function create(){if(isset($_POST[\'title\']) && isset($_POST[\'content\'])) {$blog = new Blog($_POST[\'title\'], $_POST[\'content\'], $_SESSION[\'user_id\']);$blog->save();header(\'Location: /\');} else {$this->render(\'create\');}}// 编辑博客文章public function update(){$id = $_GET[\'id\'];$blog = Blog::findById($id);if(isset($_SESSION[\'user_id\']) && $_SESSION[\'user_id\'] == $blog->user_id) {if(isset($_POST[\'title\']) && isset($_POST[\'content\'])) {$blog->title = $_POST[\'title\'];$blog->content = $_POST[\'content\'];$blog->save();header(\'Location: /\');} else {$this->render(\'update\', [\'blog\' => $blog]);}} else {header(\'Location: /login\');}}// 删除博客文章public function delete(){$id = $_GET[\'id\'];$blog = Blog::findById($id);if(isset($_SESSION[\'user_id\']) && $_SESSION[\'user_id\'] == $blog->user_id) {$blog->delete();header(\'Location: /\');} else {header(\'Location: /login\');}}```3.3 评论我们将创建一个Comment控制器来处理评论。在这个控制器中，我们将实现以下操作：.    显示评论列表.    创建评论```// 显示评论列表public function index(){$comments = Comment::findAll();$this->render(\'index\', [\'comments\' => $comments]);}// 创建评论public function create(){if(isset($_POST[\'blog_id\']) && isset($_POST[\'content\'])) {$comment = new Comment($_SESSION[\'user_id\'], $_POST[\'blog_id\'], $_POST[\'content\']);$comment->save();header(\'Location: /blog/view?id=\' . $_POST[\'blog_id\']);} else {$this->render(\'create\');}}```4. 总结在本文中，我们介绍了如何使用PHP基于MVC架构设计和实现一个简单的博客系统。我们使用了PHP作为后端语言，MySQL作为数据库，HTML、CSS和JavaScript作为前端技术。我们设计了一个简单的MVC框架，并实现了用户注册和登录、博客文章的创建、读取、更新和删除以及评论功能。这个博客系统仅仅是一个简单的示例，但它涵盖了许多MVC框架中的关键概念和技术。希望这篇文章能够对你的MVC框架设计和实现有所帮助。', '1.png', '1', '0', '1', '0', '0', '1', '2024-05-20 19:05:33', '2024-05-20 19:05:33');
INSERT INTO `article` VALUES ('11', '2', '2', '什么是Java', 'Java是一种通用的，基于类的，面向对象的编程语言。它是用于应用程序开发的计算平台。因此，Java是快速，安全和可靠的。它被广泛用于在笔记本电脑，数据中心，游戏机，科学超级计算机，手机等中开发Java应用程序。Java遵循WORA（Write Once, Run Anywhere。一次写入，到处运行）的原理，并且与平台无关。它也简单易学。', '2.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:06:49', '2024-05-20 19:06:49');
INSERT INTO `article` VALUES ('12', '2', '1', 'Java发展历史', 'Java是世界上使用最广泛的编程语言之一。Java最初由Sun Microsystems在1990年代开发，用于开发从Web应用程序到移动应用程序到批处理应用程序的所有内容。Java最初是一种纯粹的面向对象的语言，但现在已经发展成为一种多范例语言，可以高度适应任何情况。拥有庞大的开发人员社区和支持库，Java是开发几乎所有类型的应用程序的理想选择。Java是最初由开发James Gosling(詹姆斯·高斯林，他被称为Java编程语言之父)在Sun Microsystems公司（现已经被Oracle收购），并于1995年发布了作为Sun公司的一个核心组成部分Java平台。James Gosling(詹姆斯·高斯林)，Mike Sheridan(迈克·谢里丹)和Patrick Naughton(帕特里克·诺顿)于1991年6月启动了Java语言项目。Java最初是为交互式电视设计的，但在当时的数字有线电视行业来说太先进了。该语言最初是在James Gosling(詹姆斯·高斯林)办公室外的一棵橡树之后被称为Oak的。后来，该项目以Green命名，并最终从Java coffee(印度尼西亚的一种咖啡)重命名为Java。Java的创始人：James Gosling(詹姆斯·高斯林)', '1.png', '9', '2', '0', '0', '0', '1', '2024-05-20 19:09:22', '2024-05-20 19:09:22');
INSERT INTO `article` VALUES ('13', '2', '2', 'Java语言的特点', '.         一种面向对象的编程语言。 按照对象集合的方式组织程序是一种面向对象的编程思维。 面向对象编程的四个主要概念是：抽象化，封装，继承，多态。.         一种与平台无关的语言。(它提供了在不同平台下的解释运行环境) 编译器将源代码转换为字节码，然后JVM执行编译器生成的字节码。该字节码可以在Windows，Linux和macOS的任何平台上运行，这意味着如果我们在Windows上编译程序，则可以在Linux上运行，反之亦然。每个操作系统具有不同的JVM，但是在字节码执行后，所有操作系统产生的输出都是相同的。这就是为什么我们称Java为平台无关的语言。.         简单 Java是简单的语言之一，因为它不具有指针，运算符重载，多重继承，显式内存分配等复杂功能。.         一种健壮的语言，吸收了C/C++语言的优点。 Java语言健壮，意味着可靠。它以这样的方式开发：尽力尽早检查错误，这就是Java编译器甚至能够检测到其他编程语言不易检测到的那些错误的原因。使Java健壮的Java主要功能是垃圾收集，异常处理和内存分配。.         具有较高的安全性。(自动回收垃圾，强制类型检查，取消指针) 在Java中，我们没有指针，因此我们无法访问越界数组，如果尝试这样做，它将显示ArrayIndexOutOfBoundsException。这就是为什么在Java中无法利用堆栈破坏或缓冲区溢出之类的一些安全漏洞的原因。.         分布式 我们可以使用Java编程语言创建分布式应用程序。远程方法调用和企业Java Bean用于在Java中创建分布式应用程序。Java程序可以轻松地分布在通过Internet连接相互连接的一个或多个系统上。.         多线程 Java支持多线程。它是Java的一项功能，它允许并发执行程序的两个或更多部分，以最大程度地利用CPU。.         可移植 众所周知，在一台机器上编写的Java代码可以在另一台机器上运行。Java的平台无关功能，其中可以将其平台无关字节码带到任何平台上执行，从而使Java可移植。', '2.png', '5', '2', '0', '0', '0', '1', '2024-05-20 19:09:58', '2024-05-20 19:09:58');
INSERT INTO `article` VALUES ('14', '2', '2', 'Java的应用场景', '                        .         桌面GUI应用程序 桌面应用程序可以使用Java轻松开发。我们使用AWT，Swing，JavaFX等API来构建这些应用程序。.         移动应用 移动应用程序是为手机和平板电脑创建的应用程序。在当今时代，大多数电话和智能设备都具有Android操作系统，没有Java就不可能进行Android开发。Java Micro Edition（Java ME或J2ME）是一种流行的跨平台框架，用于构建可在所有功能手机和智能手机上运行的应用程序。.         企业应用 企业应用程序是一个大型软件系统，可以在公司环境中运行，以满足组织而不是单个用户的需求。.         科学应用 科学应用程序是一种使用数学影响实际活动的应用程序。Java由于其强大的功能而支持科学应用程序的开发。.         Web应用 Web应用程序是通过浏览器界面在Internet上交付的客户端-服务器程序。.         嵌入式系统 一个嵌入式系统，也被称为集成系统，是组装在一起以执行专用功能的更大的系统的许多小的计算单元的组合。嵌入式系统随处可见。例如，电机系统，汽车中的娱乐和多媒体，电子商务，无线通信，移动计算和联网都使用嵌入式系统。 嵌入式系统使用Java进行开发。最初，Java是为开发嵌入式系统而设计的。.         大数据技术 大数据一词定义为“可以分析以提取模式，趋势和有用信息的极大型和复杂数据集。它是最新技术领域中最受欢迎的主题之一。Java是大数据的视角。如今，许多开发人员正在将职业转向大数据技术。.         分布式应用 分布式应用程序是在网络内的多台计算机上执行或运行的应用程序或软件。分布式应用程序或系统具有许多共同的要求，尤其是由于它们在其上运行的平台的分布式和动态特性而产生。Java提供了实现这些应用程序的选项。.         基于云的应用 云计算意味着通过Internet按需交付IT资源，包括具有按需付费定价模式的存储，服务器，数据库，网络和软件。它可以低成本为IT基础架构提供解决方案，因为我们可以将文件保存在远程数据库中并按需检索它们。长期以来，Java一直是为Web应用程序提供结构的编程语言，由于它的分布式特性，现在它已经进入了云应用程序。.         奋斗奋斗 Web服务器是一种计算机程序，它使用HTTP（超文本传输协议）和其他协议来存储，处理和响应通过WWW（万维网）发出的客户端请求。Web服务器是运行网站并向用户交付网页的系统。Java生态系统包含多个Java Web服务器和应用程序服务器。Java提供了Web服务器，包括Apache Tomcat，Simple，Jo！，Rimfaxe Web服务器（RWS）Apache HTTP服务器，Resin，Adobe JRun和Project Jigsaw。.         软件工具 软件工具是开发人员用来开发，分析，维护，调试或支持其他应用程序和程序的一组计算机程序。许多开发人员使用Java编写和开发有用的软件工具。比如Eclipse，IntelliJ Idea和NetBeans IDE。.         游戏应用 Java被证明是开发二维游戏的最佳平台之一。如今，几乎每个人都拥有装有Android游戏的Android手机。没有Java，就无法构建Android游戏。  我们知道Java是一种“蓝领”语言，涉及软件开发的各个领域。可以根据业务需要使用。通过这些应用程序，我们意识到现实中对Java的需求。当我们需要开发安全且可扩展的应用程序时，我们绝对应该选择使用Java，因为Java具有主要的安全功能。这就是为什么最好用Java开发许多需要很多安全问题的银行应用程序的原因。因此，如果我们的业务规格与其功能相匹配，我们可以选择该语言。许多技术和编程语言都在发展，但是Java的普及程度仍然是其他语言无法比拟的。\n                    ', '1.png', '2', '0', '1', '0', '0', '1', '2024-05-20 19:10:55', '2024-05-20 19:11:11');
INSERT INTO `article` VALUES ('15', '2', '2', 'Java平台体系', '.         Java SE（Java Platform Standard Edition）。Java SE 以前称为 J2SE。它允许开发和部署在桌面、服务器、嵌入式环境和实时环境中使用的 Java 应用程序。.         Java EE（Java Platform Enterprise Edition）。这个版本以前称为 J2EE。 开发企业级的应用.         Java ME（Java Platform Micro Edition）。这个版本以前称为 J2ME。Java ME 为在移动设备和嵌入式设备（比如手机、PDA、电视机顶盒和打印机）上运行的应用程序提供一个健壮且灵活的环境.', '2.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:12:44', '2024-05-20 19:12:44');
INSERT INTO `article` VALUES ('16', '2', '2', 'Java的专业术语', '首先了解两个计算机术语：1.计算机程序：为了让计算机执行某些操作或解决某个问题而编写的一系列有序指令的集合编写程序的工具就是计算机语言，Java就是多种语言中的一种2.软件：软件是计算机程序、程序所用的数据以及有关文档资料的集合。 在学习Java之前，必须熟悉这些Java通用术语。1. Java虚拟机（JVM：Java Virtual Machine）： 通常称为JVM。程序分为三个执行阶段。他们被编写，编译并运行程序。·        像你和我这样的Java程序员都可以编写程序。·        编译由JAVAC编译器完成，JAVAC编译器是Java开发工具包（JDK）中包含的主要Java编译器。它以Java程序作为输入，并生成字节码作为输出。·        在程序的运行 阶段，JVM执行编译器生成的字节码。现在，我们了解到Java虚拟机的功能是执行编译器产生的字节码。每个操作系统都有不同的JVM，但是在执行字节码后它们在所有操作系统上产生的输出都是相同的。这就是为什么Java被称为独立于平台的语言的原因。2.开发过程中的字节码： JDK的Javac编译器将Java源代码编译为字节码，以便可以由JVM执行。编译器将其另存为.class文件。要查看字节码，可以使用像javap这样的反汇编程序。3. Java开发工具包（JDK）：当我们使用术语JDK时，当我们了解字节码和JVM时。因此，顾名思义，它是一个完整的Java开发工具包，其中包括编译器，Java运行时环境（JRE），Java调试器，Java文档等所有内容。要在Java中执行该程序，我们需要在我们的计算机上安装JDK为了创建，编译和运行Java程序而在计算机上运行。4. Java运行时环境（JRE）： JDK包括JRE。在我们的计算机上安装JRE可以运行Java程序，但是，我们无法对其进行编译。JRE包括浏览器，JVM，小程序支持和插件。为了运行Java程序，计算机需要JRE。5.垃圾收集器：在Java中，程序员无法删除对象。要删除或重新收集该内存，JVM拥有一个名为Garbage Collector的程序，简称GC。垃圾收集器可以重新收集未引用的对象。因此，Java通过处理内存管理使程序员的工作变得轻松。但是，程序员是否应该使用自己的代码，无论他们使用的对象已经使用了很长时间了。因为垃圾无法恢复被引用对象的内存。6. CLASSPATH中的类路径是文件路径ava运行时和Java编译器找的.class文件加载。默认情况下，JDK提供了许多库。如果要包括外部库，则应将它们添加到类路径中。', '2.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:13:15', '2024-05-20 19:13:15');
INSERT INTO `article` VALUES ('17', '2', '2', 'Java运行核心机制', '刚刚提到了Java程序执行的三个阶段，我们再来详细的说一下：计算机的高级编程语言类型：·        编译型 C /C++/Pascal//Golang等，会生成二进制文件。比如：.exe文件。·        解释型 Basic/Python/JavaScript / Perl /Shell不会生成二进制文件而Java 语言是两种类型的结合；先编译,再解释执行   Java虚拟机(Java Virtual Machine) JVM解释 1 JVM可以理解成一个可运行Java字节码的虚拟计算机系统。  它有一个解释器组件，可以实现Java字节码和计算机操作系统之间的通信 对于不同的运行平台，有不同 的JVM。 2 JVM屏蔽了底层运行平台的差别，实现了“一次编译，随处运行”。 所以Java语言是跨平台的。     JVM可以理解成一个可运行Java字节码的虚拟计算机系统。·        它有一个解释器组件，可以实现Java字节码和计算机操作系统之间的通信·        对于不同的运行平台，有不同 的JVM。JVM屏蔽了底层运行平台的差别，实现了“一次编译，随处运行”。 ', '2.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:13:57', '2024-05-20 19:13:57');
INSERT INTO `article` VALUES ('18', '2', '2', 'Java开发面试简历这么写，命中率达70%', '想要有面试机会，首先要完成一份好的简历。但是在撰写简历的时候，往往有一些细节很容易被忽视，导致面试机会远远不如自己的期望值。一份经过优化的简历，面试的命中率可以达到70%。那Java开发面试简历到底应该怎么写，哪一些是我们经常犯的错呢？IT类岗位，在简历撰写和优化方面是区别于其他行业的。除了一般的个人信息、求职意向、工作经历、教育经历、所获证书（奖项）、自我评价，这基本信息以外，IT类的岗位简历中一定不能缺少求职意向 专业技能和项目经验这3个重要的专业信息。接下来我们动手完成一份Java软件工程师的求职简历吧！01：个人信息▶ 视情况而定展现的信息：婚姻状况 身高 体重▶ 不需要展现的信息：QQ号码 QQ邮箱 宗教信仰▶ 关于照片：正装，且“适当”修饰1.面试不是交友，不需要QQ号码，但一定要留正确的邮箱。面试/录取通知会通过邮箱送达，当然现在也有通过短信或者微信发送的。另外，很多公司真的会用QQ邮箱作为筛选简历的一种方法，所以我们建议习惯用QQ邮箱的同学把后缀更改为gmail，而且@前面不要是一串数字，可以是英文名或者姓名拼音。2.照片使用蓝底免冠正装照。不要花里胡哨的生活照，咱们不是面试综艺单位，而是Java软件开发工程师，给人的第一印象一定是认真而且专业的样子。手机里面可以下载最美证件照APP，挑选合适的模板就可以搞定了。记得“适当”修饰，不要P得太过分。3.工作年限非常重要。既然能匹配企业招聘需求，这里一定于其他个人信息一起放在简历的最顶端。这是HR快速筛选简历时重点搜索的信息之一。02：专业技能这里描述IT企业重视的编码技能和外语水平。也就是需要将企业招聘的需求，与自己的技术专长相匹配。记住，所谓的专业技能一定是填写与招聘岗位需求相关的，有的同学甚至写熟练使用office，这完全没啥意义。  03：求职意向求职意向，也就是意向岗位。上文我们有讲过，求职意向一定是单一的，不要想着用一份简历投到多份岗位。简历不是一把万能钥匙，不同的岗位责任和需求不同，这也是为什么我们要注意细节和重点，针对企业的需求完成一份合格的简历的原因。期望薪水不要乱填，区间也不可以是4000-8000元/月这样跨度太大，没有把握就写面议。注意，到岗时间也是HR非常重视的。很多企业的用人需求比较急，如果你的简历到岗时间不明确，或者太久，那就被先放一边或者直接pass了。04:工作经历工作经历的填写要注意2点，首先你所填写的工作经历要与所申请的职位相关联，并且请注意学习、工作时间的连贯性；其次工作经历的时间是以倒序来展示，也就是最近一份工作是在最上面的。另外，HR在审核工作经历的的时候十分忌讳两种情况：一种是工作经历不连贯，也就是有大面积空白时间的人。但实际中也不排除会有工作不连贯的，可以是因为学习、生育或者创业。但千万不要说因为生病，你懂的。第二种就是频繁换岗、跳槽的人。IT公司最大的成本就是人力和人才培养。HR在看简历中会筛选掉他认为“缺乏稳定感”“没有责任心”的一部分人，在面试的时候还会通过诸多职业素养方面的问题去反复求证你是否会在公司长久发展。至于面试中的问答环节，我会在下次跟大家分享。05：项目经验项目经验就是展现实力的时候了。在描述项目之前，我们先明确这3个问题：1、写项目的目的是什么？目的一：通过项目描述证实个人工作（项目）经验；  目的二：通过项目描述反映个人技术能力及经验收获。2、项目是否具备真实可信度？项目大小、时间、人数搭配的合理性，一个项目不少于4-6个月时间，团队人数不少于3人。  项目内容不能脱离客户对象的行业性，什么样的企业做什么样的项目，要对得上，不得拼凑。  项目内容要完整但不必全部呈现，面试中实在讲不出细节了，用“项目保密协议”。所使用到的工具、技术、环境要与项目需求相协调。3、你所承担了怎样的责任或者在项目中有何贡献？职责要描述清楚，项目流程中你参与了如参与需求分析、概要设计、文档编写、代码开发、单元测试、项目实施、系统维护哪些工作。  多个项目的排序记住用倒序的形式，最近完成的放在最上面。多个不同公司完成的项目注明清楚。  一个完整的项目描述应该是这样的：项目描述4个原则：▶ 项目不要跨行业且最好与所应聘的公司业务相关▶ 重点描述自己在项目过程中充当的角色▶ 详细描述项目中涉及到主要技术点▶ 简历中应当提供不少于三个项目06：教育经历很多人在写教育经历的时候，有多少格子都想填满。这里记住，HR只关心你从大学就读开始，到目前手持的最高学历。另外大家很容易被忽视的就是就读起止时间。HR在筛选简历的时候，一定是会关注你是在读、应届毕业还是社会人士，所以大家一定要在教育经历这里注明你的毕业时间。07：自我评价自我评价相当于告诉企业，你是如何匹配他们的需求。不管是性格还是专业技能或是对于本职工作的热爱以及收获，给大家一个参考。【自我评价】1、热爱编程，喜欢思考问题，能够查阅各种开发技术的中英文手册，具有独立解决问题的能力；有良好的开发习惯和设计思路。2、性格沉稳，待人友好；诚实守信，讲原则，不推卸责任。3、有自制力，做事有始有终；学习能力强，愿意不断地接触学习新知识。4、工作中吃苦耐劳，尽职尽责，适应力强，会用100%的热情和精力投入到工作中；在团队中，善于与人沟通，有良好的协调能力。在自我评价的内容中，一定不能过于自我吹捧，同样也不能过分谦虚（贬低自己）。好了，一份完整的简历就这样完成了。整个简历要求排版工整，不出现超过2种字体且不用艺术字，标题和内容可以用粗细体区分开。另外，如果简历有多张，切记打印时在左侧装订好，不能是单独分开的纸张。当然，这是面试前的准备环节，这些我们下回分享。', '2.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:14:59', '2024-05-20 19:14:59');
INSERT INTO `article` VALUES ('19', '2', '1', '最受Java开发者喜爱的5款开发工具', '<p style=\"margin-top:13px;margin-right:0;margin-bottom:20px;margin-left: 0;text-indent:36px\"><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">在<span>TIOBE </span>编程语言排行中，<span>Java</span>始终排在前三名，现今有<span>700</span>万到<span>1000</span>万的<span>Java</span>开发人员。许多应用程序的所有代码都是用<span>Java</span>编写的，这意味着集成开发环境（<span>IDE</span>）很重要，因为它是开发人员编写、测试和运行<span>Java</span>程序必备的工具。<span><br/> </span>今天，就和大家分享<span>5</span>种最受<span>Java</span>开发者喜爱的的开源<span>IDE</span>：<span><br/> 1</span>、<span>BlueJ<br/> BlueJ</span>为<span>Java</span>初学者提供了一个集成的<span>Java</span>开发环境，专为教学而设计的，它还提供有助于使用<span>Java</span>开发工具包<span>(JDK)</span>开发小型软件。<span><br/> </span>一旦你在笔记本电脑上安装了<span>BlueJ IDE</span>，开始一个新的项目，只要单击<span>Project</span>菜单中的<span>New Project</span>，然后就可以开始编写<span>Java</span>代码，代码示例如下：</span></p><p style=\"margin-top:13px;text-align:left;background:white\"><span style=\"color:black\"><img width=\"411\" height=\"364\" src=\"http://127.0.0.1:5000/static/js/ue/themes/default/images/spacer.gif\" alt=\"IMG_258\" style=\"background:url(http://127.0.0.1:5000/static/js/ue/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\"/></span></p><p style=\"margin-top:33px;margin-right:0;margin-bottom:20px;margin-left: 0\"><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">BlueJ</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">不仅提供了一个交互式图形用户界面（<span>GUI</span>），用于在学校教授<span>Java</span>编程课程，而且还允许开发者调用函数（对象、方法、参数），不需要进行源代码编译。<span><br/> </span>下载地址：</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:black;background:white\"><a href=\"https://link.zhihu.com/?target=https://www.bluej.org/versions.html\" target=\"https://zhuanlan.zhihu.com/p/_blank\"><span style=\"font-size:0;font-family:a;text-underline:none\">https://www.</span><span style=\";text-underline:none\">bluej.org/versions.html</span></a></span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\"><br/> 2</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">、<span>Eclipse</span></span></p><p style=\"margin-top:13px;text-align:left;background:white\"><span style=\"color:black\"><img width=\"457\" height=\"214\" src=\"http://127.0.0.1:5000/static/js/ue/themes/default/images/spacer.gif\" alt=\"IMG_259\" style=\"background:url(http://127.0.0.1:5000/static/js/ue/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\"/></span></p><p style=\"margin-top:33px;margin-right:0;margin-bottom:20px;margin-left: 0\"><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">Eclipse</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">是最著名的<span>Java IDE</span>之一，它还支持各种编程语言，如<span>C/C++</span>、<span>JavaScript</span>和<span>PHP</span>。它还允许添加扩展，以方便开发，<span>Eclipse</span>还为<span>DevOps</span>团队提供了一个名为<span>Eclipse Che</span>的<span>Web</span>集成开发环境。<span><br/> </span>下载地址：</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:black;background:white\"><a href=\"https://link.zhihu.com/?target=https://www.eclipse.org/ide/\" target=\"https://zhuanlan.zhihu.com/p/_blank\"><span style=\"font-size:0;font-family:a;text-underline:none\">https://www.</span><span style=\";text-underline:none\">eclipse.org/ide/</span></a></span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\"><br/> 3</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">、<span>IntelliJ IDEA</span></span></p><p style=\"margin-top:13px;text-align:left;background:white\"><span style=\"color:black\"><img width=\"479\" height=\"168\" src=\"http://127.0.0.1:5000/static/js/ue/themes/default/images/spacer.gif\" alt=\"IMG_260\" style=\"background:url(http://127.0.0.1:5000/static/js/ue/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\"/></span></p><p style=\"margin-top:33px;margin-right:0;margin-bottom:20px;margin-left: 0\"><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">IntelliJ IDEA CE</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">（社区版）是<span>IntelliJ IDEA</span>的开源版本，它为多种编程语言提供了一个<span>IDE</span>，例如<span>Java</span>、<span>Groovy</span>、<span>Kotlin</span>、<span>Rust</span>、<span>Scala</span>等，<span>IntelliJ IDEA CE</span>也非常受开发人员欢迎，他们可以使用它来进行现有的源代码重构、代码检查、使用<span>JUnit</span>或<span>TestNG</span>构建测试用例，以及使用<span>Maven</span>或<span>Ant</span>构建代码。<span><br/> IntelliJ IDEA CE</span>有一些独特的功能，我特别喜欢<span>API</span>测试器，例如，如果你用<span>Java</span>框架实现一个<span>REST API</span>，<span>IntelliJ IDEA CE</span>允许你通过<span>Swing GUI</span>设计器来测试<span>API</span>的功能：<span><br/> IntelliJ IDEA CE</span>是开源的，但是它还有一个商业版。<span><br/> </span>下载地址：</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:black;background:white\"><a href=\"https://link.zhihu.com/?target=https://www.jetbrains.com/idea/\" target=\"https://zhuanlan.zhihu.com/p/_blank\"><span style=\"font-size:0;font-family:a;text-underline:none\">https://www.</span><span style=\";text-underline:none\">jetbrains.com/idea/</span></a></span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\"><br/> 4</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">、<span>Netbeans IDE</span></span></p><p style=\"margin-top:13px;text-align:left;background:white\"><span style=\"color:black\"><img width=\"602\" height=\"274\" src=\"http://127.0.0.1:5000/static/js/ue/themes/default/images/spacer.gif\" alt=\"IMG_261\" style=\"background:url(http://127.0.0.1:5000/static/js/ue/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\"/></span></p><p style=\"margin-top:33px;margin-right:0;margin-bottom:20px;margin-left: 0\"><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">NetBeans</span><span style=\"font-size: 18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">是开源软件开发集成环境，是一个开放框架，可扩展的开发平台，可以用于<span> Java</span>，<span>C/C++</span>，<span>PHP </span>等语言的开发，本身是一个开发平台，可以通过扩展插件来扩展功能。<span><br/> Netbeans IDE</span>支持<span>Windows</span>、<span>MacOS</span>、<span>Linux</span>等多个平台，在本地环境中安装<span>IDE</span>工具后，新建项目向导就会帮助你创建新项目。<span><br/> </span>官方地址：</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:black;background:white\"><a href=\"https://link.zhihu.com/?target=https://netbeans.org/\" target=\"https://zhuanlan.zhihu.com/p/_blank\"><span style=\"font-size:0;font-family:a;text-underline:none\">https://</span><span style=\";text-underline:none\">netbeans.org/</span></a></span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\"><br/> 5</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">、<span>VSCodium</span></span></p><p style=\"margin-top:13px;text-align:left;background:white\"><span style=\"color:black\"><img width=\"581\" height=\"326\" src=\"http://127.0.0.1:5000/static/js/ue/themes/default/images/spacer.gif\" alt=\"IMG_262\" style=\"background:url(http://127.0.0.1:5000/static/js/ue/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\"/></span></p><p style=\"margin-top:33px;margin-right:0;margin-bottom:20px;margin-left: 0\"><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">VSCodium</span><span style=\"font-size: 18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">是一个轻量级的、免费的源码编辑器，适用于各种操作系统平台，它是一种基于<span>Visual Studio code</span>的开源替代品，它还支持多种编程语言的丰富生态系统。例如<span>Java</span>、<span>C++</span>、<span>C#</span>、<span>PHP</span>、<span>Go</span>、<span>Python</span>，为了高质量的代码，<span>Visual Studio code</span>默认提供了调试、智能代码完成、语法突出高亮和代码重构等。<span><br/> VSCodium </span>是<span> VS Code </span>的一个分支，它的外观和功能与<span> VS Code </span>完全相同，这一点从上图就不难看出<span><br/> </span>官网地址：</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:black;background:white\"><a href=\"https://link.zhihu.com/?target=https://vscodium.com/\" target=\"https://zhuanlan.zhihu.com/p/_blank\"><span style=\"font-size:0;font-family:a;text-underline:none\">https://</span><span style=\";text-underline:none\">vscodium.com/</span></a></span></p><p style=\"margin-top:33px\"><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\"><br/> Java</span><span style=\"font-size:18px;font-family:&#39;微软雅黑&#39;,sans-serif;color:#191B1F;background:white\">是使用最广泛的编程语言和环境之一，这五种只是<span>Java</span>开发人员可用的各种开放源码<span>IDE</span>工具的一小部分，很难说哪个才是最好的，主要取决于你的需求，希望你可以从中找到一个适合你的<span>Java IDE</span>。</span></p><p><br/></p>', '1.png', '0', '0', '0', '0', '1', '0', '2024-05-20 19:15:27', '2024-05-20 19:15:27');
INSERT INTO `article` VALUES ('20', '2', '3', 'Python简介', '伴随着大数据和人工智能的兴起, Python这门“古老”的语言重新出了青春。其实 Python一直是一门优秀的编程语言，不仅简洁、易用，而且功能强大，它能做到的事情太多了——既可用于开发桌面应用，也可用于做网络编程，还可用于开发Web应用，甚至可以开发移动App。可能正因为它能做到的方面太多，反而显得没有特别突出的一面。另外，由于 Python非常简单，很多非专业人士，甚至是一些小朋友都在用Python，这导致一些专业程序员对 Python抱有一定的偏见。现在情况发生了改变，Python不仅可以做那些常规的应用，还可以编写大数据和人工智能这两个被认为高大上领域的程序，这使得 Python语言变得非常流行，目前在编程语言排行榜中，Python、Java和C语言总是抢占前三名。可能不同的排行榜调查的对象不同。但Python绝大多数时候都会出现在前三名。', '3.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:16:45', '2024-05-20 19:16:45');
INSERT INTO `article` VALUES ('21', '2', '3', 'Python 简史', '虽然软件产业的历史相对于人类历史非常短暂，但在这短暂的历史中却诞生了非常多的编程语言，Python就是其中之一。 Python语言算得上一门“古老”的编程语言, Python流行这么久,必然有它的独到之处,下面我们简单介绍 Python的相关情况。Python由 Guido van rossum于1989年年底出于某种娱乐目的而开发，Python语言是基于ABC教学语言的，而ABC这种语言非常强大，是专门为非专业程序员设计的。但ABC语言并没有获得广泛的应用，Guido认为是非开放造成的。Python的“出身”部分影响了它的流行, Python上手非常简单,它的语法非常像自然语言,对非软件专业人士而言，选择 Python的成本非常低，因此某些医学甚至艺术专业背景的人，往往会选择 Python作为编程语言。Guido在 Python中避免了ABC不够开放的劣势，Guido加强了 Python和其他语言如C、C++和Java的结合性。此外, Python还实现了许多ABC中未曾实现的东西，这些因素大大提高了 Python的流行程度。2008年12月, Python发布了3.0版本（也常常被称为 Python3000或简称Py3k)。 Python3.0是一次重大的升级，为了避免引入历史包袱, Python3.0没有考虑与 Python2.x的兼容性。这样导致很长时间以来, Python2.x的用户不愿意升级到 Python3.0，这种割裂一度影响了 Python的应用。毕竟大势所趋，开发者逐渐发现 Python3.x更简洁、更方便。现在，绝大部分开发者已经从Python2.x转移到 Python3.x，但有些早期的 Python程序可能依然使用了 Python2.x语法。Python3.x的主要版本发布如下：2009年6月, Python发布了3.1版本。2011年2月, Python发布了32版本。2012年9月, Python发布了3.3版本。2014年3月, Python发布了34版本。2015年9月, Python发布了3.5版本。2016年12月, Python发布了3.6版本。... ...2020年2月24日，Python发布了3.8.2版本', '3.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:17:21', '2024-05-20 19:17:21');
INSERT INTO `article` VALUES ('22', '2', '3', 'Python的前景', '学会Python可以做很多事，但Python最为火爆的领域当属人工智能，在人工智能领域中，深度学习最受到关注。未来是人工智能的时代，有理由相信 Python 将发挥更大的作用。经过多年的演进，人工智能发展进入了新阶段。为抢抓人工智能发展的重大战略机遇：随着中国政府加大对人工智能的投入，人工智能在中国的发展会更快速，而Python作为人工智能的首选编程语言，将成为进入人工智能领域的第一道门槛。下面就来看看中国政府在近几年在人工智能和Python语言方面有哪些举措。·        2017年7月20日，国务院印发了《新一代人工智能发展规划》，提出了面向2030年我国新一代人工智能发展的指导思想、战略目标、重点任务和保障措施。·        2017年 10 月 11 日，教育部考试中心发布了“关于全国计算机等级（NCRE）体系调整”的通知，决定自 2018 年 3月起，在计算机二级考试加入了“Python 语言程序设计”科目。·        2018年1月16日上午，教育部召开新闻发布会，介绍了《普通高中课程方案和语文等学科课程标准（2017年版）》的有关情况，在此次“新课标”改革中，正式将人工智能、物联网、大数据处理划入新课标，这也就意味着今年秋季入学的高中生，将要开始学习 Python 了。', '3.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:17:43', '2024-05-20 19:17:43');
INSERT INTO `article` VALUES ('23', '2', '3', '如何学好Python', '如何学好Python语言，是所有初学者需要共同面对的问题，其实每种编程语言的学习方法都大同小异。下面是给初学者的几点建议。·        大体了解一下Python是一种怎样的编程语言，以及主要的应用领域。说白了，就是要了解Python能做什么，擅长做什么。对Python语言有一个宏观的认识。·        搭建开发环境，不管三七二十一，先弄出一个Hello World再说（可以复制现有的代码）。这样会给自己带来继续学习下去的信心。我们可以设想，学了一个星期，如何连一行代码都写不出来，继续学下去的兴趣还会剩多少呢？·        不要深究设计模式，这些东西是给那些有多年经验的程序员准备的，而且设计模式也不是用来学的，更不是用来记的，是依靠自己的多年经验和实践得出来的。这就像学英语，只管说就好了，管他什么语法，说多了，英语自然就纯正了。所以在一开始写程序时，只管写就好了，让设计模式见鬼去吧！·        模仿书中的例子代码，一定要自己亲手写代码，当然，一开始为了看运行结果，可以将书中的例子直接复制过来，但一定要完全自己写一遍，代码可以与书中的例子不同，只要实现同样的功能即可。·        在编写代码的过程中，不需要对Python语言的语法死记硬背，如果某些语法实在记不住，就把这些语法写在卡片上，或干脆放到有道云笔记上，以便随时查看，写多了自然就记住了。·        初学者不需要大量阅读Python的书籍，也不需要在网上查阅过多的技术资料，因为在自己的功力还没有达到一定火候时，摄入太多的信息会分散自己的精力，可能会适得其反。用一句武林中的话说就是：走火入魔。因此，对于初学者来说，选择一本合适的Python入门的书非常重要，例如，《Python从菜鸟到高手》一书全面介绍了Python的核心知识点，全书共33章，超过5万行代码。非常适合新手从零开始学Python。·        经常总结是一个好习惯，这个习惯对于程序员来说尤其重要。读者可以经常把自己的学习心得，以及经常需要查阅的内容发布到博客上，这样不仅可以提高自己的技术能力，还可以提高自己的语言表达能力。·        大量阅读源代码。如果前面的方法读者做的都很好，那么相信读者的技术水平已经有了一个质的飞跃，剩下来的工作就是更进一步地提高自己的技术能力。阅读各种开源项目的源代码是一个非常好的方式。', '3.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:18:09', '2024-05-20 19:18:09');
INSERT INTO `article` VALUES ('24', '2', '3', '搭建开发环境', '5.1 安装Python环境不管用什么工具开发Python程序，都必须安装Python的运行环境。由于Python是跨平台的，所以在安装之前，先要确定在哪一个操作系统平台上安装，目前最常用的是Windows、Mac OS X和Linux三大平台。由于目前使用Windows的人数最多，所以本书主要以Windows为主介绍Python运行环境的搭建与程序的开发，其他操作系统的安装方法类似。读者可以直接到Python的官网下载相应操作系统平台的Python安装包。https://www.python.org/downloads进入下载页面，浏览器会根据不同的操作系统显示不同的Python安装包下载链接。如果读者使用的是Windows平台，会显示如下图所示的Python下载页面。如果读者使用的是Mac OS X平台，会显示如下图所示的Python下载页面。不管是哪个操作系统平台的下载页面，都会出现“Download Python 3.8.2”按钮（随着时间的推移，可能版本号略有不同）。如果是Windows平台，下载的是exe安装程序，如果是Mac OS X平台，下载的是pkg文件，这是Mac OS X上的安装程序，直接安装即可。现在主要来说说在Windows平台如何安装Python运行环境。首先运行下载的exe文件，会显示如下图所示的Python安装界面。建议读者选中界面下方的“Add Python 3.8 to PATH”复选框，这样安装程序就会自动将Python的路径加到PATH环境变量中。在上面所示的界面中出现两个安装选项，“Install Now”和“Customize installation”，一般点击“Install Now”即可，点击该选项后，会开始安装Python，下图是显示安装进度的界面，读者只需要耐心等待Python安装完即可。安装完后，会出现如下图的安装成功界面。5.2 安装Anaconda开发一个完整的Python应用，光使用Python本身提供的模块是远远不够的，因此，需要使用大量第三方的模块。在发布Python应用时安装这些第三方模块是一件令人头痛的事，不过有了Anaconda，让这件事轻松不少。Anaconda是一个集成的Python运行环境。除了包含Python本身的运行环境外，还集成了很多第三方模块，如本书后面要将的numpy、pandas、flask等模块都集成在了Anaconda中，也就是说，只要安装了Anaconda，这些模块都不需要安装了。Anaconda的安装相当简单，首先进入Anaconda的下载页面，地址如下：https://www.anaconda.com/downloadAnaconda的下载页面也会根据用户当前使用的操作系统自动切换到相应的Anaconda安装包。Anaconda是跨平台的，支持Windows、Mac OS X和Linux。不管是哪个操作系统平台的安装包，下载直接安装即可。Anaconda的安装包分为Python3.x和Python2.x两个版本，建议读者下载Python3.x版的Anaconda。下载界面如下图所示。下载完后，直接安装即可。5.3 PyCharm安装支持Python的开发环境非常多，但适合工程化开发的环境，PyCharm是最好的，所以本文强烈推荐读者使用PyCharm作为首选IDE。读者可以从下面的链接下载PyCharm。https://www.jetbrains.com/pycharm/download/www.jetbrains.com/pycharm/download/PyCharm有两个版本，一个是社区版本，另外一个呢是专业版本。如果读者只想学习Python本身的功能。那么可以选择免费的社区版本。安装完后可以启动PyCharm，启动界面如下图所示。用户可以单击Create New Project创建一个新工程。最初的开发界面如下图所示。然后通过右键菜单创建一个空的Python文件，创建的界面如下图所示。创建完first.py文件，就可以编写代码了，如下图所示。编写完代码，在first.py右键菜单点击Run As，就可以直接运行first.py了。如果机器上安装了多个Python环境，可以点击下图的Edit Configurations，来显示Run/Debug Configurations对话框，并从Python interpreter列表框选择要使用的Python环境，如下图所示。6. 测试开发环境这一节来编写一个非常简单的Python程序来测试前面搭建的Python开发环境。这个程序定义了两个整数类型的变量n和m，并将两个变量相加，最后调用print函数输出这两个变量的和。首先在first.py文件中输入如下的代码：然后按前面介绍的方式运行first.py，如果在Console中显示如图所示的内容，说明Python的开发环境安装成功。', '3.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:18:43', '2024-05-20 19:18:43');
INSERT INTO `article` VALUES ('25', '2', '3', 'Python 模块和包', '模块与包是任何大型程序的核心，就连 Python 安装程序本身也是一个包。重点涉及有关模块和包的常用编程技术，例如如何组织包、把大型模块分割成多个文件、创建命名空间包。同时，也给出了让你自定义导入语句的秘籍。先给大家解释一下模块、包、库之间的概念： 模块(module)其实就是 py 文件，里面定义了一些函数、类、变量等 包(package)是多个模块的聚合体形成的文件夹，里面可以是多个 py 文件，也可以嵌套文件夹库是参考其他编程语言的说法，是指完成一定功能的代码集合，在 Python 中的形式就是模块和包 模块其实一个 py 文件，用来封装一组功能；包是将一类模块归集到一起，比模块的概念更大一些；库就是由其它程序员封装好的功能组，一般比包的概念更大一些。下面我们来分开介绍：模块由上面的内容我们得知模块就是一个 py 文件，这个文本文件中存储着一组功能，方面我们再次使用的时候，提高代码的复用率。我们成这一个的一个 py 文件为  Python 模块（Module）。其他 Python 脚本中，通过 import 载入定义好的 Python 模块。定义和调用 Python 模块我们先来看如何定义一个 Python 模块。定义一个 hello.py 模块，内容如下：def sayhello(  ):    print(\"Hello World!\") 通常我们使用 import 语句来引入模块，语法如下：import module1[, module2[,... moduleN]] 当解释器遇到 import 语句，如果模块在当前的搜索路径就会被导入。调用的时候使用 模块名.函数名 来进行调用以上的示例为例，我们新建 do.py 文件调用 hello.py 模块中方法。do.py 文件内容如下：# 导入模块 import hello   # 现在可以调用模块里包含的函数了 hello.sayhello() 一个模块只会被导入一次，不管你执行了多少次import。这样可以防止导入模块被一遍又一遍地执行。在 do.py 页面执行快捷键 ctrl+b 控制台输出：Hello World!，证明调用 hello.py 中的方法成功。这就是一个模块的定义和调用的示例，是不是也很简单。from ... import ...模块提供了类似名字空间的限制，允许 Python 从模块中导入指定的符号（变量、函数、类等）到当前模块。导入后，这些符号就可以直接使用，而不需要前缀模块名。语法如下：from modname import name1[, name2[, ... nameN]] 例如，要导入模块 hello 的 sayhello 函数，使用如下语句：## 直接导入方法 from hello import sayhello sayhello() from … import * 语句把一个模块的所有内容全都导入到当前的命名空间也是可行的，只需使用如下声明：from modname import * 这提供了一个简单的方法来导入一个模块中的所有项目。我们在 hello.py 中再添加一个 world 方法。def world():    print(\"Python World!\")在 do.py 文件中引入全部方法进行调用。## 导入所有方法 from hello import * sayhello() world() 执行后输出：Hello World! Python World! 证明 hello 模块中的两个方法都可以直接调用，实际项目中不推荐被过多地使用。包包（package）是 Python 中对模块的更高一级的抽象。简单来说，Python 允许用户把目录当成模块看待。这样一来，目录中的不同模块文件，就变成了「包」里面的子模块。此外，包目录下还可以有子目录，这些子目录也可以是 Python 包。这种分层，对模块识别、管理，都是非常有好处的。特别地，对于一些大型 Python 工具包，内里可能有成百上千个不同功能的模块。科学计算领域，SciPy, NumPy, Matplotlib 等第三方工具，都是用包的形式发布的。包定义常见的包结构如下：pakageName -------__init__.py -------moduleName1.py -------moduleName2.py ------- ... 包路径下必须存在 __init__.py 文件。示例：我们创建一个 cal 的包，包中有一个计算器的 model ，结构如下：cal -------__init__.py -------calculator.py calculator.py 模块的代码如下：def add(a,b) :    return a+b  def reduce(a,b) :    return a-b  def multiply(a,b) :    return a*b  def divide(a,b) :    return a/b 使用 Python 包Python 包的使用和模块的使用类似，下面是导入的语法：import 包名.包名.模块名 比如我们在 do.py 中导入 calculator.py# 导入包 import cal.calculator # 使用包的模块的方法 print(cal.calculator.add(1,2)) 但是导入调用的时候报名比较长，这样就可以使用from ... import ...语句来简化一下。# 导入包 from cal import calculator # 使用包的模块的方法 print(calculator.multiply(3,6)) 当包名越来越长的时候效果也会越好。文中示例代码在这里：https://github.com/ityouknow/python-100-days总结本节给大家介绍了 Python  模块和包的使用，对 Python 工程师使用提供了支撑，模块和包的合理使用不断可以提高代码的使用效率，也可以更规范的整个工程项目的调用。参考：https://liam.page/2017/07/23/modules-and-packages-of-python/好了，现在Python的开发环境已经搞定了，接下来就可以愉快地学习Python开发了。', '3.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:19:11', '2024-05-20 19:19:11');
INSERT INTO `article` VALUES ('26', '2', '3', 'Python 数据结构--序列', 'python中的数据结构是通过某种方式组织在一起的数据元素的集合，这些数据元素可以是数字、字符、甚至可以是其他数据结构 在Python中，最基本的数据结构是序列（列表和元组），序列中的每个元素都有一个序号（元素的具体位置），这个序号叫索引，索引下标从0开始，以此类推...... 本文着重介绍python的序列及其实际应用。序列概览Python中有6种内建的序列。其中列表和元组是最常见的类型。其他包括字符串、Unicode字符串、buffer对象和xrange对象。列表和元组的主要区别是列表可以修改，而元组不能，如果要根据要求来添加元素，这时候列表适用性会更好，但是当序列不能修改的时候，使用元组则更合适，使用元组与Python的运作方式相关。在python中几乎所有的情况下列表都可以替代元组，但是特殊情况不能（当使用元组作为字典的不可修改的键时，此时键不能修改，所以不能使用列表） 例如：#定义一个学生序列 >>> stuinfo=[\'zhangsan\',\'lisi\',\'wangwu\',18,20]同时序列中还可以包含序列，例如数据库：database#定义学生姓名和学生年龄，然后再定义一个属于自己的数据库将两个列表加入 >>> stuname=[\'zhangsan\',\'lisi\',\'wangwu\'] >>> stuage=[18,20,16] >>> database=[stuname,stuage] >>> database [[\'zhangsan\', \'lisi\', \'wangwu\'], [18, 20, 16]]注意： python还有一种名为容器（container）的数据结构，容器可以包含其他任意对象，容器主要包括序列和映射（例如：字典）两类。序列的每个元素都有自己的编号，而映射每个元素则有一个叫做“键”的名字。集合是另一种容器（在后面章节会作详细讲解）。通用序列操作python中所有序列类型都可以进行一些特定的操作，这些操作包括：索引、分片、相加、相乘以及检查某个元素是否属于序列的成员-->成员资格检测 除此之外，Python还有计算序列长度，找出最大和最小元素的内建函数。1.索引序列中所有元素都有编号，这些编号是从0开始，依次递增，访问这些元素通过下标即可访问，而这个编号就是索引，例如：>>> database[0] [\'zhangsan\', \'lisi\', \'wangwu\'] >>> database[1] [18, 20, 16]   #字符串序列的索引 >>> str=\'hello\' >>> str[0] \'h\' >>> str[1] \'e\' 注意： 字符串就是一个由字符组成的序列，索引0指向第一个元素 以上这就是索引，所有序列中都可以通过元素编号的方式进行索引，当使用负数索引时，Python会从右边到左进行所有，-1是从序列的最后一个元素开始，如下：#从最后一个元素开始 >>> str[-1] \'o\' #从倒数第二个元素开始 >>> str[-2] \'l\' 2.分片同样的和索引类似，分片是通过冒号操作来访问一定范围内的元素，例如：# 构建一个序列tag，里面包含一个元素 >>> tag=[\'https://www.cnblogs.com/yangyuqig/p/10101663.html\']  # 拿到这个元素后通过分片取出一个范围的值 >>> tag[0][0:24] \'https://www.cnblogs.com/\' 由上所知，分片操作的的实现需要提供两个索引作为边界，是一个左闭右开的区间，也就是第1个索引包含在分片内，而第2个索引不包含在这个分片内，例如：>>> num=[1,2,3,4,5,6,7,8,9,10] # 表示从第四个到最后一个元素 >>> num[3:10] [4, 5, 6, 7, 8, 9, 10] 除了上述方案，也可以通过显示方式进行操作：2.1 分片快捷操作>>> num[0:3] # 取到前面3个数据 [1, 2, 3] 2.2 分片步长操作分片操作可以给元素设置步长，在开始和结束的时候指定相应步长获取元素，例如：# 按照步长为2返回第1个和第6个之间的元素 >>> num[0:6:2] [1, 3, 5] 另外需要注意的是负数步长是从元素尾部到前遍历整个序列，所以负数的分片开始索引一定要大于结束索引>>> num[7:-1] [8, 9] 当开始索引和结束索引是负数时开始所以必须小于结束索引：>>> num[-9:-1] [2, 3, 4, 5, 6, 7, 8, 9] 对于一个正数步长，Python会从序列的头部开始向右提取元素，直达最后一个元素，而对于负数步长，则是从序列的尾部开始向左提取元素，直达提取到第一个，例如:# 提取前6个元素，步长为2 >>> num[:6:2] [1, 3, 5] # 提取从后往前的8个元素，步长为2 >>> num[:2:-2] [10, 8, 6, 4] 3.序列相加序列相加通过加号“+”进行序列和序列之间的连接操作：>>> \'hello\'+\' world !\'   \'hello world !\'  >>> [1,2,3]+[\'zhangsan\',\'lisi\',\'wangwu\'] [1, 2, 3, \'zhangsan\', \'lisi\', \'wangwu\'] 注意：只有相同类型的序列才能进行连接操作。4.序列相乘一个数字x乘以一个序列会产生一个新的序列,原来的序列会被重置成x次>>> [\'hello\'+\' world !\']*3 [\'hello world !\', \'hello world !\', \'hello world !\'] 5.成员资格检查一个元素是否在一个序列中使用运算符in进行检查， in运算符返回检查某个条件的布尔值，若为真返回true,否则返回false，例如：>>> str=\'hello\' >>> \'h\' in str True  >>> \'x\' in str False 6.序列长度、最大值和最小值序列长度、最大值和最小值使用内建函数len、max、min进行检测，len返回序列中所包含的元素数量，max和min分别返回序列中最大值和最小值的元素>>> len([11,34,23]) 3 >>> max(11,34,23) 34 >>> min(11,34,23) 11 总结本节给大家介绍了 Python  数据结构之序列的使用，对 Python 工程师使用提供了支撑，可以在项目中实际应用中取出相应元素。', '3.png', '1', '0', '0', '0', '0', '1', '2024-05-20 19:20:46', '2024-05-20 19:20:46');
INSERT INTO `article` VALUES ('27', '2', '3', 'Python os 模块详解', '1. 简介os就是“operating system”的缩写，顾名思义，os模块提供的就是各种 Python 程序与操作系统进行交互的接口。通过使用os模块，一方面可以方便地与操作系统进行交互，另一方面页也可以极大增强代码的可移植性。如果该模块中相关功能出错，会抛出OSError异常或其子类异常。注意，如果是读写文件的话，建议使用内置函数open()；如果是路径相关的操作，建议使用os的子模块os.path；如果要逐行读取多个文件，建议使用fileinput模块；要创建临时文件或路径，建议使用tempfile模块；要进行更高级的文件和路径操作则应当使用shutil模块。当然，使用os模块可以写出操作系统无关的代码并不意味着os无法调用一些特定系统的扩展功能，但要切记一点：一旦这样做就会极大损害代码的可移植性。此外，导入os模块时还要小心一点，千万不要为了图调用省事儿而将os模块解包导入，即不要使用from os import *来导入os模块；否则os.open()将会覆盖内置函数open()，从而造成预料之外的错误。2. 常用功能注意，os模块中大多数接受路径作为参数的函数也可以接受“文件描述符”作为参数。文件描述符：file descriptor，在 Python 文档中简记为 fd，是一个与某个打开的文件对象绑定的整数，可以理解为该文件在系统中的编号。2.1 os.name该属性宽泛地指明了当前 Python 运行所在的环境，实际上是导入的操作系统相关模块的名称。这个名称也决定了模块中哪些功能是可用的，哪些是没有相应实现的。目前有效名称为以下三个：posix，nt，java。其中posix是 Portable Operating System Interface of UNIX（可移植操作系统接口）的缩写。Linux 和 Mac OS 均会返回该值；nt全称应为“Microsoft Windows NT”，大体可以等同于 Windows 操作系统，因此 Windows 环境下会返回该值；java则是 Java 虚拟机环境下的返回值。因此在我的电脑（win10）上执行下述代码，返回值是nt：>>> import os>>> os.name\'nt\' 而在 WSL（Windows Subsystem Linux，Windows 下的 Linux 子系统）上的结果则是： >>> import os>>> os.name\'posix\' 查看sys模块中的sys.platform属性可以得到关于运行平台更详细的信息，在此不再赘述2.2 os.environos.environ属性可以返回环境相关的信息，主要是各类环境变量。返回值是一个映射（类似字典类型），具体的值为第一次导入os模块时的快照；其中的各个键值对，键是环境变量名，值则是环境变量对应的值。在第一次导入os模块之后，除非直接修改os.environ的值，否则该属性的值不再发生变化。比如其中键为“HOMEPATH”（Windows 下，Linux 下为“HOME”）的项，对应的值就是用户主目录的路径。Windows 下，其值为： >>> os.environ[\"HOMEPATH\"]\'d:\\\\justdopython\' Linux 下，其值为： >>> os.environ[\"HOME\"]\'/home/justdopython\' 2.3 os.walk()这个函数需要传入一个路径作为top参数，函数的作用是在以top为根节点的目录树中游走，对树中的每个目录生成一个由(dirpath, dirnames, filenames)三项组成的三元组。其中，dirpath是一个指示这个目录路径的字符串，dirnames是一个dirpath下子目录名（除去“.”和“..”）组成的列表，filenames则是由dirpath下所有非目录的文件名组成的列表。要注意的是，这些名称并不包含所在路径本身，要获取dirpath下某个文件或路径从top目录开始的完整路径，需要使用os.path.join(dirpath, name)。注意最终返回的结果是一个迭代器，我们可以使用for语句逐个取得迭代器的每一项：  >>> for item in os.walk(\".\"):...     print(item)...(\'.\', [\'do\'], [\'go_go_go.txt\'])(\'.\\\\do\', [\'IAmDirectory\', \'python\'], [])(\'.\\\\do\\\\IAmDirectory\', [], [])(\'.\\\\do\\\\python\', [], [\'hello_justdopython.txt\'])  目录树结构  2.4 os.listdir()“listdir”即“list directories”，列出（当前）目录下的全部路径（及文件）。该函数存在一个参数，用以指定要列出子目录的路径，默认为“.”，即“当前路径”。函数返回值是一个列表，其中各元素均为字符串，分别是各路径名和文件名。通常在需要遍历某个文件夹中文件的场景下极为实用。比如定义以下函数： def get_filelists(file_dir=\'.\'):    list_directory = os.listdir(file_dir)    filelists = []    for directory in list_directory:        # os.path 模块稍后会讲到        if(os.path.isfile(directory)):            filelists.append(directory)    return filelists 该函数的返回值就是当前目录下所有文件而非文件夹的名称列表。2.5 os.mkdir()“mkdir”，即“make directory”，用处是“新建一个路径”。需要传入一个类路径参数用以指定新建路径的位置和名称，如果指定路径已存在，则会抛出FileExistsError异常。该函数只能在已有的路径下新建一级路径，否则（即新建多级路径）会抛出FileNotFoundError异常。相应地，在需要新建多级路径的场景下，可以使用os.makedirs()来完成任务。函数os.makedirs()执行的是递归创建，若有必要，会分别新建指定路径经过的中间路径，直到最后创建出末端的“叶子路径”。示例如下： >>> os.mkdir(\"test_os_mkdir\")>>> os.mkdir(\"test_os_mkdir\")Traceback (most recent call last):  File \"\", line 1, in FileExistsError: [WinError 183] 当文件已存在时，无法创建该文件。: \'test_os_mkdir\'>>> >>> os.mkdir(\"test_os_mkdir/test_os_makedirs/just/do/python/hello\")Traceback (most recent call last):  File \"\", line 1, in FileNotFoundError: [WinError 3] 系统找不到指定的路径。: \'test_os_mkdir/test_os_makedirs/just/do/python/hello\'>>> >>> os.makedirs(\"test_os_mkdir/test_os_makedirs/just/do/python/hello\") 2.6 os.remove()用于删除文件，如果指定路径是目录而非文件的话，就会抛出IsADirectoryError异常。删除目录应该使用os.rmdir()函数。同样的，对应于os.makedirs()，删除路径操作os.rmdir()也有一个递归删除的函数os.removedirs()，该函数会尝试从最下级目录开始，逐级删除指定的路径，几乎就是一个os.makedirs()的逆过程；一旦遇到非空目录即停止。2.7 os.rename()该函数的作用是将文件或路径重命名，一般调用格式为os.rename(src, dst)，即将src指向的文件或路径重命名为dst指定的名称。注意，如果指定的目标路径在其他目录下，该函数还可实现文件或路径的“剪切并粘贴”功能。但无论直接原地重命名还是“剪切粘贴”，中间路径都必须要存在，否则就会抛出FileNotFoundError异常。如果目标路径已存在，Windows 下会抛出FileExistsError异常；Linux 下，如果目标路径为空且用户权限允许，则会静默覆盖原路径，否则抛出OSError异常，和上两个函数一样，该函数也有对应的递归版本os.renames()，能够创建缺失的中间路径。注意，这两种情况下，如果函数执行成功，都会调用os.removedir()函数来递归删除源路径的最下级目录。2.8 os.getcwd()“getcwd”实际上是“get the current working directory”的简写，顾名思义，也就是说这个函数的作用是“获取当前工作路径”。在程序运行的过程中，无论物理上程序在实际存储空间的什么地方，“当前工作路径”即可认为是程序所在路径；与之相关的“相对路径”、“同目录下模块导入”等相关的操作均以“当前工作路径”为准。在交互式环境中，返回的就是交互终端打开的位置；而在 Python 文件中，返回的则是文件所在的位置。在 Windows 下会有如下输出： >>> os.getcwd()\'d:\\\\justdopython\\\\just\\\\do\\\\python\' Linux 下的输出则是： >>> os.getcwd()\'/home/justdopython/just/do/python\' 2.9 os.chdir()“chdir”其实是“change the directory”的简写，因此os.chdir()的用处实际上是切换当前工作路径为指定路径。其中“指定路径”需要作为参数传入函数os.chdir()，该参数既可以是文本或字节型字符串，也可以是一个文件描述符，还可以是一个广义的类路径（path-like）对象。若指定路径不存在，则会抛出FileNotFoundError异常。在 Windows 下，调用该函数的效果为： >>> os.chdir(\"d:/justdopython/just/do\")>>> os.getcwd()\'d:\\\\justdopython\\\\just\\\\do\' 在 Linux 下的效果则是：  >>> os.chdir(\"/home/justdopython/just/do\") # 也可将参数指定为\"..\"，即可切换到父目录>>> os.getcwd()\'/home/justdopython/just/do\' 有了这个函数，跨目录读写文件和调用模块就会变得非常方便了，很多时候也就不必再反复将同一个文件在各个目录之间复制粘贴运行，脚本完全可以坐镇中军，在一个目录下完成对其他目录文件的操作，正所谓“运筹帷幄之中，决胜于千里之外”也。举例来说，可以通过将“当前工作目录”切换到父目录，从而直接访问父目录的文件内容： >>> os.chdir(\"..\")>>> os.getcwd()\'D:\\\\justdopython\\\\just\'>>> with open(\"hello_justdopython.txt\", encoding=\"utf-8\") as f:...     f.read()...\'欢迎访问 justdopython.com，一起学习 Python 技术~\'>>> os.listdir()[\'hello_justdopython.txt\'] 3. os.path 模块其实这个模块是os模块根据系统类型从另一个模块导入的，并非直接由os模块实现，比如os.name值为nt，则在os模块中执行import ntpath as path；如果os.name值为posix，则导入posixpath。使用该模块要注意一个很重要的特性：os.path中的函数基本上是纯粹的字符串操作。换句话说，传入该模块函数的参数甚至不需要是一个有效路径，该模块也不会试图访问这个路径，而仅仅是按照“路径”的通用格式对字符串进行处理。更进一步地说，os.path模块的功能我们都可以自己使用字符串操作手动实现，该模块的作用是让我们在实现相同功能的时候不必考虑具体的系统，尤其是不需要过多关注文件系统分隔符的问题。3.1 os.path.join()这是一个十分实用的函数，可以将多个传入路径组合为一个路径。实际上是将传入的几个字符串用系统的分隔符连接起来，组合成一个新的字符串，所以一般的用法是将第一个参数作为父目录，之后每一个参数即是下一级目录，从而组合成一个新的符合逻辑的路径。但如果传入路径中存在一个“绝对路径”格式的字符串，且这个字符串不是函数的第一个参数，那么其他在这个参数之前的所有参数都会被丢弃，余下的参数再进行组合。更准确地说，只有最后一个“绝对路径”及其之后的参数才会体现在返回结果中。 >>> os.path.join(\"just\", \"do\", \"python\", \"dot\", \"com\")\'just\\\\do\\\\python\\\\dot\\\\com\'>>> >>> os.path.join(\"just\", \"do\", \"d:/\", \"python\", \"dot\", \"com\")\'d:/python\\\\dot\\\\com\'>>> >>> os.path.join(\"just\", \"do\", \"d:/\", \"python\", \"dot\", \"g:/\", \"com\")\'g:/com\' 3.2 os.path.abspath()将传入路径规范化，返回一个相应的绝对路径格式的字符串。也就是说当传入路径符合“绝对路径”的格式时，该函数仅仅将路径分隔符替换为适应当前系统的字符，不做其他任何操作，并将结果返回。所谓“绝对路径的格式”，其实指的就是一个字母加冒号，之后跟分隔符和字符串序列的格式：>>> os.path.abspath(\"a:/just/do/python\")\'a:\\\\just\\\\do\\\\python\'>>> # 我的系统中并没有 a 盘 当指定的路径不符合上述格式时，该函数会自动获取当前工作路径，并使用os.path.join()函数将其与传入的参数组合成为一个新的路径字符串。示例如下： >>> os.path.abspath(\"ityouknow\")\'D:\\\\justdopython\\\\ityouknow\' 3.3 os.path.basename()该函数返回传入路径的“基名”，即传入路径的最下级目录。>>> os.path.basename(\"/ityouknow/justdopython/IAmBasename\")\'IAmBasename\'>>> # 我的系统中同样没有这么一个路径。可见 os.path.basename() 页也是单纯进行字符串处理 整这个函数要注意的一点是，返回的“基名”实际上是传入路径最后一个分隔符之后的子字符串，也就是说，如果最下级目录之后还有一个分隔符，得到的就会是一个空字符串：>>> os.path.basename(\"/ityouknow/justdopython/IAmBasename/\")\'\' 3.4 os.path.dirname()与上一个函数正好相反，返回的是最后一个分隔符前的整个字符串： >>> os.path.dirname(\"/ityouknow/justdopython/IAmBasename\")\'/ityouknow/justdopython\'>>> >>> os.path.dirname(\"/ityouknow/justdopython/IAmBasename/\")\'/ityouknow/justdopython/IAmBasename\' 3.5 os.path.split()哈哈 ，实际上前两个函数都是弟弟，这个函数才是老大。函数os.path.split()的功能就是将传入路径以最后一个分隔符为界，分成两个字符串，并打包成元组的形式返回；前两个函数os.path.dirname()和os.path.basename()的返回值分别是函数os.path.split()返回值的第一个、第二个元素。就连二者的具体实现都十分真实： def basename(p):    \"\"\"Returns the final component of a pathname\"\"\"    return split(p)[1]  def dirname(p):    \"\"\"Returns the directory component of a pathname\"\"\"    return split(p)[0] 通过os.path.join()函数又可以把它们组合起来得到原先的路径。3.6 os.path.exists()这个函数用于判断路径所指向的位置是否存在。若存在则返回True，不存在则返回False： >>> os.path.exists(\".\")True>>> os.path.exists(\"./just\")True>>> os.path.exists(\"./Inexistence\") # 不存在的路径False 一般的用法是在需要持久化保存某些数据的场景，为避免重复创建某个文件，需要在写入前用该函数检测一下相应文件是否存在，若不存在则新建，若存在则在文件内容之后增加新的内容。3.7 os.path.isabs()该函数判断传入路径是否是绝对路径，若是则返回True，否则返回False。当然，仅仅是检测格式，同样不对其有效性进行任何核验： >>> os.path.isabs(\"a:/justdopython\")True 3.8 os.path.isfile() 和 os.path.isdir()这两个函数分别判断传入路径是否是文件或路径，注意，此处会核验路径的有效性，如果是无效路径将会持续返回False。 >>> # 无效路径>>> os.path.isfile(\"a:/justdopython\")False>>> >>> # 有效路径>>> os.path.isfile(\"./just/plain_txt\")True>>> >>> # 无效路径>>> os.path.isdir(\"a:/justdopython/\")False>>> # 有效路径>>> os.path.isdir(\"./just/\")True 总结本文详细介绍了与操作系统交互的os模块中一些常用的属性和函数，基本可以覆盖初阶的学习和使用。有了这些功能，我们已经可以写出一些比较实用的脚本了。除了文中介绍的函数外，os模块还有很多更加复杂的功能，但大多是我们暂时用不到的，以后用到会进一步讲解。', '3.png', '1', '0', '0', '0', '0', '1', '2024-05-20 19:21:53', '2024-05-20 19:21:53');
INSERT INTO `article` VALUES ('28', '2', '3', 'Python 爬虫之 urllib 包基本使用', 'urllib 是一个 python 内置包，不需要额外安装即可使用，包里面包含了以下几个用来处理 url 的模块：·        urllib.request，用来打开和读取 url，意思就是可以用它来模拟发送请求，就像在浏览器里输入网址然后敲击回车一样，获取网页响应内容。·        urllib.error，用来处理 urllib.request 引起的异常，保证程序的正常执行。·        urllib.parse，用来解析 url，可以对 url 进行拆分、合并等。·        urllib.robotparse，用来解析 robots.txt 文件，判断网站是否能够进行爬取。掌握以上四个模块，你就能对网站进行简单的爬虫操作，下面我们逐个介绍。1、urllib.request 模块urllib.request 模块定义了以下几个函数。1.1 urllib.request.urlopen(url, data=None, [timeout, ]*, cafile=None, capath=None, cadefault=False, context=None)该函数主要用于模拟网站请求，返回一个 HTTPResponse 类型的对象。1.1.1 urlopen 函数中参数定义·        url，必选参数，是一个 str 字符串或者 Request 对象(后面会介绍)。·        data，bytes 类型的可选参数，如果传递的是字典型数据，可以用 urllib.parse.urlencode() 进行编码，返回 str 字符串，再将 str 转换成 bytes 字节流。如果传递 data 参数，urlopen 将使用 HTTP POST 方式请求，否则为 HTTP GET 请求。·        timeout，可选参数，设置超时时间(未设置时使用全局默认超时时间)，以秒为单位计时，如果 urlopen 请求超出了设置时间还未得到响应则抛出异常。·        cafile 和 capath，可选参数，在 HTTPS 连接请求时指定已认证的 CA 证书以及证书路径。·        cadefault，一般可忽略该参数。·        context，ssl.SSLContext 类型的可选参数，用来指定 SSL 设置。1.1.2 urlopen 函数返回类型urlopen 函数请求返回一个 HTTPResponse 响应上下文，或者请求异常抛出 URLError 协议错误，一般有如下属性：·        geturl()，返回检索的 url，通常用于判定是否进行了重定向。·        info()，返回网页的头信息。·        getcode()，返回 HTTPResponse 响应的状态码。1.1.3 urlopen 函数的应用实例# 创建一个 HTTP GET 请求，输出响应上下文from urllib.request import urlopenresponse = urlopen(\"http://www.python.org\")print(response.read())  # 创建一个 HTTP POST 请求，输出响应上下文from urllib.request import urlopenfrom urllib.parse import urlencodedata = {\'kw\' : \'python\'}data = bytes(urlencode(data), encoding = \'utf-8\')response = urlopen(\"https://fanyi.baidu.com/sug\", data)print(response.read().decode(\'unicode_escape\'))  # 创建一个 HTTP GET 请求，设置超时时间为0.1simport urllib.requestimport urllib.errortry:    response=urllib.request.urlopen(\'http://www.python.org\',timeout=0.1)    print(response.read()) except urllib.error.URLError as e:    print(e.reason) 1.2 urllib.request.Request(url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)该函数主要用于构造一个 url，返回一个 urllib.request.Request 对象。1.2.1 Request 函数中参数定义·        url，必选参数，请求的 url 地址。·        data，bytes 类型的可选参数。·        headers，字典类型，有些 HTTP 服务器仅允许来自浏览器的请求，因此通过 headers 来模拟浏览器对 url 的访问，比如模拟谷歌浏览器时使用的 headers：\"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36\"。可以通过调用 add_header() 来添加 headers 信息。·        origin_req_host，请求方的 host 名称或者 IP 地址。·        unverifiable，表示这个请求是否无法验证，默认为 False。比如请求一张图片，如果没有权限获取图片那它的值就是 true。·        method，是一个字符串，用来指示请求使用的方法，如：GET,POST,PUT 等，默认是 GET 请求。1.2.2 Request 函数返回类型与 urlopen 函数请求返回一样，一般返回一个 HTTPResponse 响应上下文。1.2.3 Request 函数的应用实例 # 创建 GET 请求import urllibparams = {\'username\':\'xxx\',\'password\':\'123\'}base_url=\'http://www.baidu.com\'url=base_url + \'?\' + urllib.parse.urlencode(params)print(url)params = {\'username\':[\'xxx\', \'yyy\'], \'password\':\'123\'} # username 键对应多个值base_url=\'http://www.baidu.com\'url=base_url + \'?\' + urllib.parse.urlencode(params) # doseq 设置为 False，会解析成乱码print(url)url=base_url + \'?\' + urllib.parse.urlencode(params, True) # doseq 设置为 Trueprint(url) 4、 urllib.robotparse 模块rebotparser 模块提供了一个 RobotFileParser 类，主要用来解析网站上发布的 robots.txt，然后根据解析内容判断爬虫是否有权限来爬取这个网页。4.1 robots.txt 文件robots.txt，存放于网站根目录下，采用 ASCII 编码的文本文件，记录此网站中的哪些内容是不应被爬虫获取的，哪些是可以被爬虫获取的。robots.txt 文件内容举例User-agent: * Disallow: / Allow: /public/·        User-agent，爬虫的名称，将其设置为 * 代表协议对任何爬虫有效，如果设置为 Baiduspider 则代表协议仅对百度爬虫有效，要是有多条则对多个爬虫有效，至少需要指定一条。·        Disallow，网页中不允许抓取的目录，上述例子中设置的 / 代表不允许抓取所有的页面。·        Allow，一般和 Disallow 一起使用，用来排除单独的某些限制，上述例子中设置为 /public/ 表示所有页面不允许抓取，但可以抓取 public 目录。4.2 urllib.robotparser.RobotFileParser(url=\'\') 类及其常用方法·        set_url(url)，设置引用 robots.txt 文件的 url，如果在创建 RobotFileParser 对象时传入了 url，那么就不需要使用这个方法设置 url。·        read()，读取 robots.txt 文件并将其提供给解析器，不返回任何内容。·        parse(lines)，用来解析 robots.txt 某些行的内容，并安装语法规则来分析内容。·        can_fetch(useragent, url)，传入两个参数，用户代理以及要爬取的网站，返回的内容是该用户代理否可以抓取这个网站，结果为 True 或 False。应用举例# 使用两种爬虫代理分别查看是否可以对 \'http://www.baidu.com\' 网站进行爬取from urllib.robotparser import RobotFileParserrp = RobotFileParser()rp.set_url(\"http://www.baidu.com/robots.txt\")rp.read()print(rp.can_fetch(\'Baiduspider\', \'http://www.baidu.com\')) print(rp.can_fetch(\'*\', \'http://www.baidu.com\')) 总结', '3.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:23:33', '2024-05-20 19:23:33');
INSERT INTO `article` VALUES ('29', '2', '3', 'Flask 框架集成Bootstrap', '前面学习了 Flask 框架的基本用法，以及模板引擎 Jinja2，按理说可以开始自己的 Web 之旅了，不过在启程之前，还有个重要的武器需要了解一下，就是著名的 Bootstrap 框架和 Flask 的结合，这将大大提高开发 Web 应用的效率。简介Bootstrap 是 Twitter 公司的设计师 Mark Otto 和 Jacob Thornton 开发的 Web 项目开发框架，简洁、直观、强悍，使得 Web 开发更加快捷，一经推出后颇受欢迎，一直是 GitHub 上的热门开源项目，这么好的开发框架 Flask 一定少不了。期初在 Flask 的扩展包中有 flask-bootstrap, 不过后来更新很少，后来 greyli 基于 flask-bootstrap 开发了 bootstrap-flask 扩展模块，不经支持最新的 Bootstrap4， 还基于 Jinjia2 模板引擎的宏，做了更多的扩展。值得一提的是 greyli 是个中国帅小伙，能在文章后面的参考链接中找到他。安装使用 pip 安装：·         pip install bootstrap-flask 如果之前安装过 flask-bootstrap, 需要将其卸载掉，不然两者会有冲突，如果您遇到错误提示: jinja2.exceptions.UndefinedError: \'bootstrap\' is undefined，很大可能就是这个问题小试牛刀导入模块创建一个 flaskbootstrap.py 程序文件，引入模块 flask_bootstrap, 您没看错，引入的并不是 bootstrap-flask： from flask_bootstrap import Bootstrap 注意：我在做示例时，将代码文件名定义为 flask_bootstrap.py, 运行时提示 无法导入 Bootstrap 模块，这是因为文件名与模块 flask_bootstrap 冲突了然后对 Flask 应用初始化：app = Flask(__name__) # 创建一个 Flask 应用bootstrap = Bootstrap(app) # 为应用初始化 bootstrap 给应用加载 bootstrap 主要是给应用加上 Jinja2 的扩展，下面的工作就是写模板文件。创建基础模板bootstrap-flask 虽然基于 flask-bootstrap，但是却没有提供默认的模板文件，期望在后续版本中能有吧，不过自己写也不麻烦，我们在文件夹 templates 中创建一个 base.html，内容是：{% raw %}{% from \'bootstrap/nav.html\' import render_nav_item %}                            {% block title %} Flask Bootstrap {% endblock %}                 {{ bootstrap.load_css() }}                                                  Python100                                                                                                                        {{ render_nav_item(\'index\', \'首页\', use_li=True) }}                                            {% block content %}           Hello Flask Bootstrap!         {% endblock %}                    {% block footer %}                  © 2019 Python 技术                            {% endblock %}                     {{ bootstrap.load_js() }}     {% endraw %}是不是感觉很头大，不过是代码多了些，结构很其实很简单，大部分代码是 Bootstrap 提供的基本框架代码，然后加入了一些 bootstrap-flask 的扩展。我们来分析一下：·        首先引入导航元素宏 render_nav_item，因为在后面制作导航菜单时要用·        然后是大段的 Bootstrap 框架代码·        定义块，用来在继承 base.html 的子模板中做替换，其中有 标题、内容和页尾·        动态加载 Bootstrap 样式和脚本，通过 bootstrap.load_css() 和 bootstrap.load_js()·        在导航菜单的位置，使用宏 render_nav_item 创建一个首页菜单这样就完成基础模板的定义，稍后会对 render_nav_item、bootstrap.load_css() 和 bootstrap.load_js() 做解释。创建页面模板有了基础模板，就可以做具体的页面模板了，先做首页 index.html，代码如下:{% raw %} {% extends \"base.html\" %}  {% block content %}  Hello Flask Bootstrap {% endblock %} {% endraw %}是不是简洁多了？下面在 flaskbootstrap.py 中加上首页的视图函数: @app.route(\'/\')def index():    return render_template(\'index.html\') 启动如果一切顺利，访问 localhost:5000 就能看到如下效果:首页效果调整浏览器页面大小，可以看到页面自适应效果，是不是很神奇。接下来详细说明一下 bootstrap-flask 模块资源助手在小试牛刀中，能看到对 Bootstrap 样式和脚本引用的方法 bootstrap.load_css() 和 bootstrap.load_js()，默认情况下会自动从 Bootstrap 的 CDN 上引用最新版的 Bootstrap 资源，例如: https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css，这样就方便了开发者对 Bootstrap 资源的引用和升级。使用本地资源如果想要从其他位置或者本地引用资源，只要在给应用初始化完 Bootstrap 之后，将应用的 BOOTSTRAP_SERVE_LOCAL 属性设置为 True 就好了: app = Flask(__name__) # 创建一个 Flask 应用bootstrap = Bootstrap(app) # 为应用初始化 bootstrapapp.config[\'BOOTSTRAP_SERVE_LOCAL\'] = True  # 设置为使用本地资源 本地资源放在 static 目录下(这个目录是 Flask 框架默认的静态资源目录)，Bootstrap 本地资源放置如下:Bootstrap 资源bootstrap.load_css()加载 Bootstrap 样式资源， 参数:·        version，指定 Bootstrap 样式版本号，默认值为 4.3.1，本地资源无效bootstrap.load_js()加载 Bootstrap 脚本资源参数：·        version，指定 Bootstrap 脚本版本号，默认为 4.3.1，本地资源无效·        jquery_version，指定 JQuery 版本号，默认为 3.3.1，本地资源无效·        popper_version，指定 Popper 版本号，默认为 1.14.0，本地资源无效·        with_jquery，是否加载 JQuery， 默认为 True·        with_popper，是否加载 Popper, 默认为 True宏bootstrap-flask 主要的改进是加入了很多方法是用的宏，让对页面效果的编辑像写逻辑代码一样，并在宏中还对所处环境信息进行了判断，比如菜单是否要激活，分页控件动态效果等等，下面介绍几个典型的宏render_nav_item()生成一个导航菜单参数:·        endpoint，路径点，可以直接写视图函数名·        text，标题代码示例:{% raw %} {% from \'bootstrap/nav.html\' import render_nav_item %}             {{ render_nav_item(\'index\', \'Home\') }}        {{ render_nav_item(\'explore\', \'Explore\') }}        {{ render_nav_item(\'about\', \'About\') }}     {% endraw %}render_breadcrumb_item()面包屑导航条 参数:·        endpoint，路径点，可以直接写视图函数名·        text，标题代码示例:{% raw %} {% from \'bootstrap/nav.html\' import render_breadcrumb_item %}             {{ render_breadcrumb_item(\'home\', \'Home\') }}        {{ render_breadcrumb_item(\'users\', \'Users\') }}        {{ render_breadcrumb_item(\'posts\', \'Posts\') }}        {{ render_breadcrumb_item(\'comments\', \'Comments\') }}     {% endraw %}render_static()静态资源引用，例如引用 css 、js 或者 图标参数:·        type 资源类型，可以是 css 或 js 或 icon·        filename_or_url 资源路径，文件名 或者 参数 local 为 False 时的远程 url·        local 是否本地资源，默认为 True代码示例:{% raw %}{% from \'bootstrap/utils.html\' import render_static %} {{ render_static(\'css\', \'style.css\') }} {% endraw %}其他宏还有有些宏很有用，例如 表单(form)相关的，还有分页相关的，不过这些会涉及到其他 Flask 扩展模块，我们会在介绍 表单 和 数据库 的章节中做进一步学习，如果您有兴趣，可以浏览参考链接中的内容。总结这篇文章简单介绍了 Flask 框架中如何使用 Bootstrap 扩展，从一个简单的示例开始，讲解了基于 Jinja2 模板引擎的 bootstrap-flask 模块的使用，其中包括资源助手 bootstrap.load_css() 和 bootstrap.load_css() ，以及一些基本的宏的用法，在参考代码中有较为完整的例子，您可以作为参考。在后面的文章中将会陆续介绍 表单 和 数据库 的使用，敬请期待。', '3.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:24:32', '2024-05-20 19:24:32');
INSERT INTO `article` VALUES ('30', '2', '4', '2023年前端十大Web发展趋势', '虽然就个人观点，我觉得 Web 开发的前景已经好几年没什么进展（2016 年至 2021 年），但在刚刚过去的 2022 年中确实又猛窜了一波。在本文中，我想跟大家聊聊自己看到的最新 Web 开发趋势。相信这波浪潮会继续激发 Web 开发者的关注，也让我对万象更新的 2023 年更具期待。闲言少叙，我们马上进入正题。（元）框架单页应用程序（SPA）及各类相关框架（包括 React.js、Vue.js、Svelte.js 等）或多或少都经历过一定的炒作周期，也用多年阅历证明了自身强大的生命力。但随着以这些解决方案为基础的元框架的快速兴起，可以看到应用程序正在明显从客户端渲染（CSR）转向服务器端渲染（SSR）。如今，无论你使用哪一种 JavaScript 框架，总能看到 SSR 的影子。前端调查问卷www.wjx.cn/vm/h09xeQT.aspx其中最具人气的 Next.js 元框架就以 React.js 为基础。React 核心开发者 Andrew Clark 将 2022 年发布的新版本称为“真正的 React 18”，因为其中包含 React 团队为底层库基础构建块构建的所有 battery（例如 Suspense、流式 SSR 等）。Vercel（Next.js 背后的公司）也与 React.js 核心团队紧密合作，共同打造出色的开发者体验。虽然不少开发者都对 Next.js 和 React.js 之间过于“亲密”的关系颇有微词，但 React.js 并非不可替代。最近刚刚被 Shopify 收购的 Remix，就采用不同方法将 React.js 转化为元框架（例如将 Web 标准设为优先）。而且在竞争之外，两套框架之间也有一定程度的功能融合（例如嵌套路由）。除了现代 SSR 领域最有力的参与者、帮助众多前端开发者顺利成型为全栈开发者的 Next.js，其他一些重要框架同样值得大家关注：SvelteKit（基于 svelte.js 构建）及其最新 1.0 版本是由 Vercel 和 SolidStart（基于 Solid.js 构建）提供支持，较 React.js 拥有更好的开发者体验。应用程序与渲染模式虽然过去的十年（2010 年至 2020 年），Web 世界一直由单页应用程序（SPA）及其客户端渲染模式（CSR）所主导——从 Knockout.js 到 Ember.js，再到 Angular.js、React.js 以及 Vue.js 莫不如是——但最近两、三年，人们对使用元框架的服务器端渲染（SSR）越来越青眼有加。从外部来看，这似乎只是历史的又一轮循环，毕竟在多页应用程序（MPA）中使用 SSR 和 JavaScript（例如 jQuery、MooTools、Dojo.js 等）的作法早在 2005 年到 2010 年就曾盛极一时。但这波浪潮的意义绝不只是曾经的 Java（例如 JSP）或后来的 Ruby on Rails 被纳入 SSR，而在于 JavaScript 依赖性的不断增长。几年以来，Next.js 一直是这股变化背后的核心驱力，而 SvelteKit 等其他元框架也正在加入战团、共同促成这一历史性转变。尽管两种模式的基本用途并不相同，但凭借长久以来与静态站点生成（SSG）的竞争，SSR 如今已经拥有近乎完美的性能表现（参考 Next.js 和 Gatsby.js）。在应用场景下，SSG 一般用于静态内容（例如博客等网站），而 SSR 则用于动态内容（例如 Web 应用程序）。如果需要考虑 SEO（搜索引擎优化），则 SSR 和 SSG 均适用。但如果需要提供高度动态的内容，或者是交付以用户为中心的内容并涉及身份验证，则 SSG 适用性较差（在部署前一次性构建，即静态）；这时候最好是在 SSR（能根据服务器上的单个数据请求按需构建）或者是最近热度飙升的 CSR（在客户端上按需获取个别数据）间做选择。但这里要强调，CSR、SSR 和 SSG 都不属于新兴的渲染技术。虽然 SSR 和 SSG 在前几年迎来了一波性能优化趋势，但实际发展的只是增量静态再生成（ISR）和流式 SSR 等更具体的渲染技术。前者改善了 SSG 性能，允许在每页基础之上静态重建整个网站。更进一步的方法还有按需 ISR，也称按需重新验证，可通过应用程序公开的 API 触发重建（例如在 CMS 数据更新时触发）。另一方面，流式 SSR 则优化了服务器端渲染的单线程瓶颈。普通 SSR 需要在服务器上等待数据就绪，之后再将渲染完成的内容发送至客户端。相比之下，流式 SSR 允许开发者将应用程序拆分成多个块，让各个块逐步由服务器并行发送至客户端。过去几年间，SPA/MPA 中的 SSG 和 SSR 渲染模式由极简单，逐步发展成如今愈发微妙的形态。而且不单是 ISR 和 SSR 流有所联系，部分水合（Partial Hydration，例如 React 服务器组件）允许仅在客户端上水合某些组件、渐进式水合可对水合顺序进行细粒度控制、Island 架构（例如 Astro）面向 MPA 中的隔离应用或组件，甚至出现了以可恢复性代表水合（例如 Qwik）的另一种有效方法。边缘无服务器SSR 和 SSG 等渲染技术与边缘无服务器的普及态势高度相关，原因是这些趋势均受到性能驱动，目的是在浏览器中提供无缝的用户体验。从本质上讲，正是为了向用户提供更快的网站和 Web 应用程序响应速度，才最终催生出边缘无服务器这一技术分支。这里咱们还是从头开始慢慢捋顺：无服务器，又称无服务器函数、无服务器计算 （例如 AWS Lambda）或云函数（例如 Google.Firebase Cloud Functions），多年来一直在云计算领域占据一席之地。虽然无服务器并不是真正的不需要（远程）底层服务器，但开发者已经不必管理服务器及其相关任务（例如基础设施按需扩展）。相反，用户只需要将单一功能部署为无服务器函数，其他所有运维工作均由云服务商承担。无服务器函数的出现带来了一大优势：由于不需要将应用程序服务器部署到特定一处或几处数据中心，我们首次实现了功能在世界各地的广泛覆盖。因此在理由情况下，无服务器函数能够尽可能贴近与用户间的距离，即最大程度降低客户端 - 服务器间的往返延迟，由此改善用户体验。也正是这种尽可能靠近用户部署无服务器函数的思路，创造出了边缘计算和边缘函数两个术语。众多云服务商（包括 Cloudflare 和 Cloudflare Workers、Vercel 及其 Edge Network、Deno 及其 Deno Deploy 等）已经在这个领域展开竞争，各自努力为最终用户提供最佳交互时间（TTI）体验。边缘函数不仅能加快 SSG/SSR 内容的交付速度（因为连接最终用户的线路更短），而且能将结果缓存到离用户更近的位置。但除了性能之外，边缘计算还在成本等其他重要因素上具备优势。例如，对于边缘函数，客户端与服务器之间往来的数据中有相当一部分并不需要交由主数据中心处理。在物联网场景中，有大量非相关数据（例如内容无任何变化的视频记录帧）其实没有任何意义，直接在边缘位置筛选即可。这就大大节约了数据传输与集中设施处理带来的日常开销。数据库复兴随着无服务器（边缘位置）的出现，数据库也迎来一波复兴。使用无服务器函数，开发者很快就会遇到数据库连接开启过多的问题，这是因为新的边缘设施形态导致每台服务器不再固定保持一条开启连接，而是每个无服务器函数都与数据库一一连接。虽然连接池能够很好解决问题，但用户要么需要自建，要么由第三方服务商提供。无服务器数据库领域的热门竞争者包括 PlanetScale（MySQL）、Neon（PostgreSQL）和 Xata（PostgreSQL），它们具备数据库分支、schema diffing 和强大的搜索 / 分析 / 洞察功能。遍布全球各地的无服务器设施只需要提供边缘缓存或分布式只读数据库，确保让数据尽可能靠近用户位置、最大程度降低延迟。如果第三方服务不仅需要分发数据库，还需要分发应用程序，http://Fly.io 能够将所有内容打包至单一平台当中。这类应用就超越了常规数据库，进而推动新的技术变革。人们常将 Railway 视为 Heroku 的继任者，它为平台即服务（PaaS）带来了部署技术堆栈所需要的一切。如果大家希望将服务链上移至后端即服务（BaaS），则可通过 Supabase 使用 Firebase 的开源替代方案，获得应用程序 / 数据库托管、身份验证和JavaScript 运行时一切都始于 Ryan Dahl 在 2009 年一场会议上公布的 Node.js。最初，Node.js 的目标只是将 JavaScript 和浏览器拆分开来，尝试将其运行在服务器端。但后来，JavaScript 成为过去十年间最成功的 Web 开发驱动力。本质上，Ryan Dahl 在无需浏览器本体的情况下，为 Node.js 开发出了名为 V8 的 JavaScript 引擎（由 Chrome 实现）。因此，Chrome 浏览器和 Node.js 使用的是完全相同的 JavaScript 引擎，但二者各自有自己的 JavaScript 运行时（例如浏览器 API 与节点 API）来实现交互。十年之后，Ryan Dahl 宣布 Deno 成为 Node 的继任者，并承诺为开发人员提供一个更安全、更快捷的环境，其中还将包括浏览器 API、TypeScript 和一个开箱即用的标准库。Deno 同样运行在 V8 引擎之上，但如今的它只是众多 JavaScript 运行时中的一种。在边缘函数这一竞争领域，各云服务商也在纷纷实现自己的 JavaScript 运行时（例如 Cloudflare Workers，专门针对自家 Cloudflare 基础设施进行了优化）。因此，Deno 的商业模式也开始向云服务商转型，打造出 Deno Deploy 及其即时边缘渲染 SSR 框架（最初仅为概念验证）Deno Fresh。此外，像 Bun（以运行在 JavaScriptCore 引擎上，却依托于 Zig 实现而闻名）这样的独立解决方案，也在这场以速度为比拼要素的 JavaScript 运行时竞赛中获得了一定关注。面对这么多运行时选项，相信敏锐的读者朋友肯定感受到了技术碎片化的倾向。如果协调不当，那我们又会像当年各种各样的浏览器那样疲于为 JavaScript 提供支持。但好在这次竞争的焦点在于服务器端，而且不同云服务商对于各种 JavaScript 运行时的关注度也大有区别。为了保持江湖地位，Deno、Vercel、Cloudflare 等利益相关方纷纷加入 WinterCG，表示愿意就 JavaScript 运行时间的 API 互操作性开展合作。Monorepo过去，Monorepo 策略主要用于大型应用程序，其中各项目在单一版本控制仓库中仅包含较小体量。这些较小的项目单元可能是独立应用程序（例如 SPA、MPA），也可能是可复用包（例如函数、组件、服务等）。这种项目拆分再合并的作法可以追溯到 2000 年初，那时候的名称叫共享代码库。但如今的 Monorepos 不仅面向大型应用程序，同时也开始服务于小型企业和开源项目。例如，一家公司可以在 Monorepos 中包含各种包，例如共享 UI 组件、共享设计系统（例如可复用的协作设计）以及不同领域的日常实用工具函数。这些包可以在各种应用程序中直接导入：使用所有共享包的实际应用程序（例如 http://app.mywebsite.com 客户端渲染）、仅使用共享设计系统包且考虑 SEO 需求的主页 / 产品 / 登陆页面（例如由服务器端渲染或静态站点生成的 http://mywebsite.com），以及使用共享 UI 组件和共享设计系统包的技术文档页面（例如 http://docs.mywebsite.com）。现已被 Vercel 收购的 Turborepo，目前就致力于在 JavaScript/TypeScript 中大肆宣传 Monorepo 方法。Turborepo 帮助开发团队在 Monorepo 中为所有应用程序和包创建构建管线。其最大亮点，就是能在本地机器或云端实现跨团队的管线内 build 缓存。Turborepo 与 npm/yarn/pnpm 工作区（依赖项管理）和变更集（版本控制）等其他重要 Monorepo 工具相结合，共同为这部分开发生态吸引到了全球 Web 社区的目光。Turborepo 的竞争对手包括 Nx、Rush 和 Lerna（一段时间停止维护，后被 Nx 开发商 Nrwl 所收购）。实用工具优先的 CSS对这波趋势，喜欢的超喜欢、讨厌的特讨厌。Tailwind CSS 是实用工具优先 CSS 的典型代表。一方面，开发人员讨厌它的存在令 UI 代码显得冗长；但另一方面，开发者又喜欢它出色的开发体验。作为直接受众，开发人员只需要在项目中进行一次配置，即可立即在 HTML 中使用其预定义的 CSS。但随着近期服务器端渲染（SSR）的兴起，这种关于实用工具优先 CSS 的爱恨割裂有望彻底结束。几年来，像 Styled Components（SC）和 Emotion 这样的 CSS-in-JS 解决方案，一直是现代基于组件的 Web 应用程序样式的主导力量。然而，如果说 SSR 世界始终以性能为至高目标，那 CSS-in-JS 的存在本身就是反性能的：它会让包更加臃肿（SC 为 12.7 kB，Emotion 为 7.9 kB），而且在插入 DOM 前的 CSS 序列化也会带来额外的运行时开销。因此，我们可能会看到开发人员转向对 SSR 更友好的解决方案，例如将实用工具优先 CSS（例如 Tailwind CSS、UnoCSS）与预定义的 UI 组件（例如 DaisyUI）配对，使用 CSS 模块等其他同样流行的替代方案，或者选择零运行时 / 编译时 CSS-in-JS 类方案（例如 vanilla-extract、linaria、astroturf、complied 等）。配合 TypeScript 实现端到端类型安全从 JavaScript 到 TypeScript 的演变已经势不可挡。在这场席卷整个 Web 开发世界的大迁移中，全栈应用的端到端类型安全无疑是一大核心驱力。这个概念的实现与通信层（API）密切相关，因为通信层需要将类型化的实体（例如 type User、type BlogPost 等）从服务器桥接至客户端应用程序。在涉及客户端 -0 服务器通信的 Web 开发中，常见的选项是 REST 和 GraphQL。二者能与 OpenAPI for REST 和 GraphQL Code Generator for GraphQL 配合使用，为前端应用程序生成类型化的 schema 文件。除此之外，还有名为 tRPC 的类型安全 API 后起之秀，它已经证明自己完全有能力成为 REST/GraphQL 的替代方案。如果您已经使用了前端和后端共享代码的 TypeScript Monorepo，tRPC 允许大家将所有类型从后端导出至前端应用程序，过程中无需生成任何类型化 schema。之后，前端只须使用在后台通过 HTTP 连接的类型化函数即可调用后端 API，实现客户端 - 服务器间通信。未来，全栈应用程序的总体趋势一定会转向这种类型安全解决方案。作为其中的典型代表，tRPC、Zod、PrismatTanStack Router 都能在应用程序边缘提供类型安全保障。构建工具在 React-land 中，create-react-app（CRA）曾多年占据主导。这在当时掀起了一场小小的革命，因为初学者获得了一个随时可用的 React 入门项目，不再需要使用 React 配置自定义 Webpack。但过去短短一年之间，Webpack 却迅速过时。Vite 虽然是单页应用程序（SPA）领域的新秀，但却能跟所有流行框架（例如 React.js）配合构建入门项目。作为 Vue.js 缔造者尤雨溪的又一力作，Vite 的定位是下一代前端工具。在引擎盖之下，它从 esbuild 处继承了强大的功能；而且跟其他 JavaScript 打包器相比，它是用 GO 编写的，因此打包依赖项的速度能达到竞争对手（例如 Webpack）的 10 到 100 倍。Vite 的生态系统是伴随着 Vitest（Jest 的测试替代方案）等新增功能而蓬勃发展，同时 Vercel 的 Turbopack 等同类竞争方案近期也开始涌现。Turbopack 被称为 Webpack 的继任者，因为它是由 Webpack 的缔造者 Tobias Koppers 牵头开发完成。由于 Next.js 既是 Webpack 的现用户，一边又是 Turbopack 的开发商，所以预计 Next.js 和 Turbopack 在后续将成为紧密关联的一对 Web 组合。AI 驱动开发AI 最终会消灭开发者的工作岗位吗？这个问题还贿答案，但 AI 驱动开发确实在 2022 年内成为了现实。随着 GitHub Copilot 的发布，开发者们能够在自己喜爱的各种 IDE 中与 AI 助手结对。其使用过程与常规编码或者注释编写没什么区别，GitHub Copilot 会自动补全细节以尽量提升代码质量。还不止于此：OpenAI 的 ChatGPT 是一套高度通用的语言模型，而且在编程领域也有不俗表现。没错，ChatGPT 既能回答形式多样的自由提问，也能生成颇为靠谱的开发成果。不少开发者不知不觉减少了对 Stack Overflow 的访问，转而跟 ChatGPT 讨论技术问题。在多数情况下，ChatGPT 都能以搜索引擎替代品的姿态提供非常有用的答案（虽然还称不上完美）。相较于存在大量 SEO 垃圾、甚至跟开发毫无关联的广告内容，ChatGPT 的使用感受相较于传统搜索引擎提升了一大截。但请注意，这种短期收益也许会带来深远的危害。宏观来讲，AI 创建的内容可能、甚至可以说一定会危害整个互联网。以往手动创建的 SEO 宣传内容已经是个大难题，未来没人拦得住 ChatGPT 以人类无法比拟的效率自动生成更多 SEO 垃圾。如果 ChatGPT 自己在训练中也继续使用这些垃圾内容，后果将不堪设想。还有一些我觉得很重要，但未被列入十大的重要趋势。首先，Tauri 作为 Electron 的替代品开始进入 JavaScript/CSS/HTML 实现的桌面应用程序；Playwright 正成为 Cypress 的 E2E 测试替代品；Warp 与 Fig 有望成为下一代终端；CSS 容器查询则作为 CSS 媒体查询的响应式设计替代方案；最后，htmx 作为富 HTML 格式，能够不借助 JavaScript 创建出交互式用户界面。总之，以上只是我的个人整理，感兴趣的朋友不妨自行探究更多细节。希望这次的文章能帮大家更好地了解 Web 开发生态系统的发展现状。Web 开发无界，江湖有缘再见！', '4.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:25:35', '2024-05-20 19:25:35');
INSERT INTO `article` VALUES ('31', '2', '4', '前端工具1', '自动化： Gulp 、 Grunt 、百度Fis 、Ant、Yeoman、Codekit、Koala、Webpack预编译： Slim、Haml、Coffeescript、Sass、BabelJs、Jade、Less、Stylus、Pleeease、PostCSS、查找工具：CssTriggers、screensiz.es、友盟指数、javascripting、builtwith、thetoolbox、stylesheets版本控制：Github、GitCafe、GitLab、Bitbucket、Sourcetree、Cornerstone、版本控制之道、ProGit、廖雪峰的git教程、svn教程编辑器：Sublime Text、Atom、HBuilder、WebStorm、MacDown、UltraEdit、ace、Brackets、LightTable、Visual Studio Code在线编辑：Jsfiddle、Codepen、Jsbin、Runjs、sassmeister调试/测试：Firebug、YSlow、IEDeveloperToolbar、Fiddler、ChromeDevTools、JSLint、JSHint、CSSLint、HTML Validators、UnitJS、Jasmine、BrowserStack、Testem、Dalekjs、NightWatch、Hardy部署流程：YUI Compressor、UglifyJs、CleanCss、JSDoc高效工具：Dash、奇妙清单、Omnigraffle其它：CodeIf、H5Viewer、anvil、cssmixins、JSON Server、ngrok、Glyphter、CSSStats、spritegen、placehold.it、MWeb、browsersync.io、kjson.com、strut.io、Reveal.js、iconverticons.com、智图、longshadows、cubic-bezier、browserhacks、tool.oschina.net、Pagespeed、icomoon.io、circulus、Mock.js', '4.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:26:13', '2024-05-20 19:26:13');
INSERT INTO `article` VALUES ('32', '2', '4', '从零开始学习Web前端开发：详细指南与建议', '1. 了解Web基础首先，你需要对互联网和Web的工作原理有一个基本了解。掌握域名、URL、Web服务器和浏览器等基本概念，为后续学习打下坚实的基础。2. 学习HTMLHTML是构建任何Web页面的基础。学习HTML的基本标签，如、、、、等，并实践构建简单的网页结构。同时，不要忘了学习HTML5的新特性，如、、、等。3. 掌握CSSCSS用于美化网页，包括布局、颜色和字体等。学习CSS选择器、属性和值，理解盒模型、浮动、定位和Flexbox、Grid等布局技术。此外，学习如何制作响应式设计，适应不同屏幕大小。4. 熟悉JavaScript基础JavaScript是使网页具有交互性的语言。学习JavaScript的基本语法、数据类型、运算符、控制结构等，理解函数、事件处理和DOM操作。不要忘了使用console.log进行调试哦！5. 实践项目通过实际项目来应用所学知识。从克隆简单的网页开始，逐步尝试构建自己的项目，如个人博客、在线简历或小型静态网站。进阶学习6. 深入学习JavaScript深入学习高级JavaScript概念，如闭包、原型链、异步编程等。了解ES6+的新特性，如箭头函数、模板字符串、解构赋值等。7. 学习前端框架选择一个流行的前端框架，如React、Vue或Angular，并深入学习其核心概念。完成框架的官方教程和实战项目。8. 版本控制学习使用Git进行版本控制。创建GitHub账号，上传你的项目和参与开源项目。9. 构建个人项目开始一个中级项目，如待办事项列表、天气应用或社交媒体仪表板。确保项目具有良好的代码结构和文档。10. 学习前端工具学习使用前端构建工具，如Webpack、Gulp或Parcel。学习CSS预处理器（如Sass或Less）和框架（如Bootstrap或Tailwind CSS）。11. 性能优化和SEO基础学习基本的Web性能优化技巧，如代码分割、懒加载、缓存策略等。了解搜索引擎优化（SEO）的基础知识。持续提升12. 加入社区加入在线开发者论坛和社交媒体群组。参加本地或在线的Meetup和研讨会。13. 阅读文档和教程阅读官方文档和技术博客，以了解最新的Web标准和最佳实践。观看教程视频，跟随专家学习。14. 构建复杂项目开始一个复杂的项目，如电商网站、在线教育平台或大型单页应用（SPA）。实现高级功能，如用户认证、第三方API集成、支付处理等。15. 学习前端安全知识了解常见的前端安全问题，如跨站脚本攻击（XSS）、跨站请求伪造（CSRF）等。16. 准备作品集构建一个在线作品集，展示你的项目和技能。准备好面试中可能涉及的技术问题和实际编码测试。通过以上步骤，你可以从零基础逐步成为一名熟练的Web前端开发者。记住，学习编程是一个持续的过程，不断实践和更新知识是提高的关键。祝你在前端开发的旅程中越走越远，成为真正的前端大牛！', '4.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:26:50', '2024-05-20 19:26:50');
INSERT INTO `article` VALUES ('33', '2', '4', 'web前端是什么？需要掌握什么技术？', 'Web前端开发工程师，主要职责是利用(X)HTML/CSS/JavaScript/Flash等各种Web技术进行客户端产品的开发。完成客户端程序（也就是浏览器端）的开发，开发JavaScript以及Flash模块，同时结合后台开发技术模拟整体效果，进行丰富互联网的Web开发，致力于通过技术改善用户体验。在以前的时代，掌握网页三剑客就可以制作网页，但是现在只掌握这些已经远远不够了。随着WEB技术的应用越来越广泛，加上技术的更新迭代。无论是开发难度或开发方式上，现在的网页制作都更接近传统的网站后台开发，所以现在我们不再叫网页制作了，而是叫WEB前端开发，WEB前端开发在现在的产品开发环节中的作用变的越来越重要，需要掌握的技术也越来越多。所以这方面的人才近两年很受青眯，简单的说，这个职业的职能就是把网站界面以更美观，更友好，更合理的呈献给用户。一个合格的WEB前端，需要精通HTML5,CSS3,Javascript，jQuery，Ajax等核心的WEB前端技术，要具备互联网交互设计能力，熟悉后端服务器运行环境和数据通信协议，掌握响应式局势框架。html是内容css是表现，javascript是行为，前端开发的门槛其实非常低，与服务器端语言先慢后快的学习曲线相比，前端开发的学习曲线是先快后慢，所以对于从事IT工作的人来说，前端开发是个不错的初入点。也正因如此，前端开发的领域有很多自学成才的同行，html是最基础的，现在流行的是html5设计，要先学会网页布局，css是用来美化html页面的为页面提供布局和格式，然后再学习javascript。点此链接领取：自己是一名从事了多年开发的web前端老程序员，今年年初我花了一个月整理了一份最适合2020年学习的前端学习干货，想分享给每一位喜欢前端的小伙伴学习WEB前端我们需要需要掌握以下几种技术：第一阶段：1. Html5+css3，是最起初的，也是很简单的入门，需要掌握html的标签div，span，p，ul，li，input等，需要理解css语法，派生选择器，ID选择器，类选择器，属性选择器，css基本样式：背景，字体，链接，列表等，css动画效果。2. Javascript 我们可以把这个看成一种行为，不是所有的界面都必须有js（javascript的简称）但是要实现一些炫酷的功能和界面的时候，就需要涉及到js，如果没有其他编程语言的基础的话，学起来可以要费力些，多下点时间精力就行。3. Photoshop、Flash 这两个熟悉会一点儿就可以，没有必要全部都学的精通，这两个是做美工一行必备的技术，我们只需要会用就可以，如果你对ps感兴趣，也可以深究，第二阶段：1.熟练使用javascript，jQuery,Echarts，移动端技术，javascript的面向对象，2.浏览器的兼容问题，需要懂WEB标准，熟练手写xhtml，css3并符合 w3c的标准，代码能兼容主流浏览器Firfox，Chrome，Safari，IE,等，虽然IE6有多都不兼容，但现在使用的人还有的。3.熟悉一门后台编程语言如：asp，php，jsp等来扩展以后工作的需求。第三阶段：熟练使用vue框架，node.js，React，Angular，混合式开发/原生开发1. vue：是一套组建用户界面的，渐进式框架，用于搭建表单繁多，且内容需要根据用户的操作进行修改的页面版应用。2. Node.js 是一个服务器端的，非阻断式i/o的，事件驱动的javascript运行环境，能够使得javascript脱离浏览器运行。3. React是Facrbool内部的一个javascript类库，用于创建WEB用户交互界面。4. AngularJS 是一个 JavaScript 框架。它可通过  标签添加到 HTML', '4.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:28:13', '2024-05-20 19:28:13');
INSERT INTO `article` VALUES ('34', '2', '4', '浅谈web前端开发', '有部分同学和朋友问到过我相关问题，利用周末我就浅浅地谈谈我对web前端开发的理解和体会，只能浅浅谈谈，高手请自动跳过本篇文章。毕竟我现在经验并不是很足，连工程师都算不上，更不用说大牛了。今天也不谈技术，技术很多人比我掌握得更好，也大同小异，但是每个人的理解体会是不一样的。对前端开发的三个总体理解和体会我对前端开发的总体体会有三：第一：杂而难，难度甚至超过了一般的后台开发，如果有人觉得前端开发简单只能说明他还没有入门。第二、web前端开发正在向响应式和移动端方向大步迈进。第三：前端工程师其实就是编程技术人员，用一句话来形容“比UI设计懂技术，比技术人员更懂交互”，当然也有人说前端工程师是工程师中的设计师，是设计师中的工程师。既然是编程工作，那就不会做一辈子，毕竟太累。认真敲几年代码然后去卖水果吧，还望师弟师妹们来照顾我生意。网页制作与web前端开发前端开发工程师是一个比较新的职业，在国内乃至国际上开始受到重视的时间不超过几年。互联网进入2.0时代后，web开发技术得到了空前的发展，尤其是前端技术。近几年，随着用户对体验的要求越来越高，前端开发技术难度也越来越大。曾经设计和制作不分的职位也终于分为UI设计师和web前端开发工程师（前端开发师）两个职位，分别向艺术和技术的方向纵向发展。从技术体系上讲，前端开发师需要掌握和了解的东西非常多，有些大牛用庞杂来形容。几年前，还没有前端开发的时候我们叫做网页制作，主要内容都是静态的页面，用户也是以浏览为主，而现在发生了翻天覆地的变化，网页不再只是承载单一的文字和图片，各种富媒体让页面内容更加生动，更注重用户体验。以前会平面设计软件、DW和简单的HTML、CSS、JS就可以制作网页，现在只掌握这些已经远远不够了，如果只掌握这些连工作机会都很少。无论是开发难度，还是开发方式，现在的web前端开发都接近传统的网站后台开发，我觉得比一般的后台开发更复杂。一个网站或者移动应用是否专业、功能是否强大。服务器端是用J2EE+Oracle组合还是ASP+Access组合，并没有太明显的区别，但是，前端的用户体验却给了用户直观的印象。所以现在不仅仅是网页制作，而是web前端开发。大部分人认为是web前端开发取代了以前的网页制作，我认为现在网页制作和web前端开发的岗位同时存在。如果仅仅掌握以前网页制作的技术，那么现在还是叫网页制作师（我在招聘网页上也看到不少网页制作师这个岗位），并不能称之为web前端工程师。Web前端开发一般要掌握哪些技术和具备哪些条件？第一、要掌握曾经网页制作师掌握的基本技术。如各种页面布局，面向对象编程，JS模块化编程，设计模式，前端MVC等等。第二、网站性能优化，SEO。如尽量减少HTTP请求次数、cssSprites图片整合技术、合并css与js、运用CDN技术。减少DNS查找次数、避免重定向等。第三、要会UI设计。当然在一些相对较小的公司前端工程师也担任着UI设计的角色。在大公司虽然有专业的UI设计师，但是前端工程师会UI设计能帮助你更准确的理解设计师的意图，在原型不完整的时候也能正确的反馈设计缺陷，将问题阻挡在设计的环节，会大大减少UI bug数量，比如，设计师会给出理想状态下的容器样式，却往往忽略了文字溢出折行、长连续字符、容器宽高是否适应内容尺寸变化而变化，溢出部分是作截字还是隐藏等诸多细节，因为设计师不一定懂“边界值测试”的道理，而这些问题往往在测试阶段才被发现，所以，如果能在拿到UI设计稿时就提醒设计师补充完整这些场景，自然减少测试回归次数。第四、至少要会一门后台编程语言。职业的特殊性决定了我们需要跟后端工作者频繁的沟通。如果只顾页面实现，不考虑后台，写出来的页面也有一部分是废弃代码，在后台进行数据交互的时候用不了。还有一方面就是从招聘信息可以得知，现在几乎所有公司前端开发岗位都明确要求会后台语言，在实际工作中可能也要做客户端和服务器端之间的数据交互等。 第五、掌握各种浏览器兼容解决办法。国内和国际主流浏览器种类多，内核不统一，如以Trident为内核的IE、以Gecko为内核的FireFox、以Presto为内核的Opera、以Webkit为内核的google chrome和Safari等，这给我们前端开发增加了很多困难，也是大多数人头疼的事情，且不说目前市面在有这么多的浏览器，就仅仅单一的IE系列家族的问题也够多的了，特别是IE6，IE7。下图是本月对上个月全球浏览器市场统计排行，IE浏览器用户任然超过百分之五十。尽管2016年1月起，微软将停止对旧版IE浏览器的支持。【微软相关原新闻链接请猛击这里】 但是我相信最近很多年之内IE低版本浏览器还是会占比较大的比例，消亡还需时日。第六、必须学会运用各种工具进行辅助开发。第七、除了掌握技术层面的知识，还有掌握理论层面的知识。包括渲染原理，代码的可维护性，组件的易用性，分层语义模板等等。第八、要有细心和耐心。和UI设计一样，我们必须精确到每一个像素，耐心也体现在多方面，比如让初期开发者头疼的兼容问题，如果编码不够规范，解决兼容问题的时间远远超过了页面实现的时间。 第九、热爱并不断学习新技术。前端几乎每天都有新技术产生，从事这一行，在打牢基础的情况下要不断学习新技术。包括开发流程部署，预处理技术，前端框架(如RequireJS、ReactJS、AngularJS等等)，移动终端，标准规范等。浅谈自己的体会与服务器端语言先慢后快的学习曲线相比，前端开发的学习曲线是先快后慢。所以现在有很多学生或者已从事工作了的人都开始想涌入web前端开发的潮流，并自学成“才”，但我知道大多数人都停留在会用的阶段，因为要想成为一名真正的web前端开发师每前进一步都很难。尽管有的人每天都利用工作之余学习，却还是学不精，于是处于纠结迷茫的状态。另一方面，正如开篇所说，这还是一个比较新的职业，对一些规范和最佳实践的研究都处于探索阶段，一些新的技术随时都会闪现出来，例如：浏览器大战也越来越白热化，跨浏览器兼容方案依然五花八门，目前我所在的公司一般要求我们兼容到IE7，以前经常遇到这种情况，好不容易把IE各个版本都兼容了，高兴之余又发现在360浏览器上出现了bug，没办法，熬夜奋战呗。前端开发工程师是一个易学难精的职业，我们必须深入、系统地学习并掌握前端知识，如果简单地自学一下就能成为web前端工程师，那我想现在市场上也不会出现高薪找不到前端工程师的情况了。有经验的web前端开发工程师都知道，要精通这一行，必须先精通十行。有一些有经验的前端工程师，在不断寻求新的技能上的突破，最明显的一点体现是，开始关注“底层协议”，即HTTP、第三方应用、系统对接、制造工具、工作流程等，这时思考的重点已经脱离了“切页面”，变为“出方案“，比如要架设一个站点，能够搭建站点框架，预见站点后续（前端）开发中的所有风险，并一一给出解决方案。说说半路出家的危与机，俗话说，隔行入隔山。每个行业自有其道，自然不是想做就做。前端技术领域半路出家者非常多，我们来分析一下转行的心理。第一，看到前端技术入门简单、互联网对前端技术的需求缺口大；第二，前端技术所见即所得、感觉学习起来很快；第三，我身边的某某转行作前端看上去不错、我似乎也可以；第四，我不喜欢我现在做的工作、想换行业、正好前端技术上手较快，就选他吧；当然还有第五，我的确了解并喜欢做Web前端，为它付出再多都是值得的。新进入这一行或者转行者的心态比较容易走两个极端，一是只看到新行业的好，二是只觉得原工作很糟糕。但不管是什么行业，对自己的职业规划的思考都应当先行一步。进入这一行必须先清晰的回答这些问题：1.我能做什么？2.我不能做什么？3.我的优势是什么？4.我的劣势是什么？5.做这一行对我有何好处？6.做这一行会让我付出何种代价？7.如何定义成功？因为面试的时候一定会被这些问题所挑战。如果支支吾吾说不清楚，要么是对自己未来不负责任，要么骨子里就是草根一族，习惯做什么都蜻蜓点水浅尝辄止，也难让人信服你进入这一行是一个权衡再三看起来合理的选择。相关误区解释有人认为前端工程师上班不干别的，就是玩，弄点效果，攒两页面，搞点创新。当然这个表述非常轻巧、甚至有调侃的味道，web前端工作绝对不是玩那么简单的，更不像曾经的网页制作那么单一，有时候会为一些效果的实现或优化，弄得加班加点。上周还因为解决一个问题花了2天的时间，惭愧啊。所以前端开发是一项很特殊的工作，前端工程师的工作说得轻松，看似轻巧，但做起来绝对不是那么的简单。在开发过程中涵盖的东西非常宽广，既要从技术的角度来思考界面的实现，规避技术的死角，又要从用户的角度来思考，怎样才能更好地接受技术呈现的枯燥的数据，更好的呈现信息。在入行初期，很多人过于着迷，从而陷入了迷途。比如有人纠结于是否将dt、dd的样式清除从reset.css中拿掉，原因是觉得这两个标签的清除样式会耗费一些渲染性能；或者是否需要将for循环改为while循环以提高js执行速度。尽管这些考虑看上去是合理的，但并不是性能的瓶颈所在，也就是说，你花了很大力气重构的代码带来的页面性能提升，往往还不如将两个css文件合成一个带来的提升明显。就好比用一把米尺量东西，没必要精确到小数点后10位，因为精确到小数点后2位就已经是不准确的了。这种技术误区常常让人捡了芝麻丢了西瓜。对自己学习和工作的要求N.C.Zakas曾经勉励过大家，现在成为了我对自己的要求和对已结确定要走Web前端开发方向的人的建议：热爱你的工作。热爱跨浏览器开发带来的挑战、热爱互联网技术的种种异端，热爱业内的同行，热爱你的工具。互联网发展太快了，如果你不热爱它的话，不可能跟上它的步伐。这意味着你必须多阅读，多动手，保证自己的才能与日俱增。要为如何编写易于维护、高质量的前端代码奋斗。下了班也不能闲着，要做一些对自己有用的事儿。可以参与一些开源软件的开发，读读好书，看看牛人的博客。经常参加一些会议，看看别人都在干什么。要想让自己快速成长，有很多事儿可以去做，相信付出一定会有回报。 这次就分享到这里，一个上午就这样过去了，饿了，该去做中午饭了。关于前端开发具体相关技术和具体怎么学习发展下次我会继续分享。最后，因时间仓促，资质有限，文中表述仅代表个人观点，不准确的地方还望见谅，欢迎严厉地指正。', '4.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:29:00', '2024-05-20 19:29:00');
INSERT INTO `article` VALUES ('35', '2', '4', 'Web前端之jQuery', '1、jQuery是一个快速，小巧，功能丰富的JavaScript库。jQuery 使HTML文档遍历和操作，事件处理和动画等操作变得更加简单。var el = document.getElementById(\"start\");el.innerHTML = \"出发吧,骚年!\";$(\"#start\").html(\"出发吧,骚年!\");  jQuery的代码将在所有主流浏览器中运行完全相同，包括Internet Explorer 6！2、可以从http://www.jquery.com下载jQuery库的副本，或者从CDN（内容分发网络）（如BootCDN或百度CDN）中引入。 将使用BootCDN上的CDN。要开始使用jQuery，首先需要使用script标签将其添加到我们的HTML文档的头部。解释            页面标题                     在使用HTML文档之前等待HTML文档完全加载并准备就绪是一种很好的做法。为此，我们使用 document(文档) 对象的ready事件：$(document).ready(function() {    // 在这写 jQuery 代码}); $ 用于访问jQuery。 从这里开始，代码访问document对象，并定义了当 document 的 ready 事件触发时要调用的函数。 这样可以防止任何jQuery代码在文档加载完成之前运行。我们有一个方便的快捷方式, 等价于上面的代码：$(function() {   // 在这写 jQuery 代码}); 3、现在，在我们head部分中引入了jQuery库，并且已经定义了文档就绪事件，我们可以开始我们的第一个jQuery操作！ 让我们改变div元素的内容。解释      页面标题            开始        $(function() {      $(\"#start\").html(\"出发吧,骚年!\");    });       以上代码, 在页面文档准备就绪后将 id =\"start\" 的元素的HTML更改为\"出发吧,骚年!\"。4、jQuery用于选择（查找）HTML元素并对其执行\"操作\"。$(\"selector\").action() selector 是选择器, 用于查找HTML元素。action 是要元素要执行的动作。$(\"p\").hide()  // 隐藏所有元素$(\".demo\").hide()  // 隐藏所有 元素$(\"#demo\").hide()  // 隐藏 id=\"demo\" 的元素 jQuery使用CSS选择器语法来选择元素。5、选择jQuery选择器以美元符号和圆括号开头:$()。注意: jQuery中所有的符号都是英文符号。最基本的选择器是元素选择器，它根据元素名称选择所有元素。$(\"div\")  // 选择所有元素 接下来是id和类选择器，它们通过id和类名来选择元素：$(\"#test\") // 选择id=\"test\"的元素$(\".menu\") //选择class=\"menu\"的所有元素 还可以对选择器使用以下语法：解释$(\"div.menu\")  // 所有元素与class=\"menu\"$(\"p:first\")  // 第一个元素$(\"h1, p\") // 所有和所有元素$(\"div p\") // 所有元素后代的元素$(\"*\")  // DOM的所有元素 选择器比纯JavaScript更容易访问HTML DOM元素。6、常用选择器7、可以通过jQuery轻松的操作分配给HTML元素的属性。比如元素的 href,src,id,class,style 属性。attr()方法用于获取属性的值。解释   点击这里 ---------$(function() {  var val = $(\"a\").attr(\"href\");  alert(val);}); attr() 方法还允许我们通过第二个参数来给属性设置一个值。$(function() {  $(\"a\").attr(\"href\", \"https://www.jquery.com\");}); 8、删除属性你还可以从HTML元素中删除属性。removeAttr() 方法用于删除元素的任何属性。$(\"table\").removeAttr(\"border\");$(\"table\").removeAttr(\"class\");  9、可以通过jQuery操作HTML元素的内容。html() 方法用于获取所选元素的内容，包括HTML标记。解释  JQuery is fun------$(function() {  var val = $(\"p\").html();  alert(val);});// 弹出 \"JQuery is fun\" 请注意，HTML标签也被返回。如果你只需要文本内容，不需要HTML标签，可以使用 text() 方法：解释$(function() {  var val = $(\"p\").text();  alert(val);});// 弹出 \"JQuery is fun\"  html() 和 text() 方法可以用于包含内容的所有HTML元素。设置内容-可以使用html()和text()方法来更改HTML元素的内容。$(function() {  $(\"#test\").text(\"hello!\");}); 上面的代码将 id=\"test\" 的元素的内容更改为\"hello!\"。如果你设置的内容包含HTML标记，则应使用 html() 方法而不是 text()。10、val()方法val方法允许我们获取和设置表单字段的值，例如: 文本框(input)，下拉列表(select) 等。解释$(function() {  alert($(\"#name\").val());});//弹出 \"你的名字\" 类似地，你可以在val()方法传入参数来设置该字段的值。当需要处理表单事件和验证时，获取和设置表单域的值非常有用。11、总结如下：12、添加内容jQuery具有用于向所选元素添加新内容而不删除现有内容的方法：还可以插入带有HTML标签的内容。13、使用jQuery创建新HTML元素的最简单方法如下：var txt = $(\"\").text(\"Hi\");  上面的代码创建一个新的元素，其中包含文本Hi，并将其分配给一个名为txt的变量。可以将该变量作为上述方法的参数添加到我们的HTML中解释Hello----------$(function() {  var txt = $(\"\").text(\"Hi\");  $(\"#demo\").after(txt);}); 这将在#demo段落之后插入新创建的元素。也可以通过使用逗号分隔来指定多个元素作为 before()，after()，append()，prepend()方法的参数例如：$(\"#demo\").append(var1,var2,var3)。上面提到的用于创建元素的语法可以用来创建任何新的HTML元素，例如$(\"\")可以创建一个新的div。14、添加CSSaddClass()方法为选定的元素添加一个或多个类。解释Some text ------------- .header {  color: blue;  font-size:x-large;} ------------ $(\"div\").addClass(\"header\");//为div元素指定了一个“header”类。 要在 addClass() 方法中指定多个类, 只需使用空格分隔它们。 例如$(\"div\").addClass(\"class1 class2 class3\")。15、删除CSSremoveClass()方法从所选元素中删除一个或多个类名。$(\"div\").removeClass(\"red\"); 上面的代码从div元素中删除“red”类。同样，可以通过使用空格分隔来指定删除多个类名。16、切换CSStoggleClass()方法从所选的元素添加/删除类之间切换，这意味着如果元素指定的类存在，则它将被删除，如果不存在，则会被添加。  $(\"button\").click(function() {    $(\"p\").toggleClass(\"red\");  }); 17、CSS()方法与html()方法类似，可以使用css()方法来获取和设置CSS属性值。  $(\"p\").css(\"background-color\", \"blue\"); CSS()多属性设置-css() 方法可以使用JSON语法设置多个CSS属性。css({\"property\":\"value\",\"property\":\"value\",...}); 语法由\"属性\":\"值\" 对组成，以逗号分隔，并以大括号{}括起来。$(\"p\").css({\"color\": \"red\", \"font-size\": \"200%\"}); 这将设置段落的颜色和字体大小属性。你可以使用此JSON语法指定任意数量的属性。18、外形尺寸可以使用 width() 和 height() 方法来获取和设置HTML元素的宽度和高度。下面代码中将div的宽度和高度设置为100px，并为其设置背景颜色：$(\"div\").css(\"background-color\", \"red\");$(\"div\").width(100);$(\"div\").height(100); width() 和 height() 方法获取并设置尺寸，而不包括填充，边框和边距。innerWidth()和innerHeight()方法包括填充部分的尺寸。outerWidth()和outerHeight()方法包括填充和边框部分的尺寸。19、文档对象模型DOM当您在浏览器中打开任何网页时，页面的HTML将被加载并在屏幕上可视化呈现。为了实现这一点，浏览器构建了该页面的文档对象模型(DOM)，它是其逻辑结构的面向对象的模型。DOM表示文档作为树结构，其中HTML元素是树中的相关节点。节点可以有子节点。 同一棵树级别的节点称为兄弟姐妹。jQuery遍历是用于描述移动DOM的过程，并根据其与其他元素的关系来查找（选择）HTML元素的术语。jQuery可以轻松地遍历DOM并使用HTML元素。20、DOM遍历考虑由以下结构表示的HTML： 元素是的父项，它是下一个元素的祖先。元素是和元素的父元素。和元素是元素和的后代,称为子元素。和元素是兄弟姐妹（他们共享相同的父代）。摘要:祖先是指父母，祖父母，曾祖父母等等。后代是一个孩子，孙子，曾孙等等。兄弟姐妹同享同一个父母。了解DOM元素之间的关系对于能够正确遍历DOM很重要。21、DOM遍历jQuery有很多有用的DOM遍历方法。parent()方法返回所选元素的直接父元素。 例如：解释HTML:// div 元素  段落 ----------var e = $(\"p\").parent();e.css(\"border\", \"2px solid red\"); 22、DOM遍历父类元素parent()方法只能遍历单个级别的DOM树。要获取所选元素的所有祖先，可以使用parents()方法。解释$(function() {  var e = $(\"p\").parents();  e.css(\"border\", \"2px solid red\");}); 上面的代码为段落的所有父类设置了一个红色边框。下面是一些最常用的遍历方法如下：eq() 方法可用于从多个选定元素中选择特定元素。例如，如果页面包含多个div元素，并且我们要选择第三个元素：$(\"div\").eq(2); 索引号从0开始，所以第一个元素的索引号为0。23、删除元素使用remove()方法从DOM中删除选定的元素。解释RedGreenBlue----------$(\"p\").eq(1).remove(); 这将删除Green，第二个段落元素。可以在多个选定元素上使用remove()方法，例如$(\"p\").remove()将删除所有段落。jQuery remove()方法将删除所选元素及其子元素。清空内容，empty()方法用于删除所选元素的子元素。$(\"div\").empty(); 这将删除div的所有子元素。25、事件处理jQuery提供了一种处理事件的有效方式。 当用户执行操作（例如单击元素，移动鼠标或提交表单）时，会发生事件。当目标元素发生事件时，执行处理函数。解释var x = document.getElementById(\"demo\");x.onclick = function () {  document.body.innerHTML = Date();//点击按钮时显示当前日期} 可以使用jQuery与以下代码来处理相同的事件：$(\"#demo\").click(function() {  $(\"body\").html(Date());//点击按钮时显示当前日期}); 提供的事件名称没有“on”前缀（即在jQuery中单击对应JavaScript中的onclick）。当触发事件时执行的函数称为事件处理程序。', '4.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:30:32', '2024-05-20 19:30:32');
INSERT INTO `article` VALUES ('36', '2', '4', 'web前端开', '一周前写了一篇Java/Python/PHP/C#/C++各大城市招聘状况分析，很多人不表示服没有web前端开发的招聘状况分析，今天如期而至。首先，文章要分析的点：·        web前端开发总体以及各城市的薪资水平·        各种类型企业对web前端开发者的需求状况·        对web前端开发者的学历的要求·        各个学历的web前段开发者的薪资水平·        对web前端开发者的工作经验的要求（一）web前端开发总体以及各城市的薪资水平首先要展示的是开发者们最关心的问题：有关于总体的薪资水平以及各个地区的平均薪资水平是怎么样的，我们看一下统计表。 说明：以上的平均薪资是以各企业发布的职位的薪资范围的最小值做统计。·        北京以平均薪资15.824k高居各城市榜首，紧接着是上海的13.444k、深圳的12.733k、杭州的11.331k，同时也只有以上四个城市的平均薪资高于全国的平均薪资水平。·        web前段开发全国的平均薪资水平是9.275k，各位可以对比一下。（二）需求web前端开发者的企业类型 以上图表，颜色由浅到深。颜色越深表示该种类型企业对web前端开发者的需求量越大，颜色越浅表示该种类型企业对web前端开发者需求量相对较小。（三）对web前端开发者的学历、工作经验要求这个也是很多人关注的问题，企业对web前端开发者的学历要求高吗？我们看下面的图表。 通过以上图表可以看出：企业对web前端开发者的学历要求集中在大专以及以上，以本科居多得出企业对web前端开发者的学历要求并不是很高，少部分企业要求web前端开发者的学历必须是硕士以及以上。（四）各个学历的开发者的薪资水平那么web前端开发者各个学历的薪资水平是怎样的呢？我们继续往下看。 注意：上面红色线的平均值12.084是计算的四个学历的平均薪资的平均薪资，不是总的平均值。·        学历越高，薪资水平相对较高（常识，不绝对）·        硕士薪资水平17k，本科12k·        本科生基本上代表了整体的平均水平（五）对web前端开发者的工作经验的要求紧接着我们来看一下，拉勾上这些招聘web前端开发的企业对开发者的工作经验有什么要求呢？ 如上图，发现：拉勾上大部分招聘对开发者的开发经验要求有1-5年的开发经验。拉勾上招聘前端开发方面的岗位需求应届毕业生还是相对比较少的。最后是一个题外的统计，想用这些数据统计一下几大城市的主要公司类型。 十、Python中的Web前端开发技术与实践Python是一种广泛使用的编程语言，可以用于Web开发。在Python中进行Web前端开发，可以使用多种技术和框架。以下是一些常用的技术和框架：.    Django：Django是一个高级Python Web框架，它鼓励快速开发和干净的设计。Django包括一个完整的开发工具集，包括模板引擎、表单处理、认证系统等。Django也提供了强大的URL路由和视图系统，使得开发人员可以快速构建复杂的Web应用程序。.    Flask：Flask是一个轻量级的Web框架，它只提供了基本的路由和模板功能，其他功能需要开发者自行扩展。Flask的灵活性使得它适合小型到中型的应用程序，特别是对于需要自定义的Web应用程序。.    Pyramid：Pyramid是一个高性能的Web框架，它支持大型应用程序的开发。Pyramid提供了许多高级功能，如路由、模板、认证、数据库集成等。Pyramid还支持插件系统，使得开发者可以轻松地扩展框架的功能。.    Jinja2：Jinja2是一个流行的模板引擎，它可以与Django和Flask等框架一起使用。Jinja2提供了简洁的语法和强大的功能，如条件语句、循环、变量替换等。使用Jinja2可以轻松地创建动态的Web页面。.    Bootstrap：Bootstrap是一个流行的前端框架，它提供了丰富的CSS样式和JavaScript插件，可以帮助开发者快速构建响应式和移动优先的Web应用程序。Bootstrap还提供了许多常用的组件，如导航栏、表单、按钮等。.    JavaScript：JavaScript是前端开发中必不可少的语言，它可以与Python后端框架一起使用。开发者可以使用JavaScript来处理用户交互、数据验证和动态内容等。在实际开发中，Python Web前端开发通常会结合使用HTML、CSS、JavaScript等技术。开发者可以使用这些技术来创建用户友好的界面，并与Python后端进行通信和数据交换。此外，开发者还可以使用各种工具和库来加速开发过程，如构建工具（如Webpack）、UI组件库（如React、Vue）等。总之，Python中的Web前端开发技术与实践多种多样，开发者可以根据项目需求选择合适的技术和框架。通过不断学习和实践，可以提高自己的技能水平，并创建出优秀的Web应用程序。  ', '4.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:31:25', '2024-05-20 19:31:25');
INSERT INTO `article` VALUES ('37', '2', '6', '数据科学的定义', '简单来说，数据科学是通过各种科学方法、算法和流程研究数据、让数据产生价值，创造有影响力的预测和见解辅助决策的一门综合性学科。维基百科是这样定义的：数据科学（英语：Data Science），又称资料科学，是一门利用数据学习知识的学科，其目标是通过从数据中提取出有价值的部分来生产数据产品。它结合了诸多领域中的理论和技术，包括应用数学、统计、模式识别、机器学习、数据可视化、数据仓库以及高性能计算。数据科学通过运用各种相关的数据来帮助非专业人士理解问题。作为当今最受欢迎的科学和商业领域之一，关于数据科学的定义还有很多种描述。1.数据科学是从“数据层次“研究”现实世界”的问题，并根据“数据世界”的分析结果，对“现实世界”进行预测、洞见、解释和决策的新兴科学。在对数据进行分析、抽取信息和知的过程中提取指导和支持的基本原则和方法。2.数据科学关注分析数据并从中提取有用的知识。构建预测模型通常是数据科学家最重要的活动。3.数据科学融合了各种工具，算法和机器学习原理，旨在从原始数据中发现隐藏的模式。4.数据科学可以定义为一种方法，通过该方法可以从数据中推断出可操作的见解。数据科学家从大量数据中获得洞察力，以帮助公司做出更明智的业务决策。总之，数据科学是一个跨学科领域，其宗旨是从各类数据中提取出价值，实现学术到应用的转变。 ', '6.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:32:41', '2024-05-20 19:32:41');
INSERT INTO `article` VALUES ('38', '2', '6', '数据科学知识点总结', '1.数据科学是基于计算机科学(数据库、数据挖掘、机器学习等)、统计学、数学等学科的一门新兴的交叉学科，也是指以数据为中心的科学2.数据类型：离散型、连续性、符号型、文本型3.标志性阶段：数字和文字的出现，使古人更加明确的来记录数据电子计算机的出现，人类和数据的关系进入了第二个时代互联网的出现，人类和数据的关系进入了第三个时代大数据时代的来临，人类和数据的关系进入了第四个时代4.电子元器件：A:电子管 B:晶体管C:小规模中规模集成电路 D:大规模或超大规模集成电路5.数据单位数量级进制：1KB=1024B1M=1024K1G=1024M1T=1024M1P=1024T1E=1024P1Z=1024E1Y=1024Z1N=1024Y1D=1024N6.数据结构：结构化、半结构化、非结构化7.大数据四大特征：速度快、数据量大、价值密度低、类型多8.算法：是指解题方案的准确而完整的描述，是一系列解决问题的清晰指令，它代表着用系统的方法描述解决问题的策略机制。不同的算法可能用不同的时间、空间或效率来完成同样的任务。一个算法的优劣可以用空间复杂度（Space Complexity）与时间复杂度（Time complexity ）来衡量。9.数据清洗：指发现并纠正数据文件中可识别的错误的最后一道程序，包括检查数据一致性，处理无效值和缺失值等。数据清洗的任务是过滤那些不符合要求的数据，将过滤的结果交给业务主管部门，确认是否过滤掉还是由业务单位修正之后再进行抽取。不符合要求的数据主要是有不完整的数据、错误的数据、重复的数据三大类。、10.脏数据：然而，当今现实世界中的数据库极易受到噪声数据、空缺数据和不一致性数据的侵扰，多数为“脏”数据。11.数据仓库：Data Warehouse，可简写为DW或DWH。它是为企业所有级别的决策制定过程提供支持的所有类型数据的战略集合。', '6.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:33:19', '2024-05-20 19:33:19');
INSERT INTO `article` VALUES ('39', '2', '6', '为什么 Python 被用于数据科学', 'Python是一种通用的、易用的语言，并且在数据科学中被认为是最佳语言。在可扩展性方面，Python比像R一样的其他编程语言更有优势。它为数据科学家提供了灵活性，而且提供了解决问题的不同方法。在速度方面，Python再次在其同行语言（如Matlab和Stata）中脱颖而出。Python语法使用起来相当简单，任何人都可以在较短的时间内学会 Python;许多健壮的第三方库被用于数据科学应用。库是模块的集合，可以反复应用于不同程序；强大的社区支持，有助于使库和框架保持最新，社区人数超过1千万人。来源：developer-tech库和框架可以免费下载和使用，Python 库和框架总数估计在 137000左右；Python 是一种解释型编程语言，与 C 或 C + + 不同，Python代码首先被转换成低级指令的字节码，然后由 Python 解释器执行;Python 是跨平台的，这意味着一旦代码是用 Python 编写的，它就能够在任何操作系统中运行：例如 Windows、 Mac、 Linux 等等。注意，Python 解释器是依赖平台的；Python 可以实现自动化，因此，我们可以将日常生活中某些耗时的任务自动化。例如，一位班主任希望根据 excel 表中的分数，制作一份学生电子成绩单。假设一个班有100个学生，一个接一个地做成绩单似乎不是一个好的选择。为了解决这个问题，我们可以创建一个 Python 脚本，该脚本基于 excel 工作表，创建所有学生的电子成绩单。', '6.png', '2', '0', '0', '0', '0', '1', '2024-05-20 19:33:40', '2024-05-20 19:33:40');
INSERT INTO `article` VALUES ('40', '2', '6', '数据科学专业的发展潜力如何？', '数据科学是一个“抗AI”的学科2023年3月15日，美国人工智能研究室OpenAI为其爆火的聊天机器人ChatGPT发布了最新语言模型GPT4。未来，它可以24/7全年无休地使用各国语言提供服务，帮助各个行业的发展。有人说，ChatGPT开启了人工智能（AI）时代。著名科技作家、企业家，Facebook人工智能实验室创始成员之一万维钢曾被问道：“对于数据科学和AI有什么看法？如果你的孩子要选择研究生专业，你有什么建议？”他说：“我大概会建议他选数据科学。”他以NLP（自然语言处理Natural Language Processing）为例。作为计算机科学、AI和人类语言学的交叉学科，NLP此前一直被认为是实现通用人工智能的指望，却在今天渐渐被以GPT4为代表的大型语言模型杀死。因为GPT用的是无监督学习模式，它能自动掌握语言规律和逻辑推理，并不需要NLP学者教它语言规则。此外，其他的AI学科，比如贝叶斯分析学派，也都面临危机。也就是说，赌一门过于狭窄的学科是危险的。而数据科学，相比于AI，应用范围更为广泛。就算将来AI接管数据分析，你还可以用相关的知识帮助别人理解数据和依据数据进行决策。无论在医疗健康、商业决策、社交媒体、交通规划，还是环保领域，它都能发挥出巨大的作用。数据科学家们预测疾病、引导企业做出明智的决策、推荐你感兴趣的内容、规划最佳的出行路线，甚至帮助我们更好地保护环境。所以在AI时代，数据科学是一个更加安全的选择，是一个不用担心被AI所取', '6.png', '3', '2', '0', '0', '0', '1', '2024-05-20 19:34:03', '2024-05-20 19:34:03');
INSERT INTO `article` VALUES ('41', '2', '6', '数据分析师与数据科学家的区别', '时下，互联网大风盛行，数据科学家凭借“科学家”这一高大上的名称，成功盖过数据分析师的“名气”，被很多企业当作业务指导的“神明”。一旦企业在经营过程中，遇到业务发展问题，他们第一个就会想到找数据科学家处理，而不是数据分析师。但是，这真的是最好、最正确的选择吗？今天，我们就来好好聊一聊数据科学家与数据分析师的区别。相信你在看完这篇内容后，会对这两个角色有更深入的了解。1）角色与技能层面话不多说，我们先来看看数据科学家与数据分析师间的区别。其实，从角色定义上来看，这二者就有极大的不同。我们通常认为，数据科学家必须具备3个关键学科的知识，才能称之为数据科学家，即：数据分析学科、统计学和机器学科。其中，机器学习涉及数据分析的过程，以学习并生成分析模型为主。这些模型可以对可见的数据，执行智能操作，无需人工干预。而数据分析师，则只需具备数据分析学科与统计学科的知识即可。2）专业能力层面基于数据分析家拥有3大核心技能，而数据分析师一般只需要具前2个技能，对比三合一与二合一，哪个性价比更高？由此，数据科学家更受到企业的青睐，在数据分析师面前“高一头”，似乎也就更加合理了。然而，真的是这样的嘛？如果你冷静下来想一想，就会发现越品越有问题。试想，有多少人能同时在3个职位上尽善尽美的？有多少人能在几个领域都深入专研，并有非常出色的表现的？即便有这样的人，他的精力足够支撑他完成所有领域内容的钻研吗？当然不能。我们常说，术业有专攻，对于数据科学家和数据分析师而言，他们专攻的领域就有所不同，分析的方法差异性也很大，因此，我们不能说哪一个更好，应从哪个更适合企业来选择；', '6.png', '0', '0', '1', '0', '0', '1', '2024-05-20 19:34:31', '2024-05-20 19:34:31');
INSERT INTO `article` VALUES ('42', '2', '5', '软件测试简介', '1.软件测试简介软件测试是对软件进行检测和评估，以确实其是否满足所需结果的过程和方法。它是在规定的条件下对程序进行操作，发现程序的错误，从而衡量软件质量，并对其是否满足设计要求进行评估的过程。 2 软件概述与计算机系统操作有关的计算机程序、文档及数据都可成为软件、 程序就是可以被 “操作” 的产品，例如，WPS、微信、QQ、网页等，这些都是程序；需求文档、设计文档、用户手册这些都属于文档，页面中展示的或用户输入的内容这些都是数据。 程序、文档、数据这3个结合起来，就是完整的软件。 3 软件开发流程的演变软件开发流程的演变其实就是软件开发模型的演变过程。 软件开发模型是在软件开发中逐渐被总结的程序员的很多经验或方法，这些经验或方法进过提炼汇总就编程了软件开发模型。例如，最开始普及的是瀑布模型，后来出现的敏捷开发模型，现在很流行的是DevOps模型。', '5.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:35:36', '2024-05-20 19:35:36');
INSERT INTO `article` VALUES ('43', '2', '5', '如何走上测试之路的', '我是统招本，专业是计算机信息系统和信息管理，大四在一家事业单位（就不说名字了）实习做Android开发的，等我快毕业的时候，单位明确告诉我不会转正。当然了，我是很清楚的，没有背景，也没有关系，学历也只是本科，想要进去还是很难得。但是也有一丝丝的沮丧，但也就是一点。大学毕业后，我找了一个互联网公司，开始了我的Android应用开发之路，也就是半年的时间，公司业务扩展比较快，APP的用户量变得比较大了，APP的一些问题开始凸显出来，公司就准备招聘测试。而且要求还挺高的，但是还是要有公司内容的老人去带着业务、讲技术什么的，那时候这个活就交给我了：我当时就很纳闷，我自己也不会啊，怎么教别人带别人啊？出于要完成领导交给我带新人的任务，于是乎我自己就开始研究测试方法和理论。新人不会写测试用例、也不会写缺陷报告，会干啥呢？就会操作计算机！于是我就从我的做银行测试的朋友哪里取经，问他们工作流程、工作标准。然后再复用到我自己的公司，后来领导验收工作，这个新人倒也没有揽功，就说了是我指导的，然后我们领导就让我专职负责带领测试了，我的开发之路就变成了测试之路。', '5.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:36:16', '2024-05-20 19:36:16');
INSERT INTO `article` VALUES ('44', '2', '5', '测试开发是什么', '测试开发就是会开发的技能，也懂测试的理论，最好有做测试的经验(不一定)，了解测试工作的痛点。本职还是属于测试部门，为整个测试团队助力。现在手动测试的人数都在减少，但不会消失，因为基于人为感受的测试点、全面的用例设计、合理的测试策略、探索性测试等都无法被技术替代。不过现在的节奏很快，产品变化多，测试开发主要需要提供框架、平台、工具等，来减少人力成本，提高效率，解决复杂性操作问题，利用好机器和设备和所有时间点，提供各种便利和自动化流程等。但有点尴尬的是，测试开发介于开发和测试之间，论开发水平和技能可能不一定有专职开发强，论测试水平和技能也不一定有专职测试熟练。但由于其本职还是测试，所以最好是熟练掌握好测试的各种理论，掌握各平台的测试点，掌握测试策略等，做一个和测试人员一样的测试水平但更懂开发技术的人员。(不过有些公司侧重点不在测试上，而是各类内部平台上，这时测试开发更像开发了，有不少专职开发来转测试开发)', '5.png', '0', '0', '1', '0', '0', '1', '2024-05-20 19:36:40', '2024-05-20 19:36:40');
INSERT INTO `article` VALUES ('45', '2', '5', '测试开发怎么样？', '测试开发算是软件测试行业工资比较高的了，因为你不仅要会测试，还要懂开发。测试工程师相当于是“工厂质检员”，对工厂生产的商品进行质量检测，确认无任何问题之后讲产品提供给市场，确保对外提供的产品的质量，避免出现残次产品。程序员写出来的程序是IT行业的产品，测试工程师需要对产品进行检测，其实就是找产品中是否存在Bug。未来属于测试开发，不会开发的测试终将被淘汰。近些年电商、设计、游戏、移动互联网的兴起，给企业提供了非常多的机会，而产品质量则是企业快速占领市场的命脉。所以大大小小的公司都开始重视软件测试，人员缺口巨大，因供求关系的影响，大量水平层次不齐的人员涌入测试行业，目前都停留在人工软件测试阶段，导致工作效率低下，也就加剧了企业对自动化测试和测试开发人才的渴求。想要众多的IT工作者中脱颖而出，就需要拥有高深的技术，学习增值是必不可少的。 ', '5.png', '2', '0', '0', '0', '0', '1', '2024-05-20 19:37:04', '2024-05-20 19:37:04');
INSERT INTO `article` VALUES ('46', '2', '8', '什么是大数据？', '大数据技术的发展已经改变了我们对数据的认知和处理方式，大数据是一种新型的数据处理技术，它涵盖了多个领域，包括计算机科学、网络通信、算法理论、应用统计学等。简要来说，大数据可以定义为处理规模庞大复杂度高数据时所需的技术和方法。 大数据应用场景包括但不限于以下几种： 金融领域：金融机构在风控、反欺诈、交易分析、市场营销等方面都可以运用大数据技术，有效提升业务流程效率和客户体验。 医疗保健领域：医疗机构利用大数据技术可以实时监测患者健康状态，并对疾病进行预测、预防和治疗。 零售行业：通过对消费者行为和购买偏好的分析，企业可以提供更精准的商品推荐和定价策略，从而提高销售额。 物流运输领域：利用大数据技术进行实时路况监控和优化配送路线，可以提升物流效率，并减少成本支出。 工业制造领域：运用大数据技术可以实现设备状态监测、预测性维护等，有效提高生产效率和品质产品生产。 城市智能化：城市公共服务智慧化，包括交通、环保、安全等方面的监控分析，并实现公共管理更加精准化和科学化。 以上仅是大数据应用场景的简要介绍，随着技术的不断进步和创新，还有许多领域可以发掘和应用大数据技术。', '8.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:38:55', '2024-05-20 19:38:55');
INSERT INTO `article` VALUES ('47', '2', '8', '大数据应用领域', '大数据出现的时间只有十几年，被人们广泛接受并应用只有几年的时间，但就是这短短几年的时间，大数据呈现出爆炸式增长的态势。在各个领域，大数据的身影几乎无处不在。今天我们通过一些大数据典型的应用场景分析，一起来看看大数据到底能做些什么，我们学大数据究竟有什么用，应该关注大数据的哪些方面。 医疗健康领域健康医疗领域是最近几年获得最多创业者和投资人青睐的大数据领域。为什么这么说呢？首先，医疗健康领域会产生大量的数据；其次，医疗健康领域有一个万亿级的市场规模；最关键的是，医疗健康领域里很多工作依赖人的经验，而这正是机器学习的强项。 1.医学影像智能识别图像识别是机器学习获得的重大突破之一，使用大量的图片数据进行深度机器学习训练，机器可以识别出特定的图像元素，比如猫或者人脸，当然也可以识别出病理特征。 比如X光片里的异常病灶位置，是可以通过机器学习智能识别出来的。甚至可以说医学影像智能识别在某些方面已经比一般医生拥有更高的读图和识别能力，但是鉴于医疗的严肃性，现在还很少有临床方面的实践。 虽然在临床实践方面应用有限，但是医疗影像AI还是在一些领域取得一定的进展。医学影像智能识别，一方面可以帮助医生进行辅助诊疗，另一方面对于皮肤病等有外部表现的病症，病人可以自己拍照然后使用AI智能识别做一个初步诊断。 2.病历大数据智能诊疗病历，特别是专家写的病历，本身就是一笔巨大的知识财富，利用大数据技术将这些知识进行处理、分析、统计、 挖掘，可以构成一个病历知识库，可以分享给更多人，即构成一个智能辅助诊疗系统。下面这张图是我曾经参与设计过的一个医疗辅助诊疗系统的架构。  针对同类疾病和其他上下文信息（化验结果、病史、年龄性别、病人回访信息等）可以挖掘出针对同样的疾病情况，哪种治疗手段可以用更低的治疗成本、更少的病人痛苦，获得更好的治疗效果。从上面的架构图你能看到，将这些病历知识和循证医学知识、科研文献知识、用药知识共同构成一个辅助诊疗知识库，通过知识匹配搜索引擎可以对外提供服务。患者或者医生录入病史、检查结果等信息，系统匹配初步诊断结果，搜索诊疗计划，产生多个辅助诊疗建议，供患者和医生进行参考。', '8.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:39:34', '2024-05-20 19:39:34');
INSERT INTO `article` VALUES ('48', '2', '8', '大数据：引领', '随着科技的不断进步和互联网的普及，我们生活在一个数据爆炸的时代。大数据已经成为了当今世界的热门话题，因为它不仅改变着商业和经济领域，还在医疗、教育、政府管理等各个方面展现出巨大的潜力。大数据并非只是指数据量的增加，更重要的是如何从这些海量数据中提取出有价值的信息和洞察。通过先进的数据分析技术，人们可以发现隐藏在数据背后的规律和趋势，从而做出更明智的决策。在商业领域，大数据已经成为企业获取竞争优势的重要工具。通过分析消费者的行为和偏好，企业可以更好地了解市场需求，优化产品设计和营销策略。同时，大数据还可以帮助企业进行风险管理和预测，降低经营风险，提高效率和盈利能力。在医疗领域，大数据正在改变着诊断和治疗的方式。医疗机构可以利用大数据分析患者的病历和医疗数据，帮助医生更快速、更精确地做出诊断，并制定个性化的治疗方案。此外，大数据还可以用于流行病学研究和公共卫生管理，帮助政府和医疗机构更好地应对突发公共卫生事件。教育领域也可以从大数据中获益良多。通过分析学生的学习数据和行为，教育机构可以更好地了解学生的学习习惯和能力，从而个性化地指导学生学习，并提供更有效的教学方法和资源。然而，随着大数据的应用范围不断扩大，也带来了一些挑战和问题。数据隐私和安全成为了人们关注的焦点，如何在保护个人隐私的前提下充分利用数据资源成为了一个重要课题。此外，数据质量和数据分析能力也是需要不断提升和改进的方面。总的来说，大数据已经成为了推动社会发展和进步的重要驱动力之一。只有充分发挥大数据的潜力，才能更好地应对各种挑战，实现经济、社会和科技的可持续发展', '8.png', '0', '0', '1', '0', '0', '1', '2024-05-20 19:40:03', '2024-05-20 19:40:03');
INSERT INTO `article` VALUES ('49', '2', '8', '大数据分析', '概述大数据分析是一种用于收集、处理和分析大量数据的方法、工具和应用。这些数据可能来自各种来源，如网络、移动设备、电子邮件、社交媒体和联网的智能设备。大数据分析涉及不同类型的数据，包括结构化数据（如数据库表格、Excel表）、半结构化数据（如XML文件、网页）和非结构化数据（如图像、音频文件）。 大数据分析的主要目标是挖掘数据中的有价值信息，以帮助企业和个人做出更明智的决策。在工业4.0背景下，大数据分析在工业生产中发挥着关键作用。通过大数据分析，企业可以揭示隐藏的模式、关联性、市场趋势和客户偏好等信息。 大数据分析具有高效数据处理能力，能够快速分析来自不同来源的大量数据，这些数据有许多不同的格式和类型。此外，大数据分析还能更好地理解客户的需求、行为和情绪，带来更好的营销洞察，并为产品开发提供信息。大数据分析的主要优势是什么？大数据分析的主要优势包括：及时分析来自多种来源、各种形式和类型的海量数据。更快地做出更明智的判断以制定更成功的战略，这可能有利于并增强供应链、物流和其他战术决策。通过提高业务流程效率和优化可以实现的成本节省。更深入地了解消费者需求、行为和情绪，这可能会导致更好的战略管理流程和产品开发数据。基于大样本数据，采用风险管理技术更加明智。 ', '8.png', '0', '0', '0', '0', '0', '1', '2024-05-20 19:40:23', '2024-05-20 19:40:23');
INSERT INTO `article` VALUES ('50', '2', '8', '大数据分析含义', '1、大数据分析可以让人们对数据产生更加优质的诠释，而具有预知意义的分析可以让分析员根据可视化分析和数据分析后的结果做出一些预测性的推断。 2、大数据的分析与存储和数据的管理是一些数据分析层面的最佳实践。通过特定流程和工具对数据进行分析可以保证一个预先定义好的高质量的分析结果。 3、不管使用者是数据分析领域中的专家，还是普通的用户，可作为数据分析工具的始终只能是数据可视化。可视化可以直观的展示数据，让数据自己表达，让客户得到理想的结果。 4、大数据已经不像前些年给人一种虚无缥缈的感觉，而当下最重要的是对大数据进行分析，只有经过分析的数据，才能对用户产生最重要的价值。  大数据分析方法有： 1.大数据挖掘：定义目标，分析问题。开始大数据处理前，应该定好处理数据的目标，然后才能开始数据挖掘。建立模型，采集数据。可以通过网络爬虫，或者历年的数据资料，建立对应的数据挖掘模型，然后采集数据，获取到大量的原始数据。导入并准备数据，在通过工具或者脚本，将原始转换成可以处理的数据。 2.大数据分析算法： 机器学习。通过使用机器学习的方法，处理采集到的数据。根据具体的问题来定。这里的方法就特别多。 3.大数据分析目标：语义引擎。处理大数据的时候，经常会使用很多时间和花费，所以每次生成的报告后，应该支持语音引擎功能。产生可视化报告，便于人工分析。通过软件，对大量的数据进行处理，将结果可视化。预测性。通过大数据分析算法，应该对于数据进行一定的推断，这样的数据才更有指导性。 在大数据时代，大数据分析价值不可估量。在防伪行业中，大数据分析可为企业实现更优质的服务；在企业中，大数据分析为企业决策者以及监管部门提供决策参考，也可帮助企业更准确找到自身定位和发展方向。', '8.png', '0', '0', '1', '0', '0', '1', '2024-05-20 19:40:48', '2024-05-20 19:40:48');
INSERT INTO `article` VALUES ('51', '2', '7', '网络安全概念', '网络安全的定义网络安全，顾名思义，是指在网络环境中，保护数据和系统免受各种威胁，确保网络服务正常运行，防止网络攻击，防止数据被窃取或篡改，保证网络的可用性、机密性和完整性。简单来说，就是我们要保护我们的网络和网络中的信息不受到不应有的侵害。网络安全的重要性网络安全的重要性还体现在以下几个方面：1.保护个人隐私：我们的个人信息，如身份证号、银行账号、手机号等，如果被不法分子获取，可能会被用来进行诈骗、盗窃等犯罪活动。2.保护企业资产：对于企业来说，他们的网络中可能存储有关键的商业信息，如客户数据库、研发资料、内部通讯等，这些都是企业的重要资产，一旦泄露，可能会给企业带来重大损失。3.维护国家安全：对于国家来说，网络安全更是关乎国家安全。不法分子可能通过网络攻击，对国家的关键基础设施如电力系统、交通系统等进行破坏，对国家安全构成威胁。因此，无论是个人、企业还是国家，都应该重视网络安全，采取相应的措施来保护网络安全。网络安全的实现需要我们采取一系列的技术和管理措施，包括但不限于使用防火墙、入侵检测系统，进行网络安全审计，提高用户的网络安全意识等。这些都是我们后续课程的内容，我们会详细讲解这些知识点。在我们进行后续的学习之前，我们需要明确一点：网络安全不是一项可以一劳永逸的工作，而是一个持续的过程。因为网络环境在不断变化，新的威胁和攻击手段也在不断出现，所以我们需要不断学习新的知识，更新我们的防护措施，才能确保我们的网络安全。总的来说，网络安全的目标是保护网络系统的完整性、机密性和可用性，防止或最小化各种网络攻击，保护用户的数据和信息安全，保证网络服务的正常运行。网络安全的重要性不言而喻，我们每个人都应该重视网络安全，学习和掌握网络安全知识，保护我们自己的网络环境', '7.png', '0', '0', '1', '0', '0', '1', '2024-05-20 19:41:25', '2024-05-20 19:41:25');
INSERT INTO `article` VALUES ('52', '2', '7', '网络安全5大子方向', '1. 网安方向介绍 首先我们一起来了解一下网络空间安全专业有哪些方向，以及每个方向所需要的基础能力。网安大体可分为5个子方向，分别为密码学与应用安全、量子信息安全、数据安全、系统安全、网络安全。01、密码学与应用安全密码学的研究方向有密码算法及安全协议、区块链技术、云计算与先进计算安全、大数据隐私保护、物联网安全、金融安全、工业控制系统安全、工业互联网安全等。应用安全则研究各种应用系统在信息的获取、存储、处理、传输和展示等各个环节的安全保障等。根据应用对象可分为工业控制系统安全、工业互联网安全、物联网安全、区块链技术、人工智能安全。该方向涵盖的子方向非常多，并且每个领域都有独立的研究体系。此外，该方向对信息安全原理与相关技术、密码学理论与实践等专业素质要求较高，需要学生能够熟悉掌握信息安全的基本原理、密码学相关算法。02、量子信息安全研究内容包括量子通信、量子计算、量子精密测量和量子器件等。与成熟的通信相比，量子通信具有保密性强、大容量、远距离传输等特点，是信息安全领域发展的方向与主流。该方向对信息安全原理以及密码学知识要求较高，和前沿发展结合较为紧密，需要学生具有充足的信息安全理论知识，以及对前沿知识的学习探索能力。此外，由于该方向对实验室的条件要求较高，仅部分学校开设该方向（例如中国科学技术大学）。03、数据安全研究内容为：云计算数据安全、大数据安全与隐私保护、舆情分析、信任管理、数据防泄漏技术等。近年来，随着人工智能的兴起以及云计算、大数据的大规模应用，企业安全边界逐渐消失，行业对数据安全方向人才的需求增大，数据安全成为众多学生选择的热门方向之一。该方向需要学生有机器学习、大数据、人工智能等相关专业基础。04、系统安全信息系统安全的特点是从系统整体上考虑信息安全的威胁与防护，研究内容包括：可信计算、智能安全、安全管理与态势感知、漏洞挖掘、信息系统安全测评认证等。该方向集合了传统信息安全以及前沿研究方向，兼容度较高，非常欢迎有攻防竞赛经验或漏洞挖掘经验的同学。05、网络安全网络安全的基本思想是在网络的各个层次和范围内采取防护措施，以便能对各种网络安全威胁进行检测和发现，并采取相应的响应措施，确保网络系统的信息安全。其中，防护、检测和响应都需要基于一定的安全策略和安全机制，因此该方向研究内容主要包括：网络安全威胁、通信安全、协议安全、网络防护、入侵检测与响应、可信网络等。该方向的覆盖范围相对较广，容易受到大部分学生的青睐。同时，该方向对网络安全的理论知识要求较高。2. 就业前景分析网安的就业方向主要有互联网大厂安全部门，安全公司，高校等。下面进行详细介绍： 01、大厂安全部门各互联网大厂一般都设有安全部门，以华为为例：该公司开设了可信理论、技术与工程实验室、2012实验室、数字能源等部门，有网络安全与隐私保护工程师、软件开发工程师、AI工程师等岗位。以数据安全方向为例，学生可选择的岗位有：AI相关算法岗位、网络安全与隐私保护工程师等。优点：大厂安全部门为网安各个研究方向的学生提供了充分的选择，也是快速锻炼和提高个人专业能力的很好的平台。缺点：部分部门存在加班情况，压力较大。02、安全公司我国主流安全公司有绿盟、360、启明安全、奇安信等。各大安全公司主要生产安全产品，或为甲方提供定制安全方案等。以系统安全方向为例，可以选择信息安全工程师、渗透测试工程师、Web安全工程师等岗位。优点：安全公司集中资源于安全方向，对能力的体系化培养较有利。缺点：业务可能跟随甲方的需求变化。03、高校近年来，随着国家政策的支持和行业人才需求的增大，有越来越多的高校成立网络空间安全学院。该就业方向对学历要求很高，一般至少要求博士学历，海外留学经验也是基本的必备竞争力。该方向适合热爱钻研学术，希望将学术作为长久事业的同学。综上，网安就业选择多，无论是漏洞挖掘、web攻防还是数据安全、AI安全，的人才需求都在逐年增大，就业前景还是比较光明的。', '7.png', '1', '0', '1', '0', '0', '1', '2024-05-20 19:41:52', '2024-05-20 19:41:52');
INSERT INTO `article` VALUES ('53', '2', '7', '网络安全态势感知', '一、态势感知简介1. 概念态势感知是一种基于环境的、动态、整体地洞悉安全风险的能力，是以 安全大数据 为基础，从全局视角提升对安全威胁的 发现识别、理解分析、响应处置 能力的一种方式，最终是为了决策与行动，是安全能力的落地。 态势感知的概念最早在军事领域被提出，覆盖 感知、理解和 预测 三个层次。并随着网络的兴起而升级为“网络态势感知（Cyberspace Situation Awareness，CSA）”。旨在大规模网络环境中对能够引起网络态势发生变化的安全要素进行获取、理解、显示以及最近发展趋势的顺延性预测，进而进行决策与行动。（获取、理解、显示、预测、响应） 态势感知（SA，Situational Awareness or Situation Awareness）是对一定时间和空间内的环境元素进行感知，并对这些元素的含义进行理解，最终预测这些元素在未来的发展状态。当前，大家提到“态势感知”时主要是指“网络安全态势感知”，即将态势感知的相关理论和方法应用到网络安全领域中。网络安全态势感知可以使网络安全人员宏观把握整个网络的安全状态，识别出当前网络中存在的问题和异常活动，并作出相应的反馈或改进。通过对一段时间内的网络安全状况进行分析和预测，为高层决策提供有力支撑和参考。 2. 形象举例态势感知的概念比较抽象，我们举个例子来帮助理解：天气预报 就可以理解为一种“态势感知”。通过对某一地点的持续观测和分析，我们可以预测未来一段时间内的天气。尤其是对重大灾害天气的预测，如台风、雾霾、暴雪等，对我们来讲尤为重要。通过提前进行人员和财产的转移，准备相关抗灾措施，可以大大降低灾害带来的影响，这就是进行“态势感知”的重要目的。 3. 应具备的能力网络安全态势感知系统应该具备的能力： 网络空间安全持续 监控 能力，能够及时发现各种攻击威胁与异常；具备威胁调查 分析及可视化 能力，可以对威胁相关的影响范围、攻击路径、目的、手段进行快速判别，从而支撑有效的安全决策和响应；能够建立安全 预警 机制，来完善风险控制、应急响应和整体安全防护的水平。通俗来讲，态势感知从时间概念上可以被理解为：刚才发生了什么，现在应该做什么，接下来会发生什么，也就是态势感知的根本任务，了解昨天、思考今天，预测明天。 ', '7.png', '0', '0', '1', '0', '0', '1', '2024-05-20 19:42:20', '2024-05-20 19:42:20');
INSERT INTO `article` VALUES ('54', '2', '7', '网络安全入门', '网络安全是一门涉及计算机科学、网络技术、信息安全技术、通信技术、计算数学、密码技术和信息论等多学科的综合性交叉学科。主要学习安全认证技术、安全扫描技术、防火墙原理与技术、入侵检测技术、PK技术、数据库安全、算法设计与分析。网络安全专业人才培养领域比较突出的高校有电子科技大学、西安电子科技大学、北京邮电大学、东南大学、中山大学、武汉大学、北京理工大学、四川大学、山东大学、华中科技大学、西北工业大学、天津大学、吉林大学、厦门大学广州大学等。其它还有成都理工大学、重庆邮电大学、桂林电子科技大学、杭州电子科技大学、北京电子科技学院等。网络安全专业本科阶段的学习课程分为四个部分，分别是专业基础课、专业课程、专业选修课、专业实践课等，具体学习科目如下。专业基础课：信息安全数学基础、安全科技概论、入侵检测技术、数据库应用与安全、安全法律法规、概率论、数据结构、模式识别、信号与系统、计算机网络原理、网络空间安全导论、通信原理、信息论与编码、模拟与数字逻辑电路等课程。专业课：应用密码学、网络安全、操作系统与安全、系统安全、网络攻击与防御、恶意代码分析与处理、网络测量等7大专业课程。专业选修课：信息安全法律基础、计算机组成原理、安全协议分析、Web应用安全、信息隐藏技术、算法分析与设计、无线网络安全、移动互联网安全、现代数据库技术、信息内容安全、数据隐私保护、多媒体技术、大数据系统与安全、嵌入式系统与安全、数字水印技术、电子商务安全、电子政务安全等。专业实践课程：网络空间安全综合课程设计、加密算法实现与加密工具应用能力训练、网络安全技能及入侵检测技术训练、网络安全整体解决方案设计、毕业实习与论文等。提供一份网络安全入门学习大纲参考：一、相关基础网络安全导论、系统基础、基础运维、WEB基础、PHP入门、MYSQL二、信息收集CDN、CMS、架构、搭建、WAF三、WEB漏洞虚拟化技术、SQL注入的渗透与防御、XSS相关渗透与防御、上传验证渗透与防御四、漏洞发现操作系统之漏洞探针类型利用、漏洞扫描工具、漏洞类型区分讲解权限提升远程执行、漏洞利用框架Metasploit,Searchsploit、WEB应用之漏洞探针类型利用、API接口服务之漏洞探针类型利用五、WAF绕过反爬虫延时代理池、Safedog、Aliyun_os、BT默', '7.png', '2', '0', '1', '0', '0', '1', '2024-05-20 19:42:44', '2024-05-20 19:42:44');
INSERT INTO `article` VALUES ('55', '2', '7', '网络安全应急响应', '一、概述1、概念应急响应是指针对已经发生或可能发生的安全事件进行监控、分析、协调、处理、保护资产安全。主要是为了人们对网络安全有所认识、有所准备，以便在遇到突发网络安全事件时做到有序应对、妥善处理。2、PDCERF(6阶段)a.准备阶段：预防为主，例如扫描、风险分析、打补丁等。简历监控措施、简历数据汇总分析体系、制定能够实现应急响应目标的策略和规程，建立信息沟通渠道，建立能够集合起来处理突发事件的体系。b.检测阶段：检测事件是已经发生的还是正在进行中的，以及事件产生的原因。确定事件性质和影响的严重程度，以及预计采用什么样的专用资源来修复。c.抑制阶段：限制攻击/破坏波及的范围，同时也是降低潜在的损失。抑制策略：完全关闭所有系统；从网络上断开主机或断开网络部分；修改所有防火墙和路由器过滤规则；封锁或删除被攻击的登录账号；加强对系统和网络行为的监控；设置诱饵服务器进一步获取事件信息；关闭受攻击的系统或其它相关系统的部分服务。d.根除阶段:通过事件分析找出根源并彻底根除，以避免攻击者再次使用相同的手段攻击系统。e.恢复阶段：把被破坏的信息彻底换原到正常运作状态。f.总结阶段：回顾并整合应急响应过程的相关信息，进行事后分析总结和修订安全计划、政策、程序，并进行训练，以防止入侵的再次发生。3、网络安全应急响应场景勒索病毒、挖矿木马、Webshell、网页篡改、DDos攻击、数据泄露、流量劫持。4、网络安全应急响应处理流程事件类型时间范围系统排查进程排查服务排查文件痕迹排查日志分析得出结论', '7.png', '0', '0', '1', '1', '0', '1', '2024-05-20 19:43:09', '2024-05-20 19:43:09');
INSERT INTO `article` VALUES ('56', '3', '1', '大数据应用', '大数据技术的发展已经改变了我们对数据的认知和处理方式，大数据是一种新型的数据处理技术，它涵盖了多个领域，包括计算机科学、网络通信、算法理论、应用统计学等。简要来说，大数据可以定义为处理规模庞大复杂度高数据时所需的技术和方法。 大数据应用场景包括但不限于以下几种： 金融领域：金融机构在风控、反欺诈、交易分析、市场营销等方面都可以运用大数据技术，有效提升业务流程效率和客户体验。 医疗保健领域：医疗机构利用大数据技术可以实时监测患者健康状态，并对疾病进行预测、预防和治疗。 零售行业：通过对消费者行为和购买偏好的分', '1.png', '0', '0', '0', '1', '0', '0', '2024-05-20 20:37:42', '2024-05-20 20:37:42');

-- ----------------------------
-- Table structure for `comment`
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `commentid` int(11) NOT NULL AUTO_INCREMENT,
  `userid` int(11) DEFAULT NULL,
  `articleid` int(11) DEFAULT NULL,
  `content` text NOT NULL,
  `replyid` int(11) NOT NULL,
  `agreecount` int(11) NOT NULL,
  `opposecount` int(11) NOT NULL,
  `hidden` int(11) NOT NULL,
  `createtime` datetime NOT NULL,
  `updatetime` datetime NOT NULL,
  PRIMARY KEY (`commentid`),
  KEY `userid` (`userid`),
  KEY `articleid` (`articleid`),
  CONSTRAINT `comment_ibfk_1` FOREIGN KEY (`userid`) REFERENCES `users` (`userid`),
  CONSTRAINT `comment_ibfk_2` FOREIGN KEY (`articleid`) REFERENCES `article` (`articleid`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES ('1', '2', '12', '但在当时的数字有线电视行业来说太先进了', '0', '0', '0', '0', '2024-05-20 20:35:35', '2024-05-20 20:35:35');
INSERT INTO `comment` VALUES ('2', '3', '13', '吸收了C/C  语言的优点。 Java语言健壮，', '0', '0', '0', '0', '2024-05-20 20:38:10', '2024-05-20 20:38:10');
INSERT INTO `comment` VALUES ('3', '3', '13', '吸收了C/C  语言的优点。', '2', '0', '0', '0', '2024-05-20 20:38:22', '2024-05-20 20:38:22');
INSERT INTO `comment` VALUES ('4', '2', '40', '挺好的10000', '0', '0', '0', '0', '2024-05-21 21:08:53', '2024-05-21 21:08:53');
INSERT INTO `comment` VALUES ('5', '2', '40', '8888888', '4', '0', '0', '0', '2024-05-21 21:09:01', '2024-05-21 21:09:01');
INSERT INTO `comment` VALUES ('6', '3', '12', '一棵橡树之后被称为Oak的。后来，该项目以Green命名，并最终从Java coffee(印度尼西亚的一种咖啡)重命名为Java。', '0', '0', '0', '0', '2024-05-21 21:10:37', '2024-05-21 21:10:37');

-- ----------------------------
-- Table structure for `favorite`
-- ----------------------------
DROP TABLE IF EXISTS `favorite`;
CREATE TABLE `favorite` (
  `favoriteid` int(11) NOT NULL AUTO_INCREMENT,
  `userid` int(11) DEFAULT NULL,
  `articleid` int(11) DEFAULT NULL,
  `canceled` int(11) NOT NULL,
  `createtime` datetime NOT NULL,
  `updatetime` datetime NOT NULL,
  PRIMARY KEY (`favoriteid`),
  KEY `userid` (`userid`),
  KEY `articleid` (`articleid`),
  CONSTRAINT `favorite_ibfk_1` FOREIGN KEY (`userid`) REFERENCES `users` (`userid`),
  CONSTRAINT `favorite_ibfk_2` FOREIGN KEY (`articleid`) REFERENCES `article` (`articleid`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of favorite
-- ----------------------------
INSERT INTO `favorite` VALUES ('1', '2', '12', '0', '2024-05-20 20:30:39', '2024-05-20 20:30:39');
INSERT INTO `favorite` VALUES ('2', '2', '14', '0', '2024-05-20 20:30:45', '2024-05-20 20:30:45');
INSERT INTO `favorite` VALUES ('3', '3', '12', '1', '2024-05-20 20:38:38', '2024-05-20 20:38:38');
INSERT INTO `favorite` VALUES ('4', '3', '13', '0', '2024-05-20 20:38:41', '2024-05-20 20:38:41');
INSERT INTO `favorite` VALUES ('5', '3', '14', '0', '2024-05-20 20:38:45', '2024-05-20 20:38:45');
INSERT INTO `favorite` VALUES ('6', '2', '39', '0', '2024-05-21 21:08:25', '2024-05-21 21:08:25');
INSERT INTO `favorite` VALUES ('7', '1', '5', '0', '2024-06-04 20:11:15', '2024-06-04 20:11:15');

-- ----------------------------
-- Table structure for `opinion`
-- ----------------------------
DROP TABLE IF EXISTS `opinion`;
CREATE TABLE `opinion` (
  `opinionid` int(11) NOT NULL AUTO_INCREMENT,
  `commentid` int(11) DEFAULT NULL,
  `userid` int(11) DEFAULT NULL,
  `type` int(11) NOT NULL,
  `createtime` datetime NOT NULL,
  `updatetime` datetime NOT NULL,
  PRIMARY KEY (`opinionid`),
  KEY `commentid` (`commentid`),
  KEY `userid` (`userid`),
  CONSTRAINT `opinion_ibfk_1` FOREIGN KEY (`commentid`) REFERENCES `comment` (`commentid`),
  CONSTRAINT `opinion_ibfk_2` FOREIGN KEY (`userid`) REFERENCES `users` (`userid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of opinion
-- ----------------------------

-- ----------------------------
-- Table structure for `users`
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `userid` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL,
  `password` varchar(40) NOT NULL,
  `nickname` varchar(120) NOT NULL,
  `avatar` varchar(120) DEFAULT NULL,
  `role` varchar(10) NOT NULL,
  `createtime` datetime NOT NULL,
  `updatetime` datetime NOT NULL,
  PRIMARY KEY (`userid`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('1', '2216828801@qq.com', 'e10adc3949ba59abbe56e057f20f883e', '2216828801', '9.jpg', 'admin', '2024-05-20 18:52:55', '2024-05-20 18:52:55');
INSERT INTO `users` VALUES ('2', '1623425148@qq.com', 'e10adc3949ba59abbe56e057f20f883e', '1623425148', '8.jpg', 'editor', '2024-05-20 18:57:16', '2024-05-20 18:57:16');
INSERT INTO `users` VALUES ('3', '3117623012@qq.com', 'e10adc3949ba59abbe56e057f20f883e', '3117623012', '8.jpg', 'user', '2024-05-20 20:37:17', '2024-05-20 20:37:17');
INSERT INTO `users` VALUES ('4', '1315771504@qq.com', 'e10adc3949ba59abbe56e057f20f883e', '1315771504', '4.jpg', 'editor', '2024-06-05 08:17:54', '2024-06-05 08:17:54');
